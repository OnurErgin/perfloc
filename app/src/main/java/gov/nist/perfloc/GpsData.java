// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gps_data.proto

package gov.nist.perfloc;

public final class GpsData {
  private GpsData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GpsReadingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfloc.GpsReading)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 sequence_nr = 1;</code>
     *
     * <pre>
     * Sequence number of a reading
     * </pre>
     */
    boolean hasSequenceNr();
    /**
     * <code>optional int32 sequence_nr = 1;</code>
     *
     * <pre>
     * Sequence number of a reading
     * </pre>
     */
    int getSequenceNr();

    /**
     * <code>optional int64 timestamp = 2;</code>
     *
     * <pre>
     * Time of this scan in milliseconds
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>optional int64 timestamp = 2;</code>
     *
     * <pre>
     * Time of this scan in milliseconds
     * </pre>
     */
    long getTimestamp();

    /**
     * <code>optional int32 last_dot_nr = 3;</code>
     *
     * <pre>
     * Location where the measurment was taken
     * </pre>
     */
    boolean hasLastDotNr();
    /**
     * <code>optional int32 last_dot_nr = 3;</code>
     *
     * <pre>
     * Location where the measurment was taken
     * </pre>
     */
    int getLastDotNr();

    /**
     * <code>optional .perfloc.GpsReading.Location location = 4;</code>
     *
     * <pre>
     * Location information of a GPS fix
     * </pre>
     */
    boolean hasLocation();
    /**
     * <code>optional .perfloc.GpsReading.Location location = 4;</code>
     *
     * <pre>
     * Location information of a GPS fix
     * </pre>
     */
    gov.nist.perfloc.GpsData.GpsReading.Location getLocation();
    /**
     * <code>optional .perfloc.GpsReading.Location location = 4;</code>
     *
     * <pre>
     * Location information of a GPS fix
     * </pre>
     */
    gov.nist.perfloc.GpsData.GpsReading.LocationOrBuilder getLocationOrBuilder();
  }
  /**
   * Protobuf type {@code perfloc.GpsReading}
   */
  public static final class GpsReading extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfloc.GpsReading)
      GpsReadingOrBuilder {
    // Use GpsReading.newBuilder() to construct.
    private GpsReading(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GpsReading(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GpsReading defaultInstance;
    public static GpsReading getDefaultInstance() {
      return defaultInstance;
    }

    public GpsReading getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GpsReading(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sequenceNr_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lastDotNr_ = input.readInt32();
              break;
            }
            case 34: {
              gov.nist.perfloc.GpsData.GpsReading.Location.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = location_.toBuilder();
              }
              location_ = input.readMessage(gov.nist.perfloc.GpsData.GpsReading.Location.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(location_);
                location_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gov.nist.perfloc.GpsData.internal_static_perfloc_GpsReading_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gov.nist.perfloc.GpsData.internal_static_perfloc_GpsReading_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gov.nist.perfloc.GpsData.GpsReading.class, gov.nist.perfloc.GpsData.GpsReading.Builder.class);
    }

    public static com.google.protobuf.Parser<GpsReading> PARSER =
        new com.google.protobuf.AbstractParser<GpsReading>() {
      public GpsReading parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GpsReading(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GpsReading> getParserForType() {
      return PARSER;
    }

    public interface LocationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfloc.GpsReading.Location)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional float accuracy = 1;</code>
       *
       * <pre>
       * Get the estimated accuracy of this location, in meters
       * </pre>
       */
      boolean hasAccuracy();
      /**
       * <code>optional float accuracy = 1;</code>
       *
       * <pre>
       * Get the estimated accuracy of this location, in meters
       * </pre>
       */
      float getAccuracy();

      /**
       * <code>optional double altitude = 2;</code>
       *
       * <pre>
       * Get the altitude if available, in meters above the WGS 84 reference ellipsoid
       * </pre>
       */
      boolean hasAltitude();
      /**
       * <code>optional double altitude = 2;</code>
       *
       * <pre>
       * Get the altitude if available, in meters above the WGS 84 reference ellipsoid
       * </pre>
       */
      double getAltitude();

      /**
       * <code>optional float bearing = 3;</code>
       *
       * <pre>
       * the bearing, in degrees
       * </pre>
       */
      boolean hasBearing();
      /**
       * <code>optional float bearing = 3;</code>
       *
       * <pre>
       * the bearing, in degrees
       * </pre>
       */
      float getBearing();

      /**
       * <code>optional int64 elapsed_realtime_nanos = 4;</code>
       *
       * <pre>
       * the time of this fix, in elapsed real-time since system boot
       * </pre>
       */
      boolean hasElapsedRealtimeNanos();
      /**
       * <code>optional int64 elapsed_realtime_nanos = 4;</code>
       *
       * <pre>
       * the time of this fix, in elapsed real-time since system boot
       * </pre>
       */
      long getElapsedRealtimeNanos();

      /**
       * <code>optional double latitude = 5;</code>
       *
       * <pre>
       * Get the latitude, in degrees
       * </pre>
       */
      boolean hasLatitude();
      /**
       * <code>optional double latitude = 5;</code>
       *
       * <pre>
       * Get the latitude, in degrees
       * </pre>
       */
      double getLatitude();

      /**
       * <code>optional double longitude = 6;</code>
       *
       * <pre>
       * the longitude, in degrees
       * </pre>
       */
      boolean hasLongitude();
      /**
       * <code>optional double longitude = 6;</code>
       *
       * <pre>
       * the longitude, in degrees
       * </pre>
       */
      double getLongitude();

      /**
       * <code>optional string provider = 7;</code>
       *
       * <pre>
       * the name of the provider that generated this fix
       * </pre>
       */
      boolean hasProvider();
      /**
       * <code>optional string provider = 7;</code>
       *
       * <pre>
       * the name of the provider that generated this fix
       * </pre>
       */
      java.lang.String getProvider();
      /**
       * <code>optional string provider = 7;</code>
       *
       * <pre>
       * the name of the provider that generated this fix
       * </pre>
       */
      com.google.protobuf.ByteString
          getProviderBytes();

      /**
       * <code>optional float speed = 8;</code>
       *
       * <pre>
       * the speed if it is available, in meters/second over ground
       * </pre>
       */
      boolean hasSpeed();
      /**
       * <code>optional float speed = 8;</code>
       *
       * <pre>
       * the speed if it is available, in meters/second over ground
       * </pre>
       */
      float getSpeed();

      /**
       * <code>optional int64 time = 9;</code>
       *
       * <pre>
       * the UTC time of this fix, in milliseconds since January 1, 1970
       * </pre>
       */
      boolean hasTime();
      /**
       * <code>optional int64 time = 9;</code>
       *
       * <pre>
       * the UTC time of this fix, in milliseconds since January 1, 1970
       * </pre>
       */
      long getTime();

      /**
       * <code>optional bool has_accuracy = 10;</code>
       *
       * <pre>
       * True if this location has an accuracy
       * </pre>
       */
      boolean hasHasAccuracy();
      /**
       * <code>optional bool has_accuracy = 10;</code>
       *
       * <pre>
       * True if this location has an accuracy
       * </pre>
       */
      boolean getHasAccuracy();

      /**
       * <code>optional bool has_altitude = 11;</code>
       *
       * <pre>
       * True if this location has an altitude
       * </pre>
       */
      boolean hasHasAltitude();
      /**
       * <code>optional bool has_altitude = 11;</code>
       *
       * <pre>
       * True if this location has an altitude
       * </pre>
       */
      boolean getHasAltitude();

      /**
       * <code>optional bool has_bearing = 12;</code>
       *
       * <pre>
       * True if this location has a bearing
       * </pre>
       */
      boolean hasHasBearing();
      /**
       * <code>optional bool has_bearing = 12;</code>
       *
       * <pre>
       * True if this location has a bearing
       * </pre>
       */
      boolean getHasBearing();

      /**
       * <code>optional bool has_speed = 13;</code>
       *
       * <pre>
       * True if this location has a speed
       * </pre>
       */
      boolean hasHasSpeed();
      /**
       * <code>optional bool has_speed = 13;</code>
       *
       * <pre>
       * True if this location has a speed
       * </pre>
       */
      boolean getHasSpeed();
    }
    /**
     * Protobuf type {@code perfloc.GpsReading.Location}
     */
    public static final class Location extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:perfloc.GpsReading.Location)
        LocationOrBuilder {
      // Use Location.newBuilder() to construct.
      private Location(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Location(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Location defaultInstance;
      public static Location getDefaultInstance() {
        return defaultInstance;
      }

      public Location getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Location(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 13: {
                bitField0_ |= 0x00000001;
                accuracy_ = input.readFloat();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                altitude_ = input.readDouble();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                bearing_ = input.readFloat();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                elapsedRealtimeNanos_ = input.readInt64();
                break;
              }
              case 41: {
                bitField0_ |= 0x00000010;
                latitude_ = input.readDouble();
                break;
              }
              case 49: {
                bitField0_ |= 0x00000020;
                longitude_ = input.readDouble();
                break;
              }
              case 58: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000040;
                provider_ = bs;
                break;
              }
              case 69: {
                bitField0_ |= 0x00000080;
                speed_ = input.readFloat();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000100;
                time_ = input.readInt64();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000200;
                hasAccuracy_ = input.readBool();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000400;
                hasAltitude_ = input.readBool();
                break;
              }
              case 96: {
                bitField0_ |= 0x00000800;
                hasBearing_ = input.readBool();
                break;
              }
              case 104: {
                bitField0_ |= 0x00001000;
                hasSpeed_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gov.nist.perfloc.GpsData.internal_static_perfloc_GpsReading_Location_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gov.nist.perfloc.GpsData.internal_static_perfloc_GpsReading_Location_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gov.nist.perfloc.GpsData.GpsReading.Location.class, gov.nist.perfloc.GpsData.GpsReading.Location.Builder.class);
      }

      public static com.google.protobuf.Parser<Location> PARSER =
          new com.google.protobuf.AbstractParser<Location>() {
        public Location parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Location(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Location> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ACCURACY_FIELD_NUMBER = 1;
      private float accuracy_;
      /**
       * <code>optional float accuracy = 1;</code>
       *
       * <pre>
       * Get the estimated accuracy of this location, in meters
       * </pre>
       */
      public boolean hasAccuracy() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float accuracy = 1;</code>
       *
       * <pre>
       * Get the estimated accuracy of this location, in meters
       * </pre>
       */
      public float getAccuracy() {
        return accuracy_;
      }

      public static final int ALTITUDE_FIELD_NUMBER = 2;
      private double altitude_;
      /**
       * <code>optional double altitude = 2;</code>
       *
       * <pre>
       * Get the altitude if available, in meters above the WGS 84 reference ellipsoid
       * </pre>
       */
      public boolean hasAltitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional double altitude = 2;</code>
       *
       * <pre>
       * Get the altitude if available, in meters above the WGS 84 reference ellipsoid
       * </pre>
       */
      public double getAltitude() {
        return altitude_;
      }

      public static final int BEARING_FIELD_NUMBER = 3;
      private float bearing_;
      /**
       * <code>optional float bearing = 3;</code>
       *
       * <pre>
       * the bearing, in degrees
       * </pre>
       */
      public boolean hasBearing() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float bearing = 3;</code>
       *
       * <pre>
       * the bearing, in degrees
       * </pre>
       */
      public float getBearing() {
        return bearing_;
      }

      public static final int ELAPSED_REALTIME_NANOS_FIELD_NUMBER = 4;
      private long elapsedRealtimeNanos_;
      /**
       * <code>optional int64 elapsed_realtime_nanos = 4;</code>
       *
       * <pre>
       * the time of this fix, in elapsed real-time since system boot
       * </pre>
       */
      public boolean hasElapsedRealtimeNanos() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 elapsed_realtime_nanos = 4;</code>
       *
       * <pre>
       * the time of this fix, in elapsed real-time since system boot
       * </pre>
       */
      public long getElapsedRealtimeNanos() {
        return elapsedRealtimeNanos_;
      }

      public static final int LATITUDE_FIELD_NUMBER = 5;
      private double latitude_;
      /**
       * <code>optional double latitude = 5;</code>
       *
       * <pre>
       * Get the latitude, in degrees
       * </pre>
       */
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double latitude = 5;</code>
       *
       * <pre>
       * Get the latitude, in degrees
       * </pre>
       */
      public double getLatitude() {
        return latitude_;
      }

      public static final int LONGITUDE_FIELD_NUMBER = 6;
      private double longitude_;
      /**
       * <code>optional double longitude = 6;</code>
       *
       * <pre>
       * the longitude, in degrees
       * </pre>
       */
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double longitude = 6;</code>
       *
       * <pre>
       * the longitude, in degrees
       * </pre>
       */
      public double getLongitude() {
        return longitude_;
      }

      public static final int PROVIDER_FIELD_NUMBER = 7;
      private java.lang.Object provider_;
      /**
       * <code>optional string provider = 7;</code>
       *
       * <pre>
       * the name of the provider that generated this fix
       * </pre>
       */
      public boolean hasProvider() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string provider = 7;</code>
       *
       * <pre>
       * the name of the provider that generated this fix
       * </pre>
       */
      public java.lang.String getProvider() {
        java.lang.Object ref = provider_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            provider_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string provider = 7;</code>
       *
       * <pre>
       * the name of the provider that generated this fix
       * </pre>
       */
      public com.google.protobuf.ByteString
          getProviderBytes() {
        java.lang.Object ref = provider_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          provider_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SPEED_FIELD_NUMBER = 8;
      private float speed_;
      /**
       * <code>optional float speed = 8;</code>
       *
       * <pre>
       * the speed if it is available, in meters/second over ground
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float speed = 8;</code>
       *
       * <pre>
       * the speed if it is available, in meters/second over ground
       * </pre>
       */
      public float getSpeed() {
        return speed_;
      }

      public static final int TIME_FIELD_NUMBER = 9;
      private long time_;
      /**
       * <code>optional int64 time = 9;</code>
       *
       * <pre>
       * the UTC time of this fix, in milliseconds since January 1, 1970
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int64 time = 9;</code>
       *
       * <pre>
       * the UTC time of this fix, in milliseconds since January 1, 1970
       * </pre>
       */
      public long getTime() {
        return time_;
      }

      public static final int HAS_ACCURACY_FIELD_NUMBER = 10;
      private boolean hasAccuracy_;
      /**
       * <code>optional bool has_accuracy = 10;</code>
       *
       * <pre>
       * True if this location has an accuracy
       * </pre>
       */
      public boolean hasHasAccuracy() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool has_accuracy = 10;</code>
       *
       * <pre>
       * True if this location has an accuracy
       * </pre>
       */
      public boolean getHasAccuracy() {
        return hasAccuracy_;
      }

      public static final int HAS_ALTITUDE_FIELD_NUMBER = 11;
      private boolean hasAltitude_;
      /**
       * <code>optional bool has_altitude = 11;</code>
       *
       * <pre>
       * True if this location has an altitude
       * </pre>
       */
      public boolean hasHasAltitude() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool has_altitude = 11;</code>
       *
       * <pre>
       * True if this location has an altitude
       * </pre>
       */
      public boolean getHasAltitude() {
        return hasAltitude_;
      }

      public static final int HAS_BEARING_FIELD_NUMBER = 12;
      private boolean hasBearing_;
      /**
       * <code>optional bool has_bearing = 12;</code>
       *
       * <pre>
       * True if this location has a bearing
       * </pre>
       */
      public boolean hasHasBearing() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool has_bearing = 12;</code>
       *
       * <pre>
       * True if this location has a bearing
       * </pre>
       */
      public boolean getHasBearing() {
        return hasBearing_;
      }

      public static final int HAS_SPEED_FIELD_NUMBER = 13;
      private boolean hasSpeed_;
      /**
       * <code>optional bool has_speed = 13;</code>
       *
       * <pre>
       * True if this location has a speed
       * </pre>
       */
      public boolean hasHasSpeed() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool has_speed = 13;</code>
       *
       * <pre>
       * True if this location has a speed
       * </pre>
       */
      public boolean getHasSpeed() {
        return hasSpeed_;
      }

      private void initFields() {
        accuracy_ = 0F;
        altitude_ = 0D;
        bearing_ = 0F;
        elapsedRealtimeNanos_ = 0L;
        latitude_ = 0D;
        longitude_ = 0D;
        provider_ = "";
        speed_ = 0F;
        time_ = 0L;
        hasAccuracy_ = false;
        hasAltitude_ = false;
        hasBearing_ = false;
        hasSpeed_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeFloat(1, accuracy_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, altitude_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, bearing_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt64(4, elapsedRealtimeNanos_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeDouble(5, latitude_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeDouble(6, longitude_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBytes(7, getProviderBytes());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeFloat(8, speed_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeInt64(9, time_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeBool(10, hasAccuracy_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBool(11, hasAltitude_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeBool(12, hasBearing_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeBool(13, hasSpeed_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, accuracy_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, altitude_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, bearing_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(4, elapsedRealtimeNanos_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, latitude_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, longitude_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(7, getProviderBytes());
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(8, speed_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(9, time_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(10, hasAccuracy_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(11, hasAltitude_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(12, hasBearing_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(13, hasSpeed_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static gov.nist.perfloc.GpsData.GpsReading.Location parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.GpsData.GpsReading.Location parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.GpsData.GpsReading.Location parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.GpsData.GpsReading.Location parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.GpsData.GpsReading.Location parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.GpsData.GpsReading.Location parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.GpsData.GpsReading.Location parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static gov.nist.perfloc.GpsData.GpsReading.Location parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.GpsData.GpsReading.Location parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.GpsData.GpsReading.Location parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(gov.nist.perfloc.GpsData.GpsReading.Location prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfloc.GpsReading.Location}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfloc.GpsReading.Location)
          gov.nist.perfloc.GpsData.GpsReading.LocationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gov.nist.perfloc.GpsData.internal_static_perfloc_GpsReading_Location_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gov.nist.perfloc.GpsData.internal_static_perfloc_GpsReading_Location_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gov.nist.perfloc.GpsData.GpsReading.Location.class, gov.nist.perfloc.GpsData.GpsReading.Location.Builder.class);
        }

        // Construct using gov.nist.perfloc.GpsData.GpsReading.Location.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          accuracy_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000001);
          altitude_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          bearing_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          elapsedRealtimeNanos_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          latitude_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000010);
          longitude_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000020);
          provider_ = "";
          bitField0_ = (bitField0_ & ~0x00000040);
          speed_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000080);
          time_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000100);
          hasAccuracy_ = false;
          bitField0_ = (bitField0_ & ~0x00000200);
          hasAltitude_ = false;
          bitField0_ = (bitField0_ & ~0x00000400);
          hasBearing_ = false;
          bitField0_ = (bitField0_ & ~0x00000800);
          hasSpeed_ = false;
          bitField0_ = (bitField0_ & ~0x00001000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return gov.nist.perfloc.GpsData.internal_static_perfloc_GpsReading_Location_descriptor;
        }

        public gov.nist.perfloc.GpsData.GpsReading.Location getDefaultInstanceForType() {
          return gov.nist.perfloc.GpsData.GpsReading.Location.getDefaultInstance();
        }

        public gov.nist.perfloc.GpsData.GpsReading.Location build() {
          gov.nist.perfloc.GpsData.GpsReading.Location result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public gov.nist.perfloc.GpsData.GpsReading.Location buildPartial() {
          gov.nist.perfloc.GpsData.GpsReading.Location result = new gov.nist.perfloc.GpsData.GpsReading.Location(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accuracy_ = accuracy_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.altitude_ = altitude_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.bearing_ = bearing_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.elapsedRealtimeNanos_ = elapsedRealtimeNanos_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.latitude_ = latitude_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.longitude_ = longitude_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.provider_ = provider_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.speed_ = speed_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.time_ = time_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.hasAccuracy_ = hasAccuracy_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.hasAltitude_ = hasAltitude_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.hasBearing_ = hasBearing_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.hasSpeed_ = hasSpeed_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof gov.nist.perfloc.GpsData.GpsReading.Location) {
            return mergeFrom((gov.nist.perfloc.GpsData.GpsReading.Location)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(gov.nist.perfloc.GpsData.GpsReading.Location other) {
          if (other == gov.nist.perfloc.GpsData.GpsReading.Location.getDefaultInstance()) return this;
          if (other.hasAccuracy()) {
            setAccuracy(other.getAccuracy());
          }
          if (other.hasAltitude()) {
            setAltitude(other.getAltitude());
          }
          if (other.hasBearing()) {
            setBearing(other.getBearing());
          }
          if (other.hasElapsedRealtimeNanos()) {
            setElapsedRealtimeNanos(other.getElapsedRealtimeNanos());
          }
          if (other.hasLatitude()) {
            setLatitude(other.getLatitude());
          }
          if (other.hasLongitude()) {
            setLongitude(other.getLongitude());
          }
          if (other.hasProvider()) {
            bitField0_ |= 0x00000040;
            provider_ = other.provider_;
            onChanged();
          }
          if (other.hasSpeed()) {
            setSpeed(other.getSpeed());
          }
          if (other.hasTime()) {
            setTime(other.getTime());
          }
          if (other.hasHasAccuracy()) {
            setHasAccuracy(other.getHasAccuracy());
          }
          if (other.hasHasAltitude()) {
            setHasAltitude(other.getHasAltitude());
          }
          if (other.hasHasBearing()) {
            setHasBearing(other.getHasBearing());
          }
          if (other.hasHasSpeed()) {
            setHasSpeed(other.getHasSpeed());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          gov.nist.perfloc.GpsData.GpsReading.Location parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (gov.nist.perfloc.GpsData.GpsReading.Location) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private float accuracy_ ;
        /**
         * <code>optional float accuracy = 1;</code>
         *
         * <pre>
         * Get the estimated accuracy of this location, in meters
         * </pre>
         */
        public boolean hasAccuracy() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional float accuracy = 1;</code>
         *
         * <pre>
         * Get the estimated accuracy of this location, in meters
         * </pre>
         */
        public float getAccuracy() {
          return accuracy_;
        }
        /**
         * <code>optional float accuracy = 1;</code>
         *
         * <pre>
         * Get the estimated accuracy of this location, in meters
         * </pre>
         */
        public Builder setAccuracy(float value) {
          bitField0_ |= 0x00000001;
          accuracy_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float accuracy = 1;</code>
         *
         * <pre>
         * Get the estimated accuracy of this location, in meters
         * </pre>
         */
        public Builder clearAccuracy() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accuracy_ = 0F;
          onChanged();
          return this;
        }

        private double altitude_ ;
        /**
         * <code>optional double altitude = 2;</code>
         *
         * <pre>
         * Get the altitude if available, in meters above the WGS 84 reference ellipsoid
         * </pre>
         */
        public boolean hasAltitude() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional double altitude = 2;</code>
         *
         * <pre>
         * Get the altitude if available, in meters above the WGS 84 reference ellipsoid
         * </pre>
         */
        public double getAltitude() {
          return altitude_;
        }
        /**
         * <code>optional double altitude = 2;</code>
         *
         * <pre>
         * Get the altitude if available, in meters above the WGS 84 reference ellipsoid
         * </pre>
         */
        public Builder setAltitude(double value) {
          bitField0_ |= 0x00000002;
          altitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double altitude = 2;</code>
         *
         * <pre>
         * Get the altitude if available, in meters above the WGS 84 reference ellipsoid
         * </pre>
         */
        public Builder clearAltitude() {
          bitField0_ = (bitField0_ & ~0x00000002);
          altitude_ = 0D;
          onChanged();
          return this;
        }

        private float bearing_ ;
        /**
         * <code>optional float bearing = 3;</code>
         *
         * <pre>
         * the bearing, in degrees
         * </pre>
         */
        public boolean hasBearing() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float bearing = 3;</code>
         *
         * <pre>
         * the bearing, in degrees
         * </pre>
         */
        public float getBearing() {
          return bearing_;
        }
        /**
         * <code>optional float bearing = 3;</code>
         *
         * <pre>
         * the bearing, in degrees
         * </pre>
         */
        public Builder setBearing(float value) {
          bitField0_ |= 0x00000004;
          bearing_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float bearing = 3;</code>
         *
         * <pre>
         * the bearing, in degrees
         * </pre>
         */
        public Builder clearBearing() {
          bitField0_ = (bitField0_ & ~0x00000004);
          bearing_ = 0F;
          onChanged();
          return this;
        }

        private long elapsedRealtimeNanos_ ;
        /**
         * <code>optional int64 elapsed_realtime_nanos = 4;</code>
         *
         * <pre>
         * the time of this fix, in elapsed real-time since system boot
         * </pre>
         */
        public boolean hasElapsedRealtimeNanos() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int64 elapsed_realtime_nanos = 4;</code>
         *
         * <pre>
         * the time of this fix, in elapsed real-time since system boot
         * </pre>
         */
        public long getElapsedRealtimeNanos() {
          return elapsedRealtimeNanos_;
        }
        /**
         * <code>optional int64 elapsed_realtime_nanos = 4;</code>
         *
         * <pre>
         * the time of this fix, in elapsed real-time since system boot
         * </pre>
         */
        public Builder setElapsedRealtimeNanos(long value) {
          bitField0_ |= 0x00000008;
          elapsedRealtimeNanos_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 elapsed_realtime_nanos = 4;</code>
         *
         * <pre>
         * the time of this fix, in elapsed real-time since system boot
         * </pre>
         */
        public Builder clearElapsedRealtimeNanos() {
          bitField0_ = (bitField0_ & ~0x00000008);
          elapsedRealtimeNanos_ = 0L;
          onChanged();
          return this;
        }

        private double latitude_ ;
        /**
         * <code>optional double latitude = 5;</code>
         *
         * <pre>
         * Get the latitude, in degrees
         * </pre>
         */
        public boolean hasLatitude() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional double latitude = 5;</code>
         *
         * <pre>
         * Get the latitude, in degrees
         * </pre>
         */
        public double getLatitude() {
          return latitude_;
        }
        /**
         * <code>optional double latitude = 5;</code>
         *
         * <pre>
         * Get the latitude, in degrees
         * </pre>
         */
        public Builder setLatitude(double value) {
          bitField0_ |= 0x00000010;
          latitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double latitude = 5;</code>
         *
         * <pre>
         * Get the latitude, in degrees
         * </pre>
         */
        public Builder clearLatitude() {
          bitField0_ = (bitField0_ & ~0x00000010);
          latitude_ = 0D;
          onChanged();
          return this;
        }

        private double longitude_ ;
        /**
         * <code>optional double longitude = 6;</code>
         *
         * <pre>
         * the longitude, in degrees
         * </pre>
         */
        public boolean hasLongitude() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional double longitude = 6;</code>
         *
         * <pre>
         * the longitude, in degrees
         * </pre>
         */
        public double getLongitude() {
          return longitude_;
        }
        /**
         * <code>optional double longitude = 6;</code>
         *
         * <pre>
         * the longitude, in degrees
         * </pre>
         */
        public Builder setLongitude(double value) {
          bitField0_ |= 0x00000020;
          longitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double longitude = 6;</code>
         *
         * <pre>
         * the longitude, in degrees
         * </pre>
         */
        public Builder clearLongitude() {
          bitField0_ = (bitField0_ & ~0x00000020);
          longitude_ = 0D;
          onChanged();
          return this;
        }

        private java.lang.Object provider_ = "";
        /**
         * <code>optional string provider = 7;</code>
         *
         * <pre>
         * the name of the provider that generated this fix
         * </pre>
         */
        public boolean hasProvider() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string provider = 7;</code>
         *
         * <pre>
         * the name of the provider that generated this fix
         * </pre>
         */
        public java.lang.String getProvider() {
          java.lang.Object ref = provider_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              provider_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string provider = 7;</code>
         *
         * <pre>
         * the name of the provider that generated this fix
         * </pre>
         */
        public com.google.protobuf.ByteString
            getProviderBytes() {
          java.lang.Object ref = provider_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            provider_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string provider = 7;</code>
         *
         * <pre>
         * the name of the provider that generated this fix
         * </pre>
         */
        public Builder setProvider(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          provider_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string provider = 7;</code>
         *
         * <pre>
         * the name of the provider that generated this fix
         * </pre>
         */
        public Builder clearProvider() {
          bitField0_ = (bitField0_ & ~0x00000040);
          provider_ = getDefaultInstance().getProvider();
          onChanged();
          return this;
        }
        /**
         * <code>optional string provider = 7;</code>
         *
         * <pre>
         * the name of the provider that generated this fix
         * </pre>
         */
        public Builder setProviderBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          provider_ = value;
          onChanged();
          return this;
        }

        private float speed_ ;
        /**
         * <code>optional float speed = 8;</code>
         *
         * <pre>
         * the speed if it is available, in meters/second over ground
         * </pre>
         */
        public boolean hasSpeed() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional float speed = 8;</code>
         *
         * <pre>
         * the speed if it is available, in meters/second over ground
         * </pre>
         */
        public float getSpeed() {
          return speed_;
        }
        /**
         * <code>optional float speed = 8;</code>
         *
         * <pre>
         * the speed if it is available, in meters/second over ground
         * </pre>
         */
        public Builder setSpeed(float value) {
          bitField0_ |= 0x00000080;
          speed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float speed = 8;</code>
         *
         * <pre>
         * the speed if it is available, in meters/second over ground
         * </pre>
         */
        public Builder clearSpeed() {
          bitField0_ = (bitField0_ & ~0x00000080);
          speed_ = 0F;
          onChanged();
          return this;
        }

        private long time_ ;
        /**
         * <code>optional int64 time = 9;</code>
         *
         * <pre>
         * the UTC time of this fix, in milliseconds since January 1, 1970
         * </pre>
         */
        public boolean hasTime() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional int64 time = 9;</code>
         *
         * <pre>
         * the UTC time of this fix, in milliseconds since January 1, 1970
         * </pre>
         */
        public long getTime() {
          return time_;
        }
        /**
         * <code>optional int64 time = 9;</code>
         *
         * <pre>
         * the UTC time of this fix, in milliseconds since January 1, 1970
         * </pre>
         */
        public Builder setTime(long value) {
          bitField0_ |= 0x00000100;
          time_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 time = 9;</code>
         *
         * <pre>
         * the UTC time of this fix, in milliseconds since January 1, 1970
         * </pre>
         */
        public Builder clearTime() {
          bitField0_ = (bitField0_ & ~0x00000100);
          time_ = 0L;
          onChanged();
          return this;
        }

        private boolean hasAccuracy_ ;
        /**
         * <code>optional bool has_accuracy = 10;</code>
         *
         * <pre>
         * True if this location has an accuracy
         * </pre>
         */
        public boolean hasHasAccuracy() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional bool has_accuracy = 10;</code>
         *
         * <pre>
         * True if this location has an accuracy
         * </pre>
         */
        public boolean getHasAccuracy() {
          return hasAccuracy_;
        }
        /**
         * <code>optional bool has_accuracy = 10;</code>
         *
         * <pre>
         * True if this location has an accuracy
         * </pre>
         */
        public Builder setHasAccuracy(boolean value) {
          bitField0_ |= 0x00000200;
          hasAccuracy_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool has_accuracy = 10;</code>
         *
         * <pre>
         * True if this location has an accuracy
         * </pre>
         */
        public Builder clearHasAccuracy() {
          bitField0_ = (bitField0_ & ~0x00000200);
          hasAccuracy_ = false;
          onChanged();
          return this;
        }

        private boolean hasAltitude_ ;
        /**
         * <code>optional bool has_altitude = 11;</code>
         *
         * <pre>
         * True if this location has an altitude
         * </pre>
         */
        public boolean hasHasAltitude() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional bool has_altitude = 11;</code>
         *
         * <pre>
         * True if this location has an altitude
         * </pre>
         */
        public boolean getHasAltitude() {
          return hasAltitude_;
        }
        /**
         * <code>optional bool has_altitude = 11;</code>
         *
         * <pre>
         * True if this location has an altitude
         * </pre>
         */
        public Builder setHasAltitude(boolean value) {
          bitField0_ |= 0x00000400;
          hasAltitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool has_altitude = 11;</code>
         *
         * <pre>
         * True if this location has an altitude
         * </pre>
         */
        public Builder clearHasAltitude() {
          bitField0_ = (bitField0_ & ~0x00000400);
          hasAltitude_ = false;
          onChanged();
          return this;
        }

        private boolean hasBearing_ ;
        /**
         * <code>optional bool has_bearing = 12;</code>
         *
         * <pre>
         * True if this location has a bearing
         * </pre>
         */
        public boolean hasHasBearing() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional bool has_bearing = 12;</code>
         *
         * <pre>
         * True if this location has a bearing
         * </pre>
         */
        public boolean getHasBearing() {
          return hasBearing_;
        }
        /**
         * <code>optional bool has_bearing = 12;</code>
         *
         * <pre>
         * True if this location has a bearing
         * </pre>
         */
        public Builder setHasBearing(boolean value) {
          bitField0_ |= 0x00000800;
          hasBearing_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool has_bearing = 12;</code>
         *
         * <pre>
         * True if this location has a bearing
         * </pre>
         */
        public Builder clearHasBearing() {
          bitField0_ = (bitField0_ & ~0x00000800);
          hasBearing_ = false;
          onChanged();
          return this;
        }

        private boolean hasSpeed_ ;
        /**
         * <code>optional bool has_speed = 13;</code>
         *
         * <pre>
         * True if this location has a speed
         * </pre>
         */
        public boolean hasHasSpeed() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional bool has_speed = 13;</code>
         *
         * <pre>
         * True if this location has a speed
         * </pre>
         */
        public boolean getHasSpeed() {
          return hasSpeed_;
        }
        /**
         * <code>optional bool has_speed = 13;</code>
         *
         * <pre>
         * True if this location has a speed
         * </pre>
         */
        public Builder setHasSpeed(boolean value) {
          bitField0_ |= 0x00001000;
          hasSpeed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool has_speed = 13;</code>
         *
         * <pre>
         * True if this location has a speed
         * </pre>
         */
        public Builder clearHasSpeed() {
          bitField0_ = (bitField0_ & ~0x00001000);
          hasSpeed_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:perfloc.GpsReading.Location)
      }

      static {
        defaultInstance = new Location(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:perfloc.GpsReading.Location)
    }

    private int bitField0_;
    public static final int SEQUENCE_NR_FIELD_NUMBER = 1;
    private int sequenceNr_;
    /**
     * <code>optional int32 sequence_nr = 1;</code>
     *
     * <pre>
     * Sequence number of a reading
     * </pre>
     */
    public boolean hasSequenceNr() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 sequence_nr = 1;</code>
     *
     * <pre>
     * Sequence number of a reading
     * </pre>
     */
    public int getSequenceNr() {
      return sequenceNr_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    /**
     * <code>optional int64 timestamp = 2;</code>
     *
     * <pre>
     * Time of this scan in milliseconds
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 timestamp = 2;</code>
     *
     * <pre>
     * Time of this scan in milliseconds
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int LAST_DOT_NR_FIELD_NUMBER = 3;
    private int lastDotNr_;
    /**
     * <code>optional int32 last_dot_nr = 3;</code>
     *
     * <pre>
     * Location where the measurment was taken
     * </pre>
     */
    public boolean hasLastDotNr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 last_dot_nr = 3;</code>
     *
     * <pre>
     * Location where the measurment was taken
     * </pre>
     */
    public int getLastDotNr() {
      return lastDotNr_;
    }

    public static final int LOCATION_FIELD_NUMBER = 4;
    private gov.nist.perfloc.GpsData.GpsReading.Location location_;
    /**
     * <code>optional .perfloc.GpsReading.Location location = 4;</code>
     *
     * <pre>
     * Location information of a GPS fix
     * </pre>
     */
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .perfloc.GpsReading.Location location = 4;</code>
     *
     * <pre>
     * Location information of a GPS fix
     * </pre>
     */
    public gov.nist.perfloc.GpsData.GpsReading.Location getLocation() {
      return location_;
    }
    /**
     * <code>optional .perfloc.GpsReading.Location location = 4;</code>
     *
     * <pre>
     * Location information of a GPS fix
     * </pre>
     */
    public gov.nist.perfloc.GpsData.GpsReading.LocationOrBuilder getLocationOrBuilder() {
      return location_;
    }

    private void initFields() {
      sequenceNr_ = 0;
      timestamp_ = 0L;
      lastDotNr_ = 0;
      location_ = gov.nist.perfloc.GpsData.GpsReading.Location.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, sequenceNr_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lastDotNr_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, location_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sequenceNr_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lastDotNr_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, location_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static gov.nist.perfloc.GpsData.GpsReading parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gov.nist.perfloc.GpsData.GpsReading parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gov.nist.perfloc.GpsData.GpsReading parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gov.nist.perfloc.GpsData.GpsReading parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gov.nist.perfloc.GpsData.GpsReading parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gov.nist.perfloc.GpsData.GpsReading parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static gov.nist.perfloc.GpsData.GpsReading parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static gov.nist.perfloc.GpsData.GpsReading parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static gov.nist.perfloc.GpsData.GpsReading parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gov.nist.perfloc.GpsData.GpsReading parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(gov.nist.perfloc.GpsData.GpsReading prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfloc.GpsReading}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfloc.GpsReading)
        gov.nist.perfloc.GpsData.GpsReadingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gov.nist.perfloc.GpsData.internal_static_perfloc_GpsReading_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gov.nist.perfloc.GpsData.internal_static_perfloc_GpsReading_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gov.nist.perfloc.GpsData.GpsReading.class, gov.nist.perfloc.GpsData.GpsReading.Builder.class);
      }

      // Construct using gov.nist.perfloc.GpsData.GpsReading.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLocationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sequenceNr_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        lastDotNr_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (locationBuilder_ == null) {
          location_ = gov.nist.perfloc.GpsData.GpsReading.Location.getDefaultInstance();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gov.nist.perfloc.GpsData.internal_static_perfloc_GpsReading_descriptor;
      }

      public gov.nist.perfloc.GpsData.GpsReading getDefaultInstanceForType() {
        return gov.nist.perfloc.GpsData.GpsReading.getDefaultInstance();
      }

      public gov.nist.perfloc.GpsData.GpsReading build() {
        gov.nist.perfloc.GpsData.GpsReading result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gov.nist.perfloc.GpsData.GpsReading buildPartial() {
        gov.nist.perfloc.GpsData.GpsReading result = new gov.nist.perfloc.GpsData.GpsReading(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sequenceNr_ = sequenceNr_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lastDotNr_ = lastDotNr_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (locationBuilder_ == null) {
          result.location_ = location_;
        } else {
          result.location_ = locationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gov.nist.perfloc.GpsData.GpsReading) {
          return mergeFrom((gov.nist.perfloc.GpsData.GpsReading)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gov.nist.perfloc.GpsData.GpsReading other) {
        if (other == gov.nist.perfloc.GpsData.GpsReading.getDefaultInstance()) return this;
        if (other.hasSequenceNr()) {
          setSequenceNr(other.getSequenceNr());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasLastDotNr()) {
          setLastDotNr(other.getLastDotNr());
        }
        if (other.hasLocation()) {
          mergeLocation(other.getLocation());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gov.nist.perfloc.GpsData.GpsReading parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gov.nist.perfloc.GpsData.GpsReading) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sequenceNr_ ;
      /**
       * <code>optional int32 sequence_nr = 1;</code>
       *
       * <pre>
       * Sequence number of a reading
       * </pre>
       */
      public boolean hasSequenceNr() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 sequence_nr = 1;</code>
       *
       * <pre>
       * Sequence number of a reading
       * </pre>
       */
      public int getSequenceNr() {
        return sequenceNr_;
      }
      /**
       * <code>optional int32 sequence_nr = 1;</code>
       *
       * <pre>
       * Sequence number of a reading
       * </pre>
       */
      public Builder setSequenceNr(int value) {
        bitField0_ |= 0x00000001;
        sequenceNr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sequence_nr = 1;</code>
       *
       * <pre>
       * Sequence number of a reading
       * </pre>
       */
      public Builder clearSequenceNr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sequenceNr_ = 0;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>optional int64 timestamp = 2;</code>
       *
       * <pre>
       * Time of this scan in milliseconds
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 timestamp = 2;</code>
       *
       * <pre>
       * Time of this scan in milliseconds
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional int64 timestamp = 2;</code>
       *
       * <pre>
       * Time of this scan in milliseconds
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timestamp = 2;</code>
       *
       * <pre>
       * Time of this scan in milliseconds
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private int lastDotNr_ ;
      /**
       * <code>optional int32 last_dot_nr = 3;</code>
       *
       * <pre>
       * Location where the measurment was taken
       * </pre>
       */
      public boolean hasLastDotNr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 last_dot_nr = 3;</code>
       *
       * <pre>
       * Location where the measurment was taken
       * </pre>
       */
      public int getLastDotNr() {
        return lastDotNr_;
      }
      /**
       * <code>optional int32 last_dot_nr = 3;</code>
       *
       * <pre>
       * Location where the measurment was taken
       * </pre>
       */
      public Builder setLastDotNr(int value) {
        bitField0_ |= 0x00000004;
        lastDotNr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 last_dot_nr = 3;</code>
       *
       * <pre>
       * Location where the measurment was taken
       * </pre>
       */
      public Builder clearLastDotNr() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lastDotNr_ = 0;
        onChanged();
        return this;
      }

      private gov.nist.perfloc.GpsData.GpsReading.Location location_ = gov.nist.perfloc.GpsData.GpsReading.Location.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          gov.nist.perfloc.GpsData.GpsReading.Location, gov.nist.perfloc.GpsData.GpsReading.Location.Builder, gov.nist.perfloc.GpsData.GpsReading.LocationOrBuilder> locationBuilder_;
      /**
       * <code>optional .perfloc.GpsReading.Location location = 4;</code>
       *
       * <pre>
       * Location information of a GPS fix
       * </pre>
       */
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .perfloc.GpsReading.Location location = 4;</code>
       *
       * <pre>
       * Location information of a GPS fix
       * </pre>
       */
      public gov.nist.perfloc.GpsData.GpsReading.Location getLocation() {
        if (locationBuilder_ == null) {
          return location_;
        } else {
          return locationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .perfloc.GpsReading.Location location = 4;</code>
       *
       * <pre>
       * Location information of a GPS fix
       * </pre>
       */
      public Builder setLocation(gov.nist.perfloc.GpsData.GpsReading.Location value) {
        if (locationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          location_ = value;
          onChanged();
        } else {
          locationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .perfloc.GpsReading.Location location = 4;</code>
       *
       * <pre>
       * Location information of a GPS fix
       * </pre>
       */
      public Builder setLocation(
          gov.nist.perfloc.GpsData.GpsReading.Location.Builder builderForValue) {
        if (locationBuilder_ == null) {
          location_ = builderForValue.build();
          onChanged();
        } else {
          locationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .perfloc.GpsReading.Location location = 4;</code>
       *
       * <pre>
       * Location information of a GPS fix
       * </pre>
       */
      public Builder mergeLocation(gov.nist.perfloc.GpsData.GpsReading.Location value) {
        if (locationBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              location_ != gov.nist.perfloc.GpsData.GpsReading.Location.getDefaultInstance()) {
            location_ =
              gov.nist.perfloc.GpsData.GpsReading.Location.newBuilder(location_).mergeFrom(value).buildPartial();
          } else {
            location_ = value;
          }
          onChanged();
        } else {
          locationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .perfloc.GpsReading.Location location = 4;</code>
       *
       * <pre>
       * Location information of a GPS fix
       * </pre>
       */
      public Builder clearLocation() {
        if (locationBuilder_ == null) {
          location_ = gov.nist.perfloc.GpsData.GpsReading.Location.getDefaultInstance();
          onChanged();
        } else {
          locationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .perfloc.GpsReading.Location location = 4;</code>
       *
       * <pre>
       * Location information of a GPS fix
       * </pre>
       */
      public gov.nist.perfloc.GpsData.GpsReading.Location.Builder getLocationBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLocationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .perfloc.GpsReading.Location location = 4;</code>
       *
       * <pre>
       * Location information of a GPS fix
       * </pre>
       */
      public gov.nist.perfloc.GpsData.GpsReading.LocationOrBuilder getLocationOrBuilder() {
        if (locationBuilder_ != null) {
          return locationBuilder_.getMessageOrBuilder();
        } else {
          return location_;
        }
      }
      /**
       * <code>optional .perfloc.GpsReading.Location location = 4;</code>
       *
       * <pre>
       * Location information of a GPS fix
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          gov.nist.perfloc.GpsData.GpsReading.Location, gov.nist.perfloc.GpsData.GpsReading.Location.Builder, gov.nist.perfloc.GpsData.GpsReading.LocationOrBuilder> 
          getLocationFieldBuilder() {
        if (locationBuilder_ == null) {
          locationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              gov.nist.perfloc.GpsData.GpsReading.Location, gov.nist.perfloc.GpsData.GpsReading.Location.Builder, gov.nist.perfloc.GpsData.GpsReading.LocationOrBuilder>(
                  getLocation(),
                  getParentForChildren(),
                  isClean());
          location_ = null;
        }
        return locationBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:perfloc.GpsReading)
    }

    static {
      defaultInstance = new GpsReading(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:perfloc.GpsReading)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfloc_GpsReading_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfloc_GpsReading_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfloc_GpsReading_Location_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfloc_GpsReading_Location_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016gps_data.proto\022\007perfloc\"\203\003\n\nGpsReading" +
      "\022\023\n\013sequence_nr\030\001 \001(\005\022\021\n\ttimestamp\030\002 \001(\003" +
      "\022\023\n\013last_dot_nr\030\003 \001(\005\022.\n\010location\030\004 \001(\0132" +
      "\034.perfloc.GpsReading.Location\032\207\002\n\010Locati" +
      "on\022\020\n\010accuracy\030\001 \001(\002\022\020\n\010altitude\030\002 \001(\001\022\017" +
      "\n\007bearing\030\003 \001(\002\022\036\n\026elapsed_realtime_nano" +
      "s\030\004 \001(\003\022\020\n\010latitude\030\005 \001(\001\022\021\n\tlongitude\030\006" +
      " \001(\001\022\020\n\010provider\030\007 \001(\t\022\r\n\005speed\030\010 \001(\002\022\014\n" +
      "\004time\030\t \001(\003\022\024\n\014has_accuracy\030\n \001(\010\022\024\n\014has" +
      "_altitude\030\013 \001(\010\022\023\n\013has_bearing\030\014 \001(\010\022\021\n\t",
      "has_speed\030\r \001(\010B\022\n\020gov.nist.perfloc"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_perfloc_GpsReading_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfloc_GpsReading_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfloc_GpsReading_descriptor,
        new java.lang.String[] { "SequenceNr", "Timestamp", "LastDotNr", "Location", });
    internal_static_perfloc_GpsReading_Location_descriptor =
      internal_static_perfloc_GpsReading_descriptor.getNestedTypes().get(0);
    internal_static_perfloc_GpsReading_Location_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfloc_GpsReading_Location_descriptor,
        new java.lang.String[] { "Accuracy", "Altitude", "Bearing", "ElapsedRealtimeNanos", "Latitude", "Longitude", "Provider", "Speed", "Time", "HasAccuracy", "HasAltitude", "HasBearing", "HasSpeed", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
