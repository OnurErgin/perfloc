// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cellular_data.proto

package gov.nist.perfloc;

public final class CellularData {
  private CellularData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CellularReadingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfloc.CellularReading)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 sequence_nr = 1;</code>
     *
     * <pre>
     * Sequence number of a reading
     * </pre>
     */
    boolean hasSequenceNr();
    /**
     * <code>optional int32 sequence_nr = 1;</code>
     *
     * <pre>
     * Sequence number of a reading
     * </pre>
     */
    int getSequenceNr();

    /**
     * <code>optional int64 timestamp = 2;</code>
     *
     * <pre>
     * Time of this scan in milliseconds
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>optional int64 timestamp = 2;</code>
     *
     * <pre>
     * Time of this scan in milliseconds
     * </pre>
     */
    long getTimestamp();

    /**
     * <code>optional int32 last_dot_nr = 3;</code>
     *
     * <pre>
     * Location where the measurment was taken
     * </pre>
     */
    boolean hasLastDotNr();
    /**
     * <code>optional int32 last_dot_nr = 3;</code>
     *
     * <pre>
     * Location where the measurment was taken
     * </pre>
     */
    int getLastDotNr();

    /**
     * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
     *
     * <pre>
     * Format defining a cellular signal
     * </pre>
     */
    java.util.List<gov.nist.perfloc.CellularData.CellularReading.CellInfo> 
        getCellularInfoList();
    /**
     * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
     *
     * <pre>
     * Format defining a cellular signal
     * </pre>
     */
    gov.nist.perfloc.CellularData.CellularReading.CellInfo getCellularInfo(int index);
    /**
     * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
     *
     * <pre>
     * Format defining a cellular signal
     * </pre>
     */
    int getCellularInfoCount();
    /**
     * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
     *
     * <pre>
     * Format defining a cellular signal
     * </pre>
     */
    java.util.List<? extends gov.nist.perfloc.CellularData.CellularReading.CellInfoOrBuilder> 
        getCellularInfoOrBuilderList();
    /**
     * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
     *
     * <pre>
     * Format defining a cellular signal
     * </pre>
     */
    gov.nist.perfloc.CellularData.CellularReading.CellInfoOrBuilder getCellularInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code perfloc.CellularReading}
   */
  public static final class CellularReading extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfloc.CellularReading)
      CellularReadingOrBuilder {
    // Use CellularReading.newBuilder() to construct.
    private CellularReading(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CellularReading(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CellularReading defaultInstance;
    public static CellularReading getDefaultInstance() {
      return defaultInstance;
    }

    public CellularReading getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CellularReading(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sequenceNr_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lastDotNr_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cellularInfo_ = new java.util.ArrayList<gov.nist.perfloc.CellularData.CellularReading.CellInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              cellularInfo_.add(input.readMessage(gov.nist.perfloc.CellularData.CellularReading.CellInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cellularInfo_ = java.util.Collections.unmodifiableList(cellularInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gov.nist.perfloc.CellularData.CellularReading.class, gov.nist.perfloc.CellularData.CellularReading.Builder.class);
    }

    public static com.google.protobuf.Parser<CellularReading> PARSER =
        new com.google.protobuf.AbstractParser<CellularReading>() {
      public CellularReading parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CellularReading(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CellularReading> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code perfloc.CellularReading.NetworkType}
     */
    public enum NetworkType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CDMA = 0;</code>
       */
      CDMA(0, 0),
      /**
       * <code>GSM = 1;</code>
       */
      GSM(1, 1),
      /**
       * <code>LTE = 2;</code>
       */
      LTE(2, 2),
      /**
       * <code>WCDMA = 3;</code>
       */
      WCDMA(3, 3),
      ;

      /**
       * <code>CDMA = 0;</code>
       */
      public static final int CDMA_VALUE = 0;
      /**
       * <code>GSM = 1;</code>
       */
      public static final int GSM_VALUE = 1;
      /**
       * <code>LTE = 2;</code>
       */
      public static final int LTE_VALUE = 2;
      /**
       * <code>WCDMA = 3;</code>
       */
      public static final int WCDMA_VALUE = 3;


      public final int getNumber() { return value; }

      public static NetworkType valueOf(int value) {
        switch (value) {
          case 0: return CDMA;
          case 1: return GSM;
          case 2: return LTE;
          case 3: return WCDMA;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NetworkType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<NetworkType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NetworkType>() {
              public NetworkType findValueByNumber(int number) {
                return NetworkType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return gov.nist.perfloc.CellularData.CellularReading.getDescriptor().getEnumTypes().get(0);
      }

      private static final NetworkType[] VALUES = values();

      public static NetworkType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private NetworkType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfloc.CellularReading.NetworkType)
    }

    public interface CellInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfloc.CellularReading.CellInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 timestamp = 1;</code>
       *
       * <pre>
       * Approximate time of this cell information in nanos since boot
       * </pre>
       */
      boolean hasTimestamp();
      /**
       * <code>optional uint64 timestamp = 1;</code>
       *
       * <pre>
       * Approximate time of this cell information in nanos since boot
       * </pre>
       */
      long getTimestamp();

      /**
       * <code>optional int32 hash_code = 2;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      boolean hasHashCode();
      /**
       * <code>optional int32 hash_code = 2;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      int getHashCode();

      /**
       * <code>optional bool registered = 3;</code>
       *
       * <pre>
       * True if this cell is registered to the mobile network
       * </pre>
       */
      boolean hasRegistered();
      /**
       * <code>optional bool registered = 3;</code>
       *
       * <pre>
       * True if this cell is registered to the mobile network
       * </pre>
       */
      boolean getRegistered();

      /**
       * <code>optional .perfloc.CellularReading.NetworkType network_type = 4;</code>
       *
       * <pre>
       * CDMA / GSM / LTE / WCDMA
       * </pre>
       */
      boolean hasNetworkType();
      /**
       * <code>optional .perfloc.CellularReading.NetworkType network_type = 4;</code>
       *
       * <pre>
       * CDMA / GSM / LTE / WCDMA
       * </pre>
       */
      gov.nist.perfloc.CellularData.CellularReading.NetworkType getNetworkType();

      /**
       * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
       *
       * <pre>
       * CDMA parameters
       * </pre>
       */
      boolean hasCdmaIdentity();
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
       *
       * <pre>
       * CDMA parameters
       * </pre>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda getCdmaIdentity();
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
       *
       * <pre>
       * CDMA parameters
       * </pre>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmdaOrBuilder getCdmaIdentityOrBuilder();

      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
       */
      boolean hasCdmaSignalStrength();
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma getCdmaSignalStrength();
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdmaOrBuilder getCdmaSignalStrengthOrBuilder();

      /**
       * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
       *
       * <pre>
       * GSM parameters
       * </pre>
       */
      boolean hasGsmIdentity();
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
       *
       * <pre>
       * GSM parameters
       * </pre>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm getGsmIdentity();
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
       *
       * <pre>
       * GSM parameters
       * </pre>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsmOrBuilder getGsmIdentityOrBuilder();

      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
       */
      boolean hasGsmSignalStrength();
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm getGsmSignalStrength();
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsmOrBuilder getGsmSignalStrengthOrBuilder();

      /**
       * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
       *
       * <pre>
       * LTE parameters
       * </pre>
       */
      boolean hasLteIdentity();
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
       *
       * <pre>
       * LTE parameters
       * </pre>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte getLteIdentity();
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
       *
       * <pre>
       * LTE parameters
       * </pre>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellIdentityLteOrBuilder getLteIdentityOrBuilder();

      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
       */
      boolean hasLteSignalStrength();
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte getLteSignalStrength();
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLteOrBuilder getLteSignalStrengthOrBuilder();

      /**
       * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
       *
       * <pre>
       * WCDMA parameters 
       * </pre>
       */
      boolean hasWcdmaIdentity();
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
       *
       * <pre>
       * WCDMA parameters 
       * </pre>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma getWcdmaIdentity();
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
       *
       * <pre>
       * WCDMA parameters 
       * </pre>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdmaOrBuilder getWcdmaIdentityOrBuilder();

      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
       */
      boolean hasWcdmaSignalStrength();
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma getWcdmaSignalStrength();
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
       */
      gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdmaOrBuilder getWcdmaSignalStrengthOrBuilder();
    }
    /**
     * Protobuf type {@code perfloc.CellularReading.CellInfo}
     */
    public static final class CellInfo extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:perfloc.CellularReading.CellInfo)
        CellInfoOrBuilder {
      // Use CellInfo.newBuilder() to construct.
      private CellInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CellInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CellInfo defaultInstance;
      public static CellInfo getDefaultInstance() {
        return defaultInstance;
      }

      public CellInfo getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CellInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                timestamp_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                hashCode_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                registered_ = input.readBool();
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                gov.nist.perfloc.CellularData.CellularReading.NetworkType value = gov.nist.perfloc.CellularData.CellularReading.NetworkType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  networkType_ = value;
                }
                break;
              }
              case 42: {
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.Builder subBuilder = null;
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                  subBuilder = cdmaIdentity_.toBuilder();
                }
                cdmaIdentity_ = input.readMessage(gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(cdmaIdentity_);
                  cdmaIdentity_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000010;
                break;
              }
              case 50: {
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.Builder subBuilder = null;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                  subBuilder = cdmaSignalStrength_.toBuilder();
                }
                cdmaSignalStrength_ = input.readMessage(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(cdmaSignalStrength_);
                  cdmaSignalStrength_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000020;
                break;
              }
              case 58: {
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.Builder subBuilder = null;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                  subBuilder = gsmIdentity_.toBuilder();
                }
                gsmIdentity_ = input.readMessage(gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(gsmIdentity_);
                  gsmIdentity_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000040;
                break;
              }
              case 66: {
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.Builder subBuilder = null;
                if (((bitField0_ & 0x00000080) == 0x00000080)) {
                  subBuilder = gsmSignalStrength_.toBuilder();
                }
                gsmSignalStrength_ = input.readMessage(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(gsmSignalStrength_);
                  gsmSignalStrength_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000080;
                break;
              }
              case 74: {
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.Builder subBuilder = null;
                if (((bitField0_ & 0x00000100) == 0x00000100)) {
                  subBuilder = lteIdentity_.toBuilder();
                }
                lteIdentity_ = input.readMessage(gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lteIdentity_);
                  lteIdentity_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000100;
                break;
              }
              case 82: {
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.Builder subBuilder = null;
                if (((bitField0_ & 0x00000200) == 0x00000200)) {
                  subBuilder = lteSignalStrength_.toBuilder();
                }
                lteSignalStrength_ = input.readMessage(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lteSignalStrength_);
                  lteSignalStrength_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000200;
                break;
              }
              case 90: {
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.Builder subBuilder = null;
                if (((bitField0_ & 0x00000400) == 0x00000400)) {
                  subBuilder = wcdmaIdentity_.toBuilder();
                }
                wcdmaIdentity_ = input.readMessage(gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(wcdmaIdentity_);
                  wcdmaIdentity_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000400;
                break;
              }
              case 98: {
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.Builder subBuilder = null;
                if (((bitField0_ & 0x00000800) == 0x00000800)) {
                  subBuilder = wcdmaSignalStrength_.toBuilder();
                }
                wcdmaSignalStrength_ = input.readMessage(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(wcdmaSignalStrength_);
                  wcdmaSignalStrength_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000800;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gov.nist.perfloc.CellularData.CellularReading.CellInfo.class, gov.nist.perfloc.CellularData.CellularReading.CellInfo.Builder.class);
      }

      public static com.google.protobuf.Parser<CellInfo> PARSER =
          new com.google.protobuf.AbstractParser<CellInfo>() {
        public CellInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CellInfo(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CellInfo> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int TIMESTAMP_FIELD_NUMBER = 1;
      private long timestamp_;
      /**
       * <code>optional uint64 timestamp = 1;</code>
       *
       * <pre>
       * Approximate time of this cell information in nanos since boot
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 timestamp = 1;</code>
       *
       * <pre>
       * Approximate time of this cell information in nanos since boot
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }

      public static final int HASH_CODE_FIELD_NUMBER = 2;
      private int hashCode_;
      /**
       * <code>optional int32 hash_code = 2;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public boolean hasHashCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 hash_code = 2;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public int getHashCode() {
        return hashCode_;
      }

      public static final int REGISTERED_FIELD_NUMBER = 3;
      private boolean registered_;
      /**
       * <code>optional bool registered = 3;</code>
       *
       * <pre>
       * True if this cell is registered to the mobile network
       * </pre>
       */
      public boolean hasRegistered() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool registered = 3;</code>
       *
       * <pre>
       * True if this cell is registered to the mobile network
       * </pre>
       */
      public boolean getRegistered() {
        return registered_;
      }

      public static final int NETWORK_TYPE_FIELD_NUMBER = 4;
      private gov.nist.perfloc.CellularData.CellularReading.NetworkType networkType_;
      /**
       * <code>optional .perfloc.CellularReading.NetworkType network_type = 4;</code>
       *
       * <pre>
       * CDMA / GSM / LTE / WCDMA
       * </pre>
       */
      public boolean hasNetworkType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .perfloc.CellularReading.NetworkType network_type = 4;</code>
       *
       * <pre>
       * CDMA / GSM / LTE / WCDMA
       * </pre>
       */
      public gov.nist.perfloc.CellularData.CellularReading.NetworkType getNetworkType() {
        return networkType_;
      }

      public static final int CDMA_IDENTITY_FIELD_NUMBER = 5;
      private gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda cdmaIdentity_;
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
       *
       * <pre>
       * CDMA parameters
       * </pre>
       */
      public boolean hasCdmaIdentity() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
       *
       * <pre>
       * CDMA parameters
       * </pre>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda getCdmaIdentity() {
        return cdmaIdentity_;
      }
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
       *
       * <pre>
       * CDMA parameters
       * </pre>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmdaOrBuilder getCdmaIdentityOrBuilder() {
        return cdmaIdentity_;
      }

      public static final int CDMA_SIGNAL_STRENGTH_FIELD_NUMBER = 6;
      private gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma cdmaSignalStrength_;
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
       */
      public boolean hasCdmaSignalStrength() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma getCdmaSignalStrength() {
        return cdmaSignalStrength_;
      }
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdmaOrBuilder getCdmaSignalStrengthOrBuilder() {
        return cdmaSignalStrength_;
      }

      public static final int GSM_IDENTITY_FIELD_NUMBER = 7;
      private gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm gsmIdentity_;
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
       *
       * <pre>
       * GSM parameters
       * </pre>
       */
      public boolean hasGsmIdentity() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
       *
       * <pre>
       * GSM parameters
       * </pre>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm getGsmIdentity() {
        return gsmIdentity_;
      }
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
       *
       * <pre>
       * GSM parameters
       * </pre>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsmOrBuilder getGsmIdentityOrBuilder() {
        return gsmIdentity_;
      }

      public static final int GSM_SIGNAL_STRENGTH_FIELD_NUMBER = 8;
      private gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm gsmSignalStrength_;
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
       */
      public boolean hasGsmSignalStrength() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm getGsmSignalStrength() {
        return gsmSignalStrength_;
      }
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsmOrBuilder getGsmSignalStrengthOrBuilder() {
        return gsmSignalStrength_;
      }

      public static final int LTE_IDENTITY_FIELD_NUMBER = 9;
      private gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte lteIdentity_;
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
       *
       * <pre>
       * LTE parameters
       * </pre>
       */
      public boolean hasLteIdentity() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
       *
       * <pre>
       * LTE parameters
       * </pre>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte getLteIdentity() {
        return lteIdentity_;
      }
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
       *
       * <pre>
       * LTE parameters
       * </pre>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellIdentityLteOrBuilder getLteIdentityOrBuilder() {
        return lteIdentity_;
      }

      public static final int LTE_SIGNAL_STRENGTH_FIELD_NUMBER = 10;
      private gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte lteSignalStrength_;
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
       */
      public boolean hasLteSignalStrength() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte getLteSignalStrength() {
        return lteSignalStrength_;
      }
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLteOrBuilder getLteSignalStrengthOrBuilder() {
        return lteSignalStrength_;
      }

      public static final int WCDMA_IDENTITY_FIELD_NUMBER = 11;
      private gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma wcdmaIdentity_;
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
       *
       * <pre>
       * WCDMA parameters 
       * </pre>
       */
      public boolean hasWcdmaIdentity() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
       *
       * <pre>
       * WCDMA parameters 
       * </pre>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma getWcdmaIdentity() {
        return wcdmaIdentity_;
      }
      /**
       * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
       *
       * <pre>
       * WCDMA parameters 
       * </pre>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdmaOrBuilder getWcdmaIdentityOrBuilder() {
        return wcdmaIdentity_;
      }

      public static final int WCDMA_SIGNAL_STRENGTH_FIELD_NUMBER = 12;
      private gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma wcdmaSignalStrength_;
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
       */
      public boolean hasWcdmaSignalStrength() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma getWcdmaSignalStrength() {
        return wcdmaSignalStrength_;
      }
      /**
       * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdmaOrBuilder getWcdmaSignalStrengthOrBuilder() {
        return wcdmaSignalStrength_;
      }

      private void initFields() {
        timestamp_ = 0L;
        hashCode_ = 0;
        registered_ = false;
        networkType_ = gov.nist.perfloc.CellularData.CellularReading.NetworkType.CDMA;
        cdmaIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.getDefaultInstance();
        cdmaSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.getDefaultInstance();
        gsmIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.getDefaultInstance();
        gsmSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.getDefaultInstance();
        lteIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.getDefaultInstance();
        lteSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.getDefaultInstance();
        wcdmaIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.getDefaultInstance();
        wcdmaSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, timestamp_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, hashCode_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, registered_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, networkType_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeMessage(5, cdmaIdentity_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeMessage(6, cdmaSignalStrength_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeMessage(7, gsmIdentity_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeMessage(8, gsmSignalStrength_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeMessage(9, lteIdentity_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeMessage(10, lteSignalStrength_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeMessage(11, wcdmaIdentity_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeMessage(12, wcdmaSignalStrength_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, timestamp_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, hashCode_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, registered_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, networkType_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, cdmaIdentity_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, cdmaSignalStrength_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, gsmIdentity_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, gsmSignalStrength_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, lteIdentity_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, lteSignalStrength_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(11, wcdmaIdentity_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(12, wcdmaSignalStrength_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static gov.nist.perfloc.CellularData.CellularReading.CellInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(gov.nist.perfloc.CellularData.CellularReading.CellInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfloc.CellularReading.CellInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfloc.CellularReading.CellInfo)
          gov.nist.perfloc.CellularData.CellularReading.CellInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gov.nist.perfloc.CellularData.CellularReading.CellInfo.class, gov.nist.perfloc.CellularData.CellularReading.CellInfo.Builder.class);
        }

        // Construct using gov.nist.perfloc.CellularData.CellularReading.CellInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getCdmaIdentityFieldBuilder();
            getCdmaSignalStrengthFieldBuilder();
            getGsmIdentityFieldBuilder();
            getGsmSignalStrengthFieldBuilder();
            getLteIdentityFieldBuilder();
            getLteSignalStrengthFieldBuilder();
            getWcdmaIdentityFieldBuilder();
            getWcdmaSignalStrengthFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          timestamp_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          hashCode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          registered_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          networkType_ = gov.nist.perfloc.CellularData.CellularReading.NetworkType.CDMA;
          bitField0_ = (bitField0_ & ~0x00000008);
          if (cdmaIdentityBuilder_ == null) {
            cdmaIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.getDefaultInstance();
          } else {
            cdmaIdentityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          if (cdmaSignalStrengthBuilder_ == null) {
            cdmaSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.getDefaultInstance();
          } else {
            cdmaSignalStrengthBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          if (gsmIdentityBuilder_ == null) {
            gsmIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.getDefaultInstance();
          } else {
            gsmIdentityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000040);
          if (gsmSignalStrengthBuilder_ == null) {
            gsmSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.getDefaultInstance();
          } else {
            gsmSignalStrengthBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000080);
          if (lteIdentityBuilder_ == null) {
            lteIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.getDefaultInstance();
          } else {
            lteIdentityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000100);
          if (lteSignalStrengthBuilder_ == null) {
            lteSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.getDefaultInstance();
          } else {
            lteSignalStrengthBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000200);
          if (wcdmaIdentityBuilder_ == null) {
            wcdmaIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.getDefaultInstance();
          } else {
            wcdmaIdentityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000400);
          if (wcdmaSignalStrengthBuilder_ == null) {
            wcdmaSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.getDefaultInstance();
          } else {
            wcdmaSignalStrengthBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000800);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellInfo_descriptor;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellInfo getDefaultInstanceForType() {
          return gov.nist.perfloc.CellularData.CellularReading.CellInfo.getDefaultInstance();
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellInfo build() {
          gov.nist.perfloc.CellularData.CellularReading.CellInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellInfo buildPartial() {
          gov.nist.perfloc.CellularData.CellularReading.CellInfo result = new gov.nist.perfloc.CellularData.CellularReading.CellInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.timestamp_ = timestamp_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.hashCode_ = hashCode_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.registered_ = registered_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.networkType_ = networkType_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          if (cdmaIdentityBuilder_ == null) {
            result.cdmaIdentity_ = cdmaIdentity_;
          } else {
            result.cdmaIdentity_ = cdmaIdentityBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          if (cdmaSignalStrengthBuilder_ == null) {
            result.cdmaSignalStrength_ = cdmaSignalStrength_;
          } else {
            result.cdmaSignalStrength_ = cdmaSignalStrengthBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          if (gsmIdentityBuilder_ == null) {
            result.gsmIdentity_ = gsmIdentity_;
          } else {
            result.gsmIdentity_ = gsmIdentityBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          if (gsmSignalStrengthBuilder_ == null) {
            result.gsmSignalStrength_ = gsmSignalStrength_;
          } else {
            result.gsmSignalStrength_ = gsmSignalStrengthBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          if (lteIdentityBuilder_ == null) {
            result.lteIdentity_ = lteIdentity_;
          } else {
            result.lteIdentity_ = lteIdentityBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          if (lteSignalStrengthBuilder_ == null) {
            result.lteSignalStrength_ = lteSignalStrength_;
          } else {
            result.lteSignalStrength_ = lteSignalStrengthBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          if (wcdmaIdentityBuilder_ == null) {
            result.wcdmaIdentity_ = wcdmaIdentity_;
          } else {
            result.wcdmaIdentity_ = wcdmaIdentityBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          if (wcdmaSignalStrengthBuilder_ == null) {
            result.wcdmaSignalStrength_ = wcdmaSignalStrength_;
          } else {
            result.wcdmaSignalStrength_ = wcdmaSignalStrengthBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof gov.nist.perfloc.CellularData.CellularReading.CellInfo) {
            return mergeFrom((gov.nist.perfloc.CellularData.CellularReading.CellInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(gov.nist.perfloc.CellularData.CellularReading.CellInfo other) {
          if (other == gov.nist.perfloc.CellularData.CellularReading.CellInfo.getDefaultInstance()) return this;
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          if (other.hasHashCode()) {
            setHashCode(other.getHashCode());
          }
          if (other.hasRegistered()) {
            setRegistered(other.getRegistered());
          }
          if (other.hasNetworkType()) {
            setNetworkType(other.getNetworkType());
          }
          if (other.hasCdmaIdentity()) {
            mergeCdmaIdentity(other.getCdmaIdentity());
          }
          if (other.hasCdmaSignalStrength()) {
            mergeCdmaSignalStrength(other.getCdmaSignalStrength());
          }
          if (other.hasGsmIdentity()) {
            mergeGsmIdentity(other.getGsmIdentity());
          }
          if (other.hasGsmSignalStrength()) {
            mergeGsmSignalStrength(other.getGsmSignalStrength());
          }
          if (other.hasLteIdentity()) {
            mergeLteIdentity(other.getLteIdentity());
          }
          if (other.hasLteSignalStrength()) {
            mergeLteSignalStrength(other.getLteSignalStrength());
          }
          if (other.hasWcdmaIdentity()) {
            mergeWcdmaIdentity(other.getWcdmaIdentity());
          }
          if (other.hasWcdmaSignalStrength()) {
            mergeWcdmaSignalStrength(other.getWcdmaSignalStrength());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          gov.nist.perfloc.CellularData.CellularReading.CellInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (gov.nist.perfloc.CellularData.CellularReading.CellInfo) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long timestamp_ ;
        /**
         * <code>optional uint64 timestamp = 1;</code>
         *
         * <pre>
         * Approximate time of this cell information in nanos since boot
         * </pre>
         */
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 timestamp = 1;</code>
         *
         * <pre>
         * Approximate time of this cell information in nanos since boot
         * </pre>
         */
        public long getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>optional uint64 timestamp = 1;</code>
         *
         * <pre>
         * Approximate time of this cell information in nanos since boot
         * </pre>
         */
        public Builder setTimestamp(long value) {
          bitField0_ |= 0x00000001;
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 timestamp = 1;</code>
         *
         * <pre>
         * Approximate time of this cell information in nanos since boot
         * </pre>
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000001);
          timestamp_ = 0L;
          onChanged();
          return this;
        }

        private int hashCode_ ;
        /**
         * <code>optional int32 hash_code = 2;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public boolean hasHashCode() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 hash_code = 2;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public int getHashCode() {
          return hashCode_;
        }
        /**
         * <code>optional int32 hash_code = 2;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder setHashCode(int value) {
          bitField0_ |= 0x00000002;
          hashCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 hash_code = 2;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder clearHashCode() {
          bitField0_ = (bitField0_ & ~0x00000002);
          hashCode_ = 0;
          onChanged();
          return this;
        }

        private boolean registered_ ;
        /**
         * <code>optional bool registered = 3;</code>
         *
         * <pre>
         * True if this cell is registered to the mobile network
         * </pre>
         */
        public boolean hasRegistered() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bool registered = 3;</code>
         *
         * <pre>
         * True if this cell is registered to the mobile network
         * </pre>
         */
        public boolean getRegistered() {
          return registered_;
        }
        /**
         * <code>optional bool registered = 3;</code>
         *
         * <pre>
         * True if this cell is registered to the mobile network
         * </pre>
         */
        public Builder setRegistered(boolean value) {
          bitField0_ |= 0x00000004;
          registered_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool registered = 3;</code>
         *
         * <pre>
         * True if this cell is registered to the mobile network
         * </pre>
         */
        public Builder clearRegistered() {
          bitField0_ = (bitField0_ & ~0x00000004);
          registered_ = false;
          onChanged();
          return this;
        }

        private gov.nist.perfloc.CellularData.CellularReading.NetworkType networkType_ = gov.nist.perfloc.CellularData.CellularReading.NetworkType.CDMA;
        /**
         * <code>optional .perfloc.CellularReading.NetworkType network_type = 4;</code>
         *
         * <pre>
         * CDMA / GSM / LTE / WCDMA
         * </pre>
         */
        public boolean hasNetworkType() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .perfloc.CellularReading.NetworkType network_type = 4;</code>
         *
         * <pre>
         * CDMA / GSM / LTE / WCDMA
         * </pre>
         */
        public gov.nist.perfloc.CellularData.CellularReading.NetworkType getNetworkType() {
          return networkType_;
        }
        /**
         * <code>optional .perfloc.CellularReading.NetworkType network_type = 4;</code>
         *
         * <pre>
         * CDMA / GSM / LTE / WCDMA
         * </pre>
         */
        public Builder setNetworkType(gov.nist.perfloc.CellularData.CellularReading.NetworkType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          networkType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.NetworkType network_type = 4;</code>
         *
         * <pre>
         * CDMA / GSM / LTE / WCDMA
         * </pre>
         */
        public Builder clearNetworkType() {
          bitField0_ = (bitField0_ & ~0x00000008);
          networkType_ = gov.nist.perfloc.CellularData.CellularReading.NetworkType.CDMA;
          onChanged();
          return this;
        }

        private gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda cdmaIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda, gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.Builder, gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmdaOrBuilder> cdmaIdentityBuilder_;
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
         *
         * <pre>
         * CDMA parameters
         * </pre>
         */
        public boolean hasCdmaIdentity() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
         *
         * <pre>
         * CDMA parameters
         * </pre>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda getCdmaIdentity() {
          if (cdmaIdentityBuilder_ == null) {
            return cdmaIdentity_;
          } else {
            return cdmaIdentityBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
         *
         * <pre>
         * CDMA parameters
         * </pre>
         */
        public Builder setCdmaIdentity(gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda value) {
          if (cdmaIdentityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            cdmaIdentity_ = value;
            onChanged();
          } else {
            cdmaIdentityBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
         *
         * <pre>
         * CDMA parameters
         * </pre>
         */
        public Builder setCdmaIdentity(
            gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.Builder builderForValue) {
          if (cdmaIdentityBuilder_ == null) {
            cdmaIdentity_ = builderForValue.build();
            onChanged();
          } else {
            cdmaIdentityBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
         *
         * <pre>
         * CDMA parameters
         * </pre>
         */
        public Builder mergeCdmaIdentity(gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda value) {
          if (cdmaIdentityBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010) &&
                cdmaIdentity_ != gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.getDefaultInstance()) {
              cdmaIdentity_ =
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.newBuilder(cdmaIdentity_).mergeFrom(value).buildPartial();
            } else {
              cdmaIdentity_ = value;
            }
            onChanged();
          } else {
            cdmaIdentityBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
         *
         * <pre>
         * CDMA parameters
         * </pre>
         */
        public Builder clearCdmaIdentity() {
          if (cdmaIdentityBuilder_ == null) {
            cdmaIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.getDefaultInstance();
            onChanged();
          } else {
            cdmaIdentityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
         *
         * <pre>
         * CDMA parameters
         * </pre>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.Builder getCdmaIdentityBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getCdmaIdentityFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
         *
         * <pre>
         * CDMA parameters
         * </pre>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmdaOrBuilder getCdmaIdentityOrBuilder() {
          if (cdmaIdentityBuilder_ != null) {
            return cdmaIdentityBuilder_.getMessageOrBuilder();
          } else {
            return cdmaIdentity_;
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityCmda cdma_identity = 5;</code>
         *
         * <pre>
         * CDMA parameters
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda, gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.Builder, gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmdaOrBuilder> 
            getCdmaIdentityFieldBuilder() {
          if (cdmaIdentityBuilder_ == null) {
            cdmaIdentityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda, gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.Builder, gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmdaOrBuilder>(
                    getCdmaIdentity(),
                    getParentForChildren(),
                    isClean());
            cdmaIdentity_ = null;
          }
          return cdmaIdentityBuilder_;
        }

        private gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma cdmaSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.Builder, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdmaOrBuilder> cdmaSignalStrengthBuilder_;
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
         */
        public boolean hasCdmaSignalStrength() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma getCdmaSignalStrength() {
          if (cdmaSignalStrengthBuilder_ == null) {
            return cdmaSignalStrength_;
          } else {
            return cdmaSignalStrengthBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
         */
        public Builder setCdmaSignalStrength(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma value) {
          if (cdmaSignalStrengthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            cdmaSignalStrength_ = value;
            onChanged();
          } else {
            cdmaSignalStrengthBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
         */
        public Builder setCdmaSignalStrength(
            gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.Builder builderForValue) {
          if (cdmaSignalStrengthBuilder_ == null) {
            cdmaSignalStrength_ = builderForValue.build();
            onChanged();
          } else {
            cdmaSignalStrengthBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
         */
        public Builder mergeCdmaSignalStrength(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma value) {
          if (cdmaSignalStrengthBuilder_ == null) {
            if (((bitField0_ & 0x00000020) == 0x00000020) &&
                cdmaSignalStrength_ != gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.getDefaultInstance()) {
              cdmaSignalStrength_ =
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.newBuilder(cdmaSignalStrength_).mergeFrom(value).buildPartial();
            } else {
              cdmaSignalStrength_ = value;
            }
            onChanged();
          } else {
            cdmaSignalStrengthBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
         */
        public Builder clearCdmaSignalStrength() {
          if (cdmaSignalStrengthBuilder_ == null) {
            cdmaSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.getDefaultInstance();
            onChanged();
          } else {
            cdmaSignalStrengthBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.Builder getCdmaSignalStrengthBuilder() {
          bitField0_ |= 0x00000020;
          onChanged();
          return getCdmaSignalStrengthFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdmaOrBuilder getCdmaSignalStrengthOrBuilder() {
          if (cdmaSignalStrengthBuilder_ != null) {
            return cdmaSignalStrengthBuilder_.getMessageOrBuilder();
          } else {
            return cdmaSignalStrength_;
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthCdma cdma_signal_strength = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.Builder, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdmaOrBuilder> 
            getCdmaSignalStrengthFieldBuilder() {
          if (cdmaSignalStrengthBuilder_ == null) {
            cdmaSignalStrengthBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.Builder, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdmaOrBuilder>(
                    getCdmaSignalStrength(),
                    getParentForChildren(),
                    isClean());
            cdmaSignalStrength_ = null;
          }
          return cdmaSignalStrengthBuilder_;
        }

        private gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm gsmIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm, gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.Builder, gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsmOrBuilder> gsmIdentityBuilder_;
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
         *
         * <pre>
         * GSM parameters
         * </pre>
         */
        public boolean hasGsmIdentity() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
         *
         * <pre>
         * GSM parameters
         * </pre>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm getGsmIdentity() {
          if (gsmIdentityBuilder_ == null) {
            return gsmIdentity_;
          } else {
            return gsmIdentityBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
         *
         * <pre>
         * GSM parameters
         * </pre>
         */
        public Builder setGsmIdentity(gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm value) {
          if (gsmIdentityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            gsmIdentity_ = value;
            onChanged();
          } else {
            gsmIdentityBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
         *
         * <pre>
         * GSM parameters
         * </pre>
         */
        public Builder setGsmIdentity(
            gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.Builder builderForValue) {
          if (gsmIdentityBuilder_ == null) {
            gsmIdentity_ = builderForValue.build();
            onChanged();
          } else {
            gsmIdentityBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
         *
         * <pre>
         * GSM parameters
         * </pre>
         */
        public Builder mergeGsmIdentity(gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm value) {
          if (gsmIdentityBuilder_ == null) {
            if (((bitField0_ & 0x00000040) == 0x00000040) &&
                gsmIdentity_ != gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.getDefaultInstance()) {
              gsmIdentity_ =
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.newBuilder(gsmIdentity_).mergeFrom(value).buildPartial();
            } else {
              gsmIdentity_ = value;
            }
            onChanged();
          } else {
            gsmIdentityBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
         *
         * <pre>
         * GSM parameters
         * </pre>
         */
        public Builder clearGsmIdentity() {
          if (gsmIdentityBuilder_ == null) {
            gsmIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.getDefaultInstance();
            onChanged();
          } else {
            gsmIdentityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
         *
         * <pre>
         * GSM parameters
         * </pre>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.Builder getGsmIdentityBuilder() {
          bitField0_ |= 0x00000040;
          onChanged();
          return getGsmIdentityFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
         *
         * <pre>
         * GSM parameters
         * </pre>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsmOrBuilder getGsmIdentityOrBuilder() {
          if (gsmIdentityBuilder_ != null) {
            return gsmIdentityBuilder_.getMessageOrBuilder();
          } else {
            return gsmIdentity_;
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityGsm gsm_identity = 7;</code>
         *
         * <pre>
         * GSM parameters
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm, gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.Builder, gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsmOrBuilder> 
            getGsmIdentityFieldBuilder() {
          if (gsmIdentityBuilder_ == null) {
            gsmIdentityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm, gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.Builder, gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsmOrBuilder>(
                    getGsmIdentity(),
                    getParentForChildren(),
                    isClean());
            gsmIdentity_ = null;
          }
          return gsmIdentityBuilder_;
        }

        private gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm gsmSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.Builder, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsmOrBuilder> gsmSignalStrengthBuilder_;
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
         */
        public boolean hasGsmSignalStrength() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm getGsmSignalStrength() {
          if (gsmSignalStrengthBuilder_ == null) {
            return gsmSignalStrength_;
          } else {
            return gsmSignalStrengthBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
         */
        public Builder setGsmSignalStrength(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm value) {
          if (gsmSignalStrengthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            gsmSignalStrength_ = value;
            onChanged();
          } else {
            gsmSignalStrengthBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000080;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
         */
        public Builder setGsmSignalStrength(
            gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.Builder builderForValue) {
          if (gsmSignalStrengthBuilder_ == null) {
            gsmSignalStrength_ = builderForValue.build();
            onChanged();
          } else {
            gsmSignalStrengthBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000080;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
         */
        public Builder mergeGsmSignalStrength(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm value) {
          if (gsmSignalStrengthBuilder_ == null) {
            if (((bitField0_ & 0x00000080) == 0x00000080) &&
                gsmSignalStrength_ != gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.getDefaultInstance()) {
              gsmSignalStrength_ =
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.newBuilder(gsmSignalStrength_).mergeFrom(value).buildPartial();
            } else {
              gsmSignalStrength_ = value;
            }
            onChanged();
          } else {
            gsmSignalStrengthBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000080;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
         */
        public Builder clearGsmSignalStrength() {
          if (gsmSignalStrengthBuilder_ == null) {
            gsmSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.getDefaultInstance();
            onChanged();
          } else {
            gsmSignalStrengthBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000080);
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.Builder getGsmSignalStrengthBuilder() {
          bitField0_ |= 0x00000080;
          onChanged();
          return getGsmSignalStrengthFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsmOrBuilder getGsmSignalStrengthOrBuilder() {
          if (gsmSignalStrengthBuilder_ != null) {
            return gsmSignalStrengthBuilder_.getMessageOrBuilder();
          } else {
            return gsmSignalStrength_;
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthGsm gsm_signal_strength = 8;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.Builder, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsmOrBuilder> 
            getGsmSignalStrengthFieldBuilder() {
          if (gsmSignalStrengthBuilder_ == null) {
            gsmSignalStrengthBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.Builder, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsmOrBuilder>(
                    getGsmSignalStrength(),
                    getParentForChildren(),
                    isClean());
            gsmSignalStrength_ = null;
          }
          return gsmSignalStrengthBuilder_;
        }

        private gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte lteIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte, gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.Builder, gov.nist.perfloc.CellularData.CellularReading.CellIdentityLteOrBuilder> lteIdentityBuilder_;
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
         *
         * <pre>
         * LTE parameters
         * </pre>
         */
        public boolean hasLteIdentity() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
         *
         * <pre>
         * LTE parameters
         * </pre>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte getLteIdentity() {
          if (lteIdentityBuilder_ == null) {
            return lteIdentity_;
          } else {
            return lteIdentityBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
         *
         * <pre>
         * LTE parameters
         * </pre>
         */
        public Builder setLteIdentity(gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte value) {
          if (lteIdentityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lteIdentity_ = value;
            onChanged();
          } else {
            lteIdentityBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000100;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
         *
         * <pre>
         * LTE parameters
         * </pre>
         */
        public Builder setLteIdentity(
            gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.Builder builderForValue) {
          if (lteIdentityBuilder_ == null) {
            lteIdentity_ = builderForValue.build();
            onChanged();
          } else {
            lteIdentityBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000100;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
         *
         * <pre>
         * LTE parameters
         * </pre>
         */
        public Builder mergeLteIdentity(gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte value) {
          if (lteIdentityBuilder_ == null) {
            if (((bitField0_ & 0x00000100) == 0x00000100) &&
                lteIdentity_ != gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.getDefaultInstance()) {
              lteIdentity_ =
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.newBuilder(lteIdentity_).mergeFrom(value).buildPartial();
            } else {
              lteIdentity_ = value;
            }
            onChanged();
          } else {
            lteIdentityBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000100;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
         *
         * <pre>
         * LTE parameters
         * </pre>
         */
        public Builder clearLteIdentity() {
          if (lteIdentityBuilder_ == null) {
            lteIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.getDefaultInstance();
            onChanged();
          } else {
            lteIdentityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000100);
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
         *
         * <pre>
         * LTE parameters
         * </pre>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.Builder getLteIdentityBuilder() {
          bitField0_ |= 0x00000100;
          onChanged();
          return getLteIdentityFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
         *
         * <pre>
         * LTE parameters
         * </pre>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityLteOrBuilder getLteIdentityOrBuilder() {
          if (lteIdentityBuilder_ != null) {
            return lteIdentityBuilder_.getMessageOrBuilder();
          } else {
            return lteIdentity_;
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityLte lte_identity = 9;</code>
         *
         * <pre>
         * LTE parameters
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte, gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.Builder, gov.nist.perfloc.CellularData.CellularReading.CellIdentityLteOrBuilder> 
            getLteIdentityFieldBuilder() {
          if (lteIdentityBuilder_ == null) {
            lteIdentityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte, gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.Builder, gov.nist.perfloc.CellularData.CellularReading.CellIdentityLteOrBuilder>(
                    getLteIdentity(),
                    getParentForChildren(),
                    isClean());
            lteIdentity_ = null;
          }
          return lteIdentityBuilder_;
        }

        private gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte lteSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.Builder, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLteOrBuilder> lteSignalStrengthBuilder_;
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
         */
        public boolean hasLteSignalStrength() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte getLteSignalStrength() {
          if (lteSignalStrengthBuilder_ == null) {
            return lteSignalStrength_;
          } else {
            return lteSignalStrengthBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
         */
        public Builder setLteSignalStrength(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte value) {
          if (lteSignalStrengthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lteSignalStrength_ = value;
            onChanged();
          } else {
            lteSignalStrengthBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000200;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
         */
        public Builder setLteSignalStrength(
            gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.Builder builderForValue) {
          if (lteSignalStrengthBuilder_ == null) {
            lteSignalStrength_ = builderForValue.build();
            onChanged();
          } else {
            lteSignalStrengthBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000200;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
         */
        public Builder mergeLteSignalStrength(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte value) {
          if (lteSignalStrengthBuilder_ == null) {
            if (((bitField0_ & 0x00000200) == 0x00000200) &&
                lteSignalStrength_ != gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.getDefaultInstance()) {
              lteSignalStrength_ =
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.newBuilder(lteSignalStrength_).mergeFrom(value).buildPartial();
            } else {
              lteSignalStrength_ = value;
            }
            onChanged();
          } else {
            lteSignalStrengthBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000200;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
         */
        public Builder clearLteSignalStrength() {
          if (lteSignalStrengthBuilder_ == null) {
            lteSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.getDefaultInstance();
            onChanged();
          } else {
            lteSignalStrengthBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000200);
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.Builder getLteSignalStrengthBuilder() {
          bitField0_ |= 0x00000200;
          onChanged();
          return getLteSignalStrengthFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLteOrBuilder getLteSignalStrengthOrBuilder() {
          if (lteSignalStrengthBuilder_ != null) {
            return lteSignalStrengthBuilder_.getMessageOrBuilder();
          } else {
            return lteSignalStrength_;
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthLte lte_signal_strength = 10;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.Builder, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLteOrBuilder> 
            getLteSignalStrengthFieldBuilder() {
          if (lteSignalStrengthBuilder_ == null) {
            lteSignalStrengthBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.Builder, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLteOrBuilder>(
                    getLteSignalStrength(),
                    getParentForChildren(),
                    isClean());
            lteSignalStrength_ = null;
          }
          return lteSignalStrengthBuilder_;
        }

        private gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma wcdmaIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma, gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.Builder, gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdmaOrBuilder> wcdmaIdentityBuilder_;
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
         *
         * <pre>
         * WCDMA parameters 
         * </pre>
         */
        public boolean hasWcdmaIdentity() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
         *
         * <pre>
         * WCDMA parameters 
         * </pre>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma getWcdmaIdentity() {
          if (wcdmaIdentityBuilder_ == null) {
            return wcdmaIdentity_;
          } else {
            return wcdmaIdentityBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
         *
         * <pre>
         * WCDMA parameters 
         * </pre>
         */
        public Builder setWcdmaIdentity(gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma value) {
          if (wcdmaIdentityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            wcdmaIdentity_ = value;
            onChanged();
          } else {
            wcdmaIdentityBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000400;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
         *
         * <pre>
         * WCDMA parameters 
         * </pre>
         */
        public Builder setWcdmaIdentity(
            gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.Builder builderForValue) {
          if (wcdmaIdentityBuilder_ == null) {
            wcdmaIdentity_ = builderForValue.build();
            onChanged();
          } else {
            wcdmaIdentityBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000400;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
         *
         * <pre>
         * WCDMA parameters 
         * </pre>
         */
        public Builder mergeWcdmaIdentity(gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma value) {
          if (wcdmaIdentityBuilder_ == null) {
            if (((bitField0_ & 0x00000400) == 0x00000400) &&
                wcdmaIdentity_ != gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.getDefaultInstance()) {
              wcdmaIdentity_ =
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.newBuilder(wcdmaIdentity_).mergeFrom(value).buildPartial();
            } else {
              wcdmaIdentity_ = value;
            }
            onChanged();
          } else {
            wcdmaIdentityBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000400;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
         *
         * <pre>
         * WCDMA parameters 
         * </pre>
         */
        public Builder clearWcdmaIdentity() {
          if (wcdmaIdentityBuilder_ == null) {
            wcdmaIdentity_ = gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.getDefaultInstance();
            onChanged();
          } else {
            wcdmaIdentityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000400);
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
         *
         * <pre>
         * WCDMA parameters 
         * </pre>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.Builder getWcdmaIdentityBuilder() {
          bitField0_ |= 0x00000400;
          onChanged();
          return getWcdmaIdentityFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
         *
         * <pre>
         * WCDMA parameters 
         * </pre>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdmaOrBuilder getWcdmaIdentityOrBuilder() {
          if (wcdmaIdentityBuilder_ != null) {
            return wcdmaIdentityBuilder_.getMessageOrBuilder();
          } else {
            return wcdmaIdentity_;
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellIdentityWcdma wcdma_identity = 11;</code>
         *
         * <pre>
         * WCDMA parameters 
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma, gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.Builder, gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdmaOrBuilder> 
            getWcdmaIdentityFieldBuilder() {
          if (wcdmaIdentityBuilder_ == null) {
            wcdmaIdentityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma, gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.Builder, gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdmaOrBuilder>(
                    getWcdmaIdentity(),
                    getParentForChildren(),
                    isClean());
            wcdmaIdentity_ = null;
          }
          return wcdmaIdentityBuilder_;
        }

        private gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma wcdmaSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.Builder, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdmaOrBuilder> wcdmaSignalStrengthBuilder_;
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
         */
        public boolean hasWcdmaSignalStrength() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma getWcdmaSignalStrength() {
          if (wcdmaSignalStrengthBuilder_ == null) {
            return wcdmaSignalStrength_;
          } else {
            return wcdmaSignalStrengthBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
         */
        public Builder setWcdmaSignalStrength(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma value) {
          if (wcdmaSignalStrengthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            wcdmaSignalStrength_ = value;
            onChanged();
          } else {
            wcdmaSignalStrengthBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000800;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
         */
        public Builder setWcdmaSignalStrength(
            gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.Builder builderForValue) {
          if (wcdmaSignalStrengthBuilder_ == null) {
            wcdmaSignalStrength_ = builderForValue.build();
            onChanged();
          } else {
            wcdmaSignalStrengthBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000800;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
         */
        public Builder mergeWcdmaSignalStrength(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma value) {
          if (wcdmaSignalStrengthBuilder_ == null) {
            if (((bitField0_ & 0x00000800) == 0x00000800) &&
                wcdmaSignalStrength_ != gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.getDefaultInstance()) {
              wcdmaSignalStrength_ =
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.newBuilder(wcdmaSignalStrength_).mergeFrom(value).buildPartial();
            } else {
              wcdmaSignalStrength_ = value;
            }
            onChanged();
          } else {
            wcdmaSignalStrengthBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000800;
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
         */
        public Builder clearWcdmaSignalStrength() {
          if (wcdmaSignalStrengthBuilder_ == null) {
            wcdmaSignalStrength_ = gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.getDefaultInstance();
            onChanged();
          } else {
            wcdmaSignalStrengthBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000800);
          return this;
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.Builder getWcdmaSignalStrengthBuilder() {
          bitField0_ |= 0x00000800;
          onChanged();
          return getWcdmaSignalStrengthFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
         */
        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdmaOrBuilder getWcdmaSignalStrengthOrBuilder() {
          if (wcdmaSignalStrengthBuilder_ != null) {
            return wcdmaSignalStrengthBuilder_.getMessageOrBuilder();
          } else {
            return wcdmaSignalStrength_;
          }
        }
        /**
         * <code>optional .perfloc.CellularReading.CellSignalStrengthWcdma wcdma_signal_strength = 12;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.Builder, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdmaOrBuilder> 
            getWcdmaSignalStrengthFieldBuilder() {
          if (wcdmaSignalStrengthBuilder_ == null) {
            wcdmaSignalStrengthBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.Builder, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdmaOrBuilder>(
                    getWcdmaSignalStrength(),
                    getParentForChildren(),
                    isClean());
            wcdmaSignalStrength_ = null;
          }
          return wcdmaSignalStrengthBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:perfloc.CellularReading.CellInfo)
      }

      static {
        defaultInstance = new CellInfo(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:perfloc.CellularReading.CellInfo)
    }

    public interface CellIdentityCmdaOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfloc.CellularReading.CellIdentityCmda)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 basestation_id = 1;</code>
       *
       * <pre>
       * Base Station Id 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasBasestationId();
      /**
       * <code>optional int32 basestation_id = 1;</code>
       *
       * <pre>
       * Base Station Id 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getBasestationId();

      /**
       * <code>optional int32 latitude = 2;</code>
       *
       * <pre>
       * Base station latitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -1296000 to 1296000, both values inclusive (corresponding to a range of -90 to +90 degrees). Integer.MAX_VALUE if unknown.
       * </pre>
       */
      boolean hasLatitude();
      /**
       * <code>optional int32 latitude = 2;</code>
       *
       * <pre>
       * Base station latitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -1296000 to 1296000, both values inclusive (corresponding to a range of -90 to +90 degrees). Integer.MAX_VALUE if unknown.
       * </pre>
       */
      int getLatitude();

      /**
       * <code>optional int32 longitude = 3;</code>
       *
       * <pre>
       * Base station longitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -2592000 to 2592000, both values inclusive (corresponding to a range of -180 to +180 degrees). Integer.MAX_VALUE if unknown.
       * </pre>
       */
      boolean hasLongitude();
      /**
       * <code>optional int32 longitude = 3;</code>
       *
       * <pre>
       * Base station longitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -2592000 to 2592000, both values inclusive (corresponding to a range of -180 to +180 degrees). Integer.MAX_VALUE if unknown.
       * </pre>
       */
      int getLongitude();

      /**
       * <code>optional int32 network_id = 4;</code>
       *
       * <pre>
       * Network Id 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasNetworkId();
      /**
       * <code>optional int32 network_id = 4;</code>
       *
       * <pre>
       * Network Id 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getNetworkId();

      /**
       * <code>optional int32 system_id = 5;</code>
       *
       * <pre>
       * System Id 0..32767, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasSystemId();
      /**
       * <code>optional int32 system_id = 5;</code>
       *
       * <pre>
       * System Id 0..32767, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getSystemId();

      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      boolean hasHashCode();
      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      int getHashCode();
    }
    /**
     * Protobuf type {@code perfloc.CellularReading.CellIdentityCmda}
     */
    public static final class CellIdentityCmda extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:perfloc.CellularReading.CellIdentityCmda)
        CellIdentityCmdaOrBuilder {
      // Use CellIdentityCmda.newBuilder() to construct.
      private CellIdentityCmda(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CellIdentityCmda(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CellIdentityCmda defaultInstance;
      public static CellIdentityCmda getDefaultInstance() {
        return defaultInstance;
      }

      public CellIdentityCmda getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CellIdentityCmda(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                basestationId_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                latitude_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                longitude_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                networkId_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                systemId_ = input.readInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                hashCode_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityCmda_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityCmda_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.class, gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.Builder.class);
      }

      public static com.google.protobuf.Parser<CellIdentityCmda> PARSER =
          new com.google.protobuf.AbstractParser<CellIdentityCmda>() {
        public CellIdentityCmda parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CellIdentityCmda(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CellIdentityCmda> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int BASESTATION_ID_FIELD_NUMBER = 1;
      private int basestationId_;
      /**
       * <code>optional int32 basestation_id = 1;</code>
       *
       * <pre>
       * Base Station Id 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasBasestationId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 basestation_id = 1;</code>
       *
       * <pre>
       * Base Station Id 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getBasestationId() {
        return basestationId_;
      }

      public static final int LATITUDE_FIELD_NUMBER = 2;
      private int latitude_;
      /**
       * <code>optional int32 latitude = 2;</code>
       *
       * <pre>
       * Base station latitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -1296000 to 1296000, both values inclusive (corresponding to a range of -90 to +90 degrees). Integer.MAX_VALUE if unknown.
       * </pre>
       */
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 latitude = 2;</code>
       *
       * <pre>
       * Base station latitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -1296000 to 1296000, both values inclusive (corresponding to a range of -90 to +90 degrees). Integer.MAX_VALUE if unknown.
       * </pre>
       */
      public int getLatitude() {
        return latitude_;
      }

      public static final int LONGITUDE_FIELD_NUMBER = 3;
      private int longitude_;
      /**
       * <code>optional int32 longitude = 3;</code>
       *
       * <pre>
       * Base station longitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -2592000 to 2592000, both values inclusive (corresponding to a range of -180 to +180 degrees). Integer.MAX_VALUE if unknown.
       * </pre>
       */
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 longitude = 3;</code>
       *
       * <pre>
       * Base station longitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -2592000 to 2592000, both values inclusive (corresponding to a range of -180 to +180 degrees). Integer.MAX_VALUE if unknown.
       * </pre>
       */
      public int getLongitude() {
        return longitude_;
      }

      public static final int NETWORK_ID_FIELD_NUMBER = 4;
      private int networkId_;
      /**
       * <code>optional int32 network_id = 4;</code>
       *
       * <pre>
       * Network Id 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasNetworkId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 network_id = 4;</code>
       *
       * <pre>
       * Network Id 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getNetworkId() {
        return networkId_;
      }

      public static final int SYSTEM_ID_FIELD_NUMBER = 5;
      private int systemId_;
      /**
       * <code>optional int32 system_id = 5;</code>
       *
       * <pre>
       * System Id 0..32767, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasSystemId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 system_id = 5;</code>
       *
       * <pre>
       * System Id 0..32767, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getSystemId() {
        return systemId_;
      }

      public static final int HASH_CODE_FIELD_NUMBER = 6;
      private int hashCode_;
      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public boolean hasHashCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public int getHashCode() {
        return hashCode_;
      }

      private void initFields() {
        basestationId_ = 0;
        latitude_ = 0;
        longitude_ = 0;
        networkId_ = 0;
        systemId_ = 0;
        hashCode_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, basestationId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, latitude_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, longitude_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, networkId_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, systemId_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(6, hashCode_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, basestationId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, latitude_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, longitude_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, networkId_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, systemId_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, hashCode_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfloc.CellularReading.CellIdentityCmda}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfloc.CellularReading.CellIdentityCmda)
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmdaOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityCmda_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityCmda_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.class, gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.Builder.class);
        }

        // Construct using gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          basestationId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          latitude_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          longitude_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          networkId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          systemId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          hashCode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityCmda_descriptor;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda getDefaultInstanceForType() {
          return gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.getDefaultInstance();
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda build() {
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda buildPartial() {
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda result = new gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.basestationId_ = basestationId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.latitude_ = latitude_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.longitude_ = longitude_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.networkId_ = networkId_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.systemId_ = systemId_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.hashCode_ = hashCode_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda) {
            return mergeFrom((gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda other) {
          if (other == gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda.getDefaultInstance()) return this;
          if (other.hasBasestationId()) {
            setBasestationId(other.getBasestationId());
          }
          if (other.hasLatitude()) {
            setLatitude(other.getLatitude());
          }
          if (other.hasLongitude()) {
            setLongitude(other.getLongitude());
          }
          if (other.hasNetworkId()) {
            setNetworkId(other.getNetworkId());
          }
          if (other.hasSystemId()) {
            setSystemId(other.getSystemId());
          }
          if (other.hasHashCode()) {
            setHashCode(other.getHashCode());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (gov.nist.perfloc.CellularData.CellularReading.CellIdentityCmda) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int basestationId_ ;
        /**
         * <code>optional int32 basestation_id = 1;</code>
         *
         * <pre>
         * Base Station Id 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasBasestationId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 basestation_id = 1;</code>
         *
         * <pre>
         * Base Station Id 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getBasestationId() {
          return basestationId_;
        }
        /**
         * <code>optional int32 basestation_id = 1;</code>
         *
         * <pre>
         * Base Station Id 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setBasestationId(int value) {
          bitField0_ |= 0x00000001;
          basestationId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 basestation_id = 1;</code>
         *
         * <pre>
         * Base Station Id 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearBasestationId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          basestationId_ = 0;
          onChanged();
          return this;
        }

        private int latitude_ ;
        /**
         * <code>optional int32 latitude = 2;</code>
         *
         * <pre>
         * Base station latitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -1296000 to 1296000, both values inclusive (corresponding to a range of -90 to +90 degrees). Integer.MAX_VALUE if unknown.
         * </pre>
         */
        public boolean hasLatitude() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 latitude = 2;</code>
         *
         * <pre>
         * Base station latitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -1296000 to 1296000, both values inclusive (corresponding to a range of -90 to +90 degrees). Integer.MAX_VALUE if unknown.
         * </pre>
         */
        public int getLatitude() {
          return latitude_;
        }
        /**
         * <code>optional int32 latitude = 2;</code>
         *
         * <pre>
         * Base station latitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -1296000 to 1296000, both values inclusive (corresponding to a range of -90 to +90 degrees). Integer.MAX_VALUE if unknown.
         * </pre>
         */
        public Builder setLatitude(int value) {
          bitField0_ |= 0x00000002;
          latitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 latitude = 2;</code>
         *
         * <pre>
         * Base station latitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -1296000 to 1296000, both values inclusive (corresponding to a range of -90 to +90 degrees). Integer.MAX_VALUE if unknown.
         * </pre>
         */
        public Builder clearLatitude() {
          bitField0_ = (bitField0_ & ~0x00000002);
          latitude_ = 0;
          onChanged();
          return this;
        }

        private int longitude_ ;
        /**
         * <code>optional int32 longitude = 3;</code>
         *
         * <pre>
         * Base station longitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -2592000 to 2592000, both values inclusive (corresponding to a range of -180 to +180 degrees). Integer.MAX_VALUE if unknown.
         * </pre>
         */
        public boolean hasLongitude() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 longitude = 3;</code>
         *
         * <pre>
         * Base station longitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -2592000 to 2592000, both values inclusive (corresponding to a range of -180 to +180 degrees). Integer.MAX_VALUE if unknown.
         * </pre>
         */
        public int getLongitude() {
          return longitude_;
        }
        /**
         * <code>optional int32 longitude = 3;</code>
         *
         * <pre>
         * Base station longitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -2592000 to 2592000, both values inclusive (corresponding to a range of -180 to +180 degrees). Integer.MAX_VALUE if unknown.
         * </pre>
         */
        public Builder setLongitude(int value) {
          bitField0_ |= 0x00000004;
          longitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 longitude = 3;</code>
         *
         * <pre>
         * Base station longitude, which is a decimal number as specified in 3GPP2 C.S0005-A v6.0. It is represented in units of 0.25 seconds and ranges from -2592000 to 2592000, both values inclusive (corresponding to a range of -180 to +180 degrees). Integer.MAX_VALUE if unknown.
         * </pre>
         */
        public Builder clearLongitude() {
          bitField0_ = (bitField0_ & ~0x00000004);
          longitude_ = 0;
          onChanged();
          return this;
        }

        private int networkId_ ;
        /**
         * <code>optional int32 network_id = 4;</code>
         *
         * <pre>
         * Network Id 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasNetworkId() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 network_id = 4;</code>
         *
         * <pre>
         * Network Id 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getNetworkId() {
          return networkId_;
        }
        /**
         * <code>optional int32 network_id = 4;</code>
         *
         * <pre>
         * Network Id 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setNetworkId(int value) {
          bitField0_ |= 0x00000008;
          networkId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 network_id = 4;</code>
         *
         * <pre>
         * Network Id 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearNetworkId() {
          bitField0_ = (bitField0_ & ~0x00000008);
          networkId_ = 0;
          onChanged();
          return this;
        }

        private int systemId_ ;
        /**
         * <code>optional int32 system_id = 5;</code>
         *
         * <pre>
         * System Id 0..32767, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasSystemId() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int32 system_id = 5;</code>
         *
         * <pre>
         * System Id 0..32767, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getSystemId() {
          return systemId_;
        }
        /**
         * <code>optional int32 system_id = 5;</code>
         *
         * <pre>
         * System Id 0..32767, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setSystemId(int value) {
          bitField0_ |= 0x00000010;
          systemId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 system_id = 5;</code>
         *
         * <pre>
         * System Id 0..32767, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearSystemId() {
          bitField0_ = (bitField0_ & ~0x00000010);
          systemId_ = 0;
          onChanged();
          return this;
        }

        private int hashCode_ ;
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public boolean hasHashCode() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public int getHashCode() {
          return hashCode_;
        }
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder setHashCode(int value) {
          bitField0_ |= 0x00000020;
          hashCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder clearHashCode() {
          bitField0_ = (bitField0_ & ~0x00000020);
          hashCode_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:perfloc.CellularReading.CellIdentityCmda)
      }

      static {
        defaultInstance = new CellIdentityCmda(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:perfloc.CellularReading.CellIdentityCmda)
    }

    public interface CellIdentityGsmOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfloc.CellularReading.CellIdentityGsm)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 cid = 1;</code>
       *
       * <pre>
       * CID Either 16-bit GSM Cell Identity described in TS 27.007, 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasCid();
      /**
       * <code>optional int32 cid = 1;</code>
       *
       * <pre>
       * CID Either 16-bit GSM Cell Identity described in TS 27.007, 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getCid();

      /**
       * <code>optional int32 lac = 2;</code>
       *
       * <pre>
       * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasLac();
      /**
       * <code>optional int32 lac = 2;</code>
       *
       * <pre>
       * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getLac();

      /**
       * <code>optional int32 mcc = 3;</code>
       *
       * <pre>
       * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasMcc();
      /**
       * <code>optional int32 mcc = 3;</code>
       *
       * <pre>
       * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getMcc();

      /**
       * <code>optional int32 mnc = 4;</code>
       *
       * <pre>
       * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasMnc();
      /**
       * <code>optional int32 mnc = 4;</code>
       *
       * <pre>
       * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getMnc();

      /**
       * <code>optional int32 psc = 5;</code>
       *
       * <pre>
       * Integer.MAX_VALUE, undefined for GSM
       * </pre>
       */
      boolean hasPsc();
      /**
       * <code>optional int32 psc = 5;</code>
       *
       * <pre>
       * Integer.MAX_VALUE, undefined for GSM
       * </pre>
       */
      int getPsc();

      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      boolean hasHashCode();
      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      int getHashCode();
    }
    /**
     * Protobuf type {@code perfloc.CellularReading.CellIdentityGsm}
     */
    public static final class CellIdentityGsm extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:perfloc.CellularReading.CellIdentityGsm)
        CellIdentityGsmOrBuilder {
      // Use CellIdentityGsm.newBuilder() to construct.
      private CellIdentityGsm(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CellIdentityGsm(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CellIdentityGsm defaultInstance;
      public static CellIdentityGsm getDefaultInstance() {
        return defaultInstance;
      }

      public CellIdentityGsm getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CellIdentityGsm(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                cid_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                lac_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                mcc_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                mnc_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                psc_ = input.readInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                hashCode_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityGsm_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityGsm_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.class, gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.Builder.class);
      }

      public static com.google.protobuf.Parser<CellIdentityGsm> PARSER =
          new com.google.protobuf.AbstractParser<CellIdentityGsm>() {
        public CellIdentityGsm parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CellIdentityGsm(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CellIdentityGsm> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CID_FIELD_NUMBER = 1;
      private int cid_;
      /**
       * <code>optional int32 cid = 1;</code>
       *
       * <pre>
       * CID Either 16-bit GSM Cell Identity described in TS 27.007, 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasCid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 cid = 1;</code>
       *
       * <pre>
       * CID Either 16-bit GSM Cell Identity described in TS 27.007, 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getCid() {
        return cid_;
      }

      public static final int LAC_FIELD_NUMBER = 2;
      private int lac_;
      /**
       * <code>optional int32 lac = 2;</code>
       *
       * <pre>
       * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasLac() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 lac = 2;</code>
       *
       * <pre>
       * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getLac() {
        return lac_;
      }

      public static final int MCC_FIELD_NUMBER = 3;
      private int mcc_;
      /**
       * <code>optional int32 mcc = 3;</code>
       *
       * <pre>
       * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasMcc() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 mcc = 3;</code>
       *
       * <pre>
       * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getMcc() {
        return mcc_;
      }

      public static final int MNC_FIELD_NUMBER = 4;
      private int mnc_;
      /**
       * <code>optional int32 mnc = 4;</code>
       *
       * <pre>
       * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasMnc() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 mnc = 4;</code>
       *
       * <pre>
       * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getMnc() {
        return mnc_;
      }

      public static final int PSC_FIELD_NUMBER = 5;
      private int psc_;
      /**
       * <code>optional int32 psc = 5;</code>
       *
       * <pre>
       * Integer.MAX_VALUE, undefined for GSM
       * </pre>
       */
      public boolean hasPsc() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 psc = 5;</code>
       *
       * <pre>
       * Integer.MAX_VALUE, undefined for GSM
       * </pre>
       */
      public int getPsc() {
        return psc_;
      }

      public static final int HASH_CODE_FIELD_NUMBER = 6;
      private int hashCode_;
      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public boolean hasHashCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public int getHashCode() {
        return hashCode_;
      }

      private void initFields() {
        cid_ = 0;
        lac_ = 0;
        mcc_ = 0;
        mnc_ = 0;
        psc_ = 0;
        hashCode_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, cid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, lac_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, mcc_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, mnc_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, psc_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(6, hashCode_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, cid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, lac_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, mcc_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, mnc_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, psc_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, hashCode_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfloc.CellularReading.CellIdentityGsm}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfloc.CellularReading.CellIdentityGsm)
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsmOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityGsm_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityGsm_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.class, gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.Builder.class);
        }

        // Construct using gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          cid_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          lac_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          mcc_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          mnc_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          psc_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          hashCode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityGsm_descriptor;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm getDefaultInstanceForType() {
          return gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.getDefaultInstance();
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm build() {
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm buildPartial() {
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm result = new gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.cid_ = cid_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.lac_ = lac_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.mcc_ = mcc_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.mnc_ = mnc_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.psc_ = psc_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.hashCode_ = hashCode_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm) {
            return mergeFrom((gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm other) {
          if (other == gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm.getDefaultInstance()) return this;
          if (other.hasCid()) {
            setCid(other.getCid());
          }
          if (other.hasLac()) {
            setLac(other.getLac());
          }
          if (other.hasMcc()) {
            setMcc(other.getMcc());
          }
          if (other.hasMnc()) {
            setMnc(other.getMnc());
          }
          if (other.hasPsc()) {
            setPsc(other.getPsc());
          }
          if (other.hasHashCode()) {
            setHashCode(other.getHashCode());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (gov.nist.perfloc.CellularData.CellularReading.CellIdentityGsm) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int cid_ ;
        /**
         * <code>optional int32 cid = 1;</code>
         *
         * <pre>
         * CID Either 16-bit GSM Cell Identity described in TS 27.007, 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasCid() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 cid = 1;</code>
         *
         * <pre>
         * CID Either 16-bit GSM Cell Identity described in TS 27.007, 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getCid() {
          return cid_;
        }
        /**
         * <code>optional int32 cid = 1;</code>
         *
         * <pre>
         * CID Either 16-bit GSM Cell Identity described in TS 27.007, 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setCid(int value) {
          bitField0_ |= 0x00000001;
          cid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 cid = 1;</code>
         *
         * <pre>
         * CID Either 16-bit GSM Cell Identity described in TS 27.007, 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearCid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          cid_ = 0;
          onChanged();
          return this;
        }

        private int lac_ ;
        /**
         * <code>optional int32 lac = 2;</code>
         *
         * <pre>
         * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasLac() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 lac = 2;</code>
         *
         * <pre>
         * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getLac() {
          return lac_;
        }
        /**
         * <code>optional int32 lac = 2;</code>
         *
         * <pre>
         * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setLac(int value) {
          bitField0_ |= 0x00000002;
          lac_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 lac = 2;</code>
         *
         * <pre>
         * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearLac() {
          bitField0_ = (bitField0_ & ~0x00000002);
          lac_ = 0;
          onChanged();
          return this;
        }

        private int mcc_ ;
        /**
         * <code>optional int32 mcc = 3;</code>
         *
         * <pre>
         * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasMcc() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 mcc = 3;</code>
         *
         * <pre>
         * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getMcc() {
          return mcc_;
        }
        /**
         * <code>optional int32 mcc = 3;</code>
         *
         * <pre>
         * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setMcc(int value) {
          bitField0_ |= 0x00000004;
          mcc_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 mcc = 3;</code>
         *
         * <pre>
         * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearMcc() {
          bitField0_ = (bitField0_ & ~0x00000004);
          mcc_ = 0;
          onChanged();
          return this;
        }

        private int mnc_ ;
        /**
         * <code>optional int32 mnc = 4;</code>
         *
         * <pre>
         * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasMnc() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 mnc = 4;</code>
         *
         * <pre>
         * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getMnc() {
          return mnc_;
        }
        /**
         * <code>optional int32 mnc = 4;</code>
         *
         * <pre>
         * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setMnc(int value) {
          bitField0_ |= 0x00000008;
          mnc_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 mnc = 4;</code>
         *
         * <pre>
         * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearMnc() {
          bitField0_ = (bitField0_ & ~0x00000008);
          mnc_ = 0;
          onChanged();
          return this;
        }

        private int psc_ ;
        /**
         * <code>optional int32 psc = 5;</code>
         *
         * <pre>
         * Integer.MAX_VALUE, undefined for GSM
         * </pre>
         */
        public boolean hasPsc() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int32 psc = 5;</code>
         *
         * <pre>
         * Integer.MAX_VALUE, undefined for GSM
         * </pre>
         */
        public int getPsc() {
          return psc_;
        }
        /**
         * <code>optional int32 psc = 5;</code>
         *
         * <pre>
         * Integer.MAX_VALUE, undefined for GSM
         * </pre>
         */
        public Builder setPsc(int value) {
          bitField0_ |= 0x00000010;
          psc_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 psc = 5;</code>
         *
         * <pre>
         * Integer.MAX_VALUE, undefined for GSM
         * </pre>
         */
        public Builder clearPsc() {
          bitField0_ = (bitField0_ & ~0x00000010);
          psc_ = 0;
          onChanged();
          return this;
        }

        private int hashCode_ ;
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public boolean hasHashCode() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public int getHashCode() {
          return hashCode_;
        }
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder setHashCode(int value) {
          bitField0_ |= 0x00000020;
          hashCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder clearHashCode() {
          bitField0_ = (bitField0_ & ~0x00000020);
          hashCode_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:perfloc.CellularReading.CellIdentityGsm)
      }

      static {
        defaultInstance = new CellIdentityGsm(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:perfloc.CellularReading.CellIdentityGsm)
    }

    public interface CellIdentityLteOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfloc.CellularReading.CellIdentityLte)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 ci = 1;</code>
       *
       * <pre>
       * 28-bit Cell Identity, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasCi();
      /**
       * <code>optional int32 ci = 1;</code>
       *
       * <pre>
       * 28-bit Cell Identity, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getCi();

      /**
       * <code>optional int32 mcc = 2;</code>
       *
       * <pre>
       * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasMcc();
      /**
       * <code>optional int32 mcc = 2;</code>
       *
       * <pre>
       * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getMcc();

      /**
       * <code>optional int32 mnc = 3;</code>
       *
       * <pre>
       * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasMnc();
      /**
       * <code>optional int32 mnc = 3;</code>
       *
       * <pre>
       * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getMnc();

      /**
       * <code>optional int32 pci = 4;</code>
       *
       * <pre>
       * Physical Cell Id 0..503, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasPci();
      /**
       * <code>optional int32 pci = 4;</code>
       *
       * <pre>
       * Physical Cell Id 0..503, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getPci();

      /**
       * <code>optional int32 tac = 5;</code>
       *
       * <pre>
       * 16-bit Tracking Area Code, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasTac();
      /**
       * <code>optional int32 tac = 5;</code>
       *
       * <pre>
       * 16-bit Tracking Area Code, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getTac();

      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      boolean hasHashCode();
      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      int getHashCode();
    }
    /**
     * Protobuf type {@code perfloc.CellularReading.CellIdentityLte}
     */
    public static final class CellIdentityLte extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:perfloc.CellularReading.CellIdentityLte)
        CellIdentityLteOrBuilder {
      // Use CellIdentityLte.newBuilder() to construct.
      private CellIdentityLte(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CellIdentityLte(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CellIdentityLte defaultInstance;
      public static CellIdentityLte getDefaultInstance() {
        return defaultInstance;
      }

      public CellIdentityLte getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CellIdentityLte(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                ci_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                mcc_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                mnc_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                pci_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                tac_ = input.readInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                hashCode_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityLte_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityLte_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.class, gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.Builder.class);
      }

      public static com.google.protobuf.Parser<CellIdentityLte> PARSER =
          new com.google.protobuf.AbstractParser<CellIdentityLte>() {
        public CellIdentityLte parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CellIdentityLte(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CellIdentityLte> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CI_FIELD_NUMBER = 1;
      private int ci_;
      /**
       * <code>optional int32 ci = 1;</code>
       *
       * <pre>
       * 28-bit Cell Identity, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasCi() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 ci = 1;</code>
       *
       * <pre>
       * 28-bit Cell Identity, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getCi() {
        return ci_;
      }

      public static final int MCC_FIELD_NUMBER = 2;
      private int mcc_;
      /**
       * <code>optional int32 mcc = 2;</code>
       *
       * <pre>
       * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasMcc() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 mcc = 2;</code>
       *
       * <pre>
       * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getMcc() {
        return mcc_;
      }

      public static final int MNC_FIELD_NUMBER = 3;
      private int mnc_;
      /**
       * <code>optional int32 mnc = 3;</code>
       *
       * <pre>
       * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasMnc() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 mnc = 3;</code>
       *
       * <pre>
       * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getMnc() {
        return mnc_;
      }

      public static final int PCI_FIELD_NUMBER = 4;
      private int pci_;
      /**
       * <code>optional int32 pci = 4;</code>
       *
       * <pre>
       * Physical Cell Id 0..503, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasPci() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 pci = 4;</code>
       *
       * <pre>
       * Physical Cell Id 0..503, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getPci() {
        return pci_;
      }

      public static final int TAC_FIELD_NUMBER = 5;
      private int tac_;
      /**
       * <code>optional int32 tac = 5;</code>
       *
       * <pre>
       * 16-bit Tracking Area Code, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasTac() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 tac = 5;</code>
       *
       * <pre>
       * 16-bit Tracking Area Code, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getTac() {
        return tac_;
      }

      public static final int HASH_CODE_FIELD_NUMBER = 6;
      private int hashCode_;
      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public boolean hasHashCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public int getHashCode() {
        return hashCode_;
      }

      private void initFields() {
        ci_ = 0;
        mcc_ = 0;
        mnc_ = 0;
        pci_ = 0;
        tac_ = 0;
        hashCode_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, ci_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, mcc_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, mnc_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, pci_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, tac_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(6, hashCode_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, ci_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, mcc_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, mnc_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, pci_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, tac_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, hashCode_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfloc.CellularReading.CellIdentityLte}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfloc.CellularReading.CellIdentityLte)
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityLteOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityLte_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityLte_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.class, gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.Builder.class);
        }

        // Construct using gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          ci_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          mcc_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          mnc_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          pci_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          tac_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          hashCode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityLte_descriptor;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte getDefaultInstanceForType() {
          return gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.getDefaultInstance();
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte build() {
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte buildPartial() {
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte result = new gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.ci_ = ci_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.mcc_ = mcc_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.mnc_ = mnc_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.pci_ = pci_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.tac_ = tac_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.hashCode_ = hashCode_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte) {
            return mergeFrom((gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte other) {
          if (other == gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte.getDefaultInstance()) return this;
          if (other.hasCi()) {
            setCi(other.getCi());
          }
          if (other.hasMcc()) {
            setMcc(other.getMcc());
          }
          if (other.hasMnc()) {
            setMnc(other.getMnc());
          }
          if (other.hasPci()) {
            setPci(other.getPci());
          }
          if (other.hasTac()) {
            setTac(other.getTac());
          }
          if (other.hasHashCode()) {
            setHashCode(other.getHashCode());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (gov.nist.perfloc.CellularData.CellularReading.CellIdentityLte) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int ci_ ;
        /**
         * <code>optional int32 ci = 1;</code>
         *
         * <pre>
         * 28-bit Cell Identity, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasCi() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 ci = 1;</code>
         *
         * <pre>
         * 28-bit Cell Identity, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getCi() {
          return ci_;
        }
        /**
         * <code>optional int32 ci = 1;</code>
         *
         * <pre>
         * 28-bit Cell Identity, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setCi(int value) {
          bitField0_ |= 0x00000001;
          ci_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 ci = 1;</code>
         *
         * <pre>
         * 28-bit Cell Identity, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearCi() {
          bitField0_ = (bitField0_ & ~0x00000001);
          ci_ = 0;
          onChanged();
          return this;
        }

        private int mcc_ ;
        /**
         * <code>optional int32 mcc = 2;</code>
         *
         * <pre>
         * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasMcc() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 mcc = 2;</code>
         *
         * <pre>
         * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getMcc() {
          return mcc_;
        }
        /**
         * <code>optional int32 mcc = 2;</code>
         *
         * <pre>
         * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setMcc(int value) {
          bitField0_ |= 0x00000002;
          mcc_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 mcc = 2;</code>
         *
         * <pre>
         * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearMcc() {
          bitField0_ = (bitField0_ & ~0x00000002);
          mcc_ = 0;
          onChanged();
          return this;
        }

        private int mnc_ ;
        /**
         * <code>optional int32 mnc = 3;</code>
         *
         * <pre>
         * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasMnc() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 mnc = 3;</code>
         *
         * <pre>
         * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getMnc() {
          return mnc_;
        }
        /**
         * <code>optional int32 mnc = 3;</code>
         *
         * <pre>
         * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setMnc(int value) {
          bitField0_ |= 0x00000004;
          mnc_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 mnc = 3;</code>
         *
         * <pre>
         * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearMnc() {
          bitField0_ = (bitField0_ & ~0x00000004);
          mnc_ = 0;
          onChanged();
          return this;
        }

        private int pci_ ;
        /**
         * <code>optional int32 pci = 4;</code>
         *
         * <pre>
         * Physical Cell Id 0..503, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasPci() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 pci = 4;</code>
         *
         * <pre>
         * Physical Cell Id 0..503, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getPci() {
          return pci_;
        }
        /**
         * <code>optional int32 pci = 4;</code>
         *
         * <pre>
         * Physical Cell Id 0..503, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setPci(int value) {
          bitField0_ |= 0x00000008;
          pci_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 pci = 4;</code>
         *
         * <pre>
         * Physical Cell Id 0..503, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearPci() {
          bitField0_ = (bitField0_ & ~0x00000008);
          pci_ = 0;
          onChanged();
          return this;
        }

        private int tac_ ;
        /**
         * <code>optional int32 tac = 5;</code>
         *
         * <pre>
         * 16-bit Tracking Area Code, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasTac() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int32 tac = 5;</code>
         *
         * <pre>
         * 16-bit Tracking Area Code, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getTac() {
          return tac_;
        }
        /**
         * <code>optional int32 tac = 5;</code>
         *
         * <pre>
         * 16-bit Tracking Area Code, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setTac(int value) {
          bitField0_ |= 0x00000010;
          tac_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 tac = 5;</code>
         *
         * <pre>
         * 16-bit Tracking Area Code, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearTac() {
          bitField0_ = (bitField0_ & ~0x00000010);
          tac_ = 0;
          onChanged();
          return this;
        }

        private int hashCode_ ;
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public boolean hasHashCode() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public int getHashCode() {
          return hashCode_;
        }
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder setHashCode(int value) {
          bitField0_ |= 0x00000020;
          hashCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder clearHashCode() {
          bitField0_ = (bitField0_ & ~0x00000020);
          hashCode_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:perfloc.CellularReading.CellIdentityLte)
      }

      static {
        defaultInstance = new CellIdentityLte(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:perfloc.CellularReading.CellIdentityLte)
    }

    public interface CellIdentityWcdmaOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfloc.CellularReading.CellIdentityWcdma)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 cid = 1;</code>
       *
       * <pre>
       * CID 28-bit UMTS Cell Identity described in TS 25.331, 0..268435455, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasCid();
      /**
       * <code>optional int32 cid = 1;</code>
       *
       * <pre>
       * CID 28-bit UMTS Cell Identity described in TS 25.331, 0..268435455, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getCid();

      /**
       * <code>optional int32 lac = 2;</code>
       *
       * <pre>
       * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasLac();
      /**
       * <code>optional int32 lac = 2;</code>
       *
       * <pre>
       * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getLac();

      /**
       * <code>optional int32 mcc = 3;</code>
       *
       * <pre>
       * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasMcc();
      /**
       * <code>optional int32 mcc = 3;</code>
       *
       * <pre>
       * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getMcc();

      /**
       * <code>optional int32 mnc = 4;</code>
       *
       * <pre>
       * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasMnc();
      /**
       * <code>optional int32 mnc = 4;</code>
       *
       * <pre>
       * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getMnc();

      /**
       * <code>optional int32 psc = 5;</code>
       *
       * <pre>
       * 9-bit UMTS Primary Scrambling Code described in TS 25.331, 0..511, Integer.MAX_VALUE if unknown
       * </pre>
       */
      boolean hasPsc();
      /**
       * <code>optional int32 psc = 5;</code>
       *
       * <pre>
       * 9-bit UMTS Primary Scrambling Code described in TS 25.331, 0..511, Integer.MAX_VALUE if unknown
       * </pre>
       */
      int getPsc();

      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      boolean hasHashCode();
      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      int getHashCode();
    }
    /**
     * Protobuf type {@code perfloc.CellularReading.CellIdentityWcdma}
     */
    public static final class CellIdentityWcdma extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:perfloc.CellularReading.CellIdentityWcdma)
        CellIdentityWcdmaOrBuilder {
      // Use CellIdentityWcdma.newBuilder() to construct.
      private CellIdentityWcdma(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CellIdentityWcdma(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CellIdentityWcdma defaultInstance;
      public static CellIdentityWcdma getDefaultInstance() {
        return defaultInstance;
      }

      public CellIdentityWcdma getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CellIdentityWcdma(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                cid_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                lac_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                mcc_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                mnc_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                psc_ = input.readInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                hashCode_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityWcdma_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityWcdma_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.class, gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.Builder.class);
      }

      public static com.google.protobuf.Parser<CellIdentityWcdma> PARSER =
          new com.google.protobuf.AbstractParser<CellIdentityWcdma>() {
        public CellIdentityWcdma parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CellIdentityWcdma(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CellIdentityWcdma> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CID_FIELD_NUMBER = 1;
      private int cid_;
      /**
       * <code>optional int32 cid = 1;</code>
       *
       * <pre>
       * CID 28-bit UMTS Cell Identity described in TS 25.331, 0..268435455, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasCid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 cid = 1;</code>
       *
       * <pre>
       * CID 28-bit UMTS Cell Identity described in TS 25.331, 0..268435455, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getCid() {
        return cid_;
      }

      public static final int LAC_FIELD_NUMBER = 2;
      private int lac_;
      /**
       * <code>optional int32 lac = 2;</code>
       *
       * <pre>
       * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasLac() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 lac = 2;</code>
       *
       * <pre>
       * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getLac() {
        return lac_;
      }

      public static final int MCC_FIELD_NUMBER = 3;
      private int mcc_;
      /**
       * <code>optional int32 mcc = 3;</code>
       *
       * <pre>
       * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasMcc() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 mcc = 3;</code>
       *
       * <pre>
       * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getMcc() {
        return mcc_;
      }

      public static final int MNC_FIELD_NUMBER = 4;
      private int mnc_;
      /**
       * <code>optional int32 mnc = 4;</code>
       *
       * <pre>
       * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasMnc() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 mnc = 4;</code>
       *
       * <pre>
       * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getMnc() {
        return mnc_;
      }

      public static final int PSC_FIELD_NUMBER = 5;
      private int psc_;
      /**
       * <code>optional int32 psc = 5;</code>
       *
       * <pre>
       * 9-bit UMTS Primary Scrambling Code described in TS 25.331, 0..511, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public boolean hasPsc() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 psc = 5;</code>
       *
       * <pre>
       * 9-bit UMTS Primary Scrambling Code described in TS 25.331, 0..511, Integer.MAX_VALUE if unknown
       * </pre>
       */
      public int getPsc() {
        return psc_;
      }

      public static final int HASH_CODE_FIELD_NUMBER = 6;
      private int hashCode_;
      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public boolean hasHashCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 hash_code = 6;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public int getHashCode() {
        return hashCode_;
      }

      private void initFields() {
        cid_ = 0;
        lac_ = 0;
        mcc_ = 0;
        mnc_ = 0;
        psc_ = 0;
        hashCode_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, cid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, lac_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, mcc_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, mnc_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, psc_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(6, hashCode_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, cid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, lac_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, mcc_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, mnc_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, psc_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, hashCode_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfloc.CellularReading.CellIdentityWcdma}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfloc.CellularReading.CellIdentityWcdma)
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdmaOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityWcdma_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityWcdma_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.class, gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.Builder.class);
        }

        // Construct using gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          cid_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          lac_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          mcc_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          mnc_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          psc_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          hashCode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellIdentityWcdma_descriptor;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma getDefaultInstanceForType() {
          return gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.getDefaultInstance();
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma build() {
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma buildPartial() {
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma result = new gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.cid_ = cid_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.lac_ = lac_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.mcc_ = mcc_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.mnc_ = mnc_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.psc_ = psc_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.hashCode_ = hashCode_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma) {
            return mergeFrom((gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma other) {
          if (other == gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma.getDefaultInstance()) return this;
          if (other.hasCid()) {
            setCid(other.getCid());
          }
          if (other.hasLac()) {
            setLac(other.getLac());
          }
          if (other.hasMcc()) {
            setMcc(other.getMcc());
          }
          if (other.hasMnc()) {
            setMnc(other.getMnc());
          }
          if (other.hasPsc()) {
            setPsc(other.getPsc());
          }
          if (other.hasHashCode()) {
            setHashCode(other.getHashCode());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (gov.nist.perfloc.CellularData.CellularReading.CellIdentityWcdma) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int cid_ ;
        /**
         * <code>optional int32 cid = 1;</code>
         *
         * <pre>
         * CID 28-bit UMTS Cell Identity described in TS 25.331, 0..268435455, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasCid() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 cid = 1;</code>
         *
         * <pre>
         * CID 28-bit UMTS Cell Identity described in TS 25.331, 0..268435455, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getCid() {
          return cid_;
        }
        /**
         * <code>optional int32 cid = 1;</code>
         *
         * <pre>
         * CID 28-bit UMTS Cell Identity described in TS 25.331, 0..268435455, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setCid(int value) {
          bitField0_ |= 0x00000001;
          cid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 cid = 1;</code>
         *
         * <pre>
         * CID 28-bit UMTS Cell Identity described in TS 25.331, 0..268435455, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearCid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          cid_ = 0;
          onChanged();
          return this;
        }

        private int lac_ ;
        /**
         * <code>optional int32 lac = 2;</code>
         *
         * <pre>
         * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasLac() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 lac = 2;</code>
         *
         * <pre>
         * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getLac() {
          return lac_;
        }
        /**
         * <code>optional int32 lac = 2;</code>
         *
         * <pre>
         * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setLac(int value) {
          bitField0_ |= 0x00000002;
          lac_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 lac = 2;</code>
         *
         * <pre>
         * 16-bit Location Area Code, 0..65535, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearLac() {
          bitField0_ = (bitField0_ & ~0x00000002);
          lac_ = 0;
          onChanged();
          return this;
        }

        private int mcc_ ;
        /**
         * <code>optional int32 mcc = 3;</code>
         *
         * <pre>
         * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasMcc() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 mcc = 3;</code>
         *
         * <pre>
         * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getMcc() {
          return mcc_;
        }
        /**
         * <code>optional int32 mcc = 3;</code>
         *
         * <pre>
         * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setMcc(int value) {
          bitField0_ |= 0x00000004;
          mcc_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 mcc = 3;</code>
         *
         * <pre>
         * 3-digit Mobile Country Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearMcc() {
          bitField0_ = (bitField0_ & ~0x00000004);
          mcc_ = 0;
          onChanged();
          return this;
        }

        private int mnc_ ;
        /**
         * <code>optional int32 mnc = 4;</code>
         *
         * <pre>
         * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasMnc() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 mnc = 4;</code>
         *
         * <pre>
         * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getMnc() {
          return mnc_;
        }
        /**
         * <code>optional int32 mnc = 4;</code>
         *
         * <pre>
         * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setMnc(int value) {
          bitField0_ |= 0x00000008;
          mnc_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 mnc = 4;</code>
         *
         * <pre>
         * 2 or 3-digit Mobile Network Code, 0..999, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearMnc() {
          bitField0_ = (bitField0_ & ~0x00000008);
          mnc_ = 0;
          onChanged();
          return this;
        }

        private int psc_ ;
        /**
         * <code>optional int32 psc = 5;</code>
         *
         * <pre>
         * 9-bit UMTS Primary Scrambling Code described in TS 25.331, 0..511, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public boolean hasPsc() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int32 psc = 5;</code>
         *
         * <pre>
         * 9-bit UMTS Primary Scrambling Code described in TS 25.331, 0..511, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public int getPsc() {
          return psc_;
        }
        /**
         * <code>optional int32 psc = 5;</code>
         *
         * <pre>
         * 9-bit UMTS Primary Scrambling Code described in TS 25.331, 0..511, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder setPsc(int value) {
          bitField0_ |= 0x00000010;
          psc_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 psc = 5;</code>
         *
         * <pre>
         * 9-bit UMTS Primary Scrambling Code described in TS 25.331, 0..511, Integer.MAX_VALUE if unknown
         * </pre>
         */
        public Builder clearPsc() {
          bitField0_ = (bitField0_ & ~0x00000010);
          psc_ = 0;
          onChanged();
          return this;
        }

        private int hashCode_ ;
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public boolean hasHashCode() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public int getHashCode() {
          return hashCode_;
        }
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder setHashCode(int value) {
          bitField0_ |= 0x00000020;
          hashCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 hash_code = 6;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder clearHashCode() {
          bitField0_ = (bitField0_ & ~0x00000020);
          hashCode_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:perfloc.CellularReading.CellIdentityWcdma)
      }

      static {
        defaultInstance = new CellIdentityWcdma(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:perfloc.CellularReading.CellIdentityWcdma)
    }

    public interface CellSignalStrengthCdmaOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfloc.CellularReading.CellSignalStrengthCdma)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the signal level as an asu value between 0..97, 99 is unknown 
       * </pre>
       */
      boolean hasAsuLevel();
      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the signal level as an asu value between 0..97, 99 is unknown 
       * </pre>
       */
      int getAsuLevel();

      /**
       * <code>optional int32 cdma_dbm = 2;</code>
       *
       * <pre>
       * the CDMA RSSI value in dBm
       * </pre>
       */
      boolean hasCdmaDbm();
      /**
       * <code>optional int32 cdma_dbm = 2;</code>
       *
       * <pre>
       * the CDMA RSSI value in dBm
       * </pre>
       */
      int getCdmaDbm();

      /**
       * <code>optional int32 cdma_ecio = 3;</code>
       *
       * <pre>
       * the CDMA Ec/Io value in dB*10
       * </pre>
       */
      boolean hasCdmaEcio();
      /**
       * <code>optional int32 cdma_ecio = 3;</code>
       *
       * <pre>
       * the CDMA Ec/Io value in dB*10
       * </pre>
       */
      int getCdmaEcio();

      /**
       * <code>optional int32 cdma_level = 4;</code>
       *
       * <pre>
       * cdma as level 0..4
       * </pre>
       */
      boolean hasCdmaLevel();
      /**
       * <code>optional int32 cdma_level = 4;</code>
       *
       * <pre>
       * cdma as level 0..4
       * </pre>
       */
      int getCdmaLevel();

      /**
       * <code>optional int32 dbm = 5;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      boolean hasDbm();
      /**
       * <code>optional int32 dbm = 5;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      int getDbm();

      /**
       * <code>optional int32 evdo_dbm = 6;</code>
       *
       * <pre>
       * the EVDO RSSI value in dBm
       * </pre>
       */
      boolean hasEvdoDbm();
      /**
       * <code>optional int32 evdo_dbm = 6;</code>
       *
       * <pre>
       * the EVDO RSSI value in dBm
       * </pre>
       */
      int getEvdoDbm();

      /**
       * <code>optional int32 evdo_ecio = 7;</code>
       *
       * <pre>
       * the EVDO Ec/Io value in dB*10
       * </pre>
       */
      boolean hasEvdoEcio();
      /**
       * <code>optional int32 evdo_ecio = 7;</code>
       *
       * <pre>
       * the EVDO Ec/Io value in dB*10
       * </pre>
       */
      int getEvdoEcio();

      /**
       * <code>optional int32 evdo_level = 8;</code>
       *
       * <pre>
       * Evdo as level 0..4
       * </pre>
       */
      boolean hasEvdoLevel();
      /**
       * <code>optional int32 evdo_level = 8;</code>
       *
       * <pre>
       * Evdo as level 0..4
       * </pre>
       */
      int getEvdoLevel();

      /**
       * <code>optional int32 evdo_snr = 9;</code>
       *
       * <pre>
       * the signal to noise ratio
       * </pre>
       */
      boolean hasEvdoSnr();
      /**
       * <code>optional int32 evdo_snr = 9;</code>
       *
       * <pre>
       * the signal to noise ratio
       * </pre>
       */
      int getEvdoSnr();

      /**
       * <code>optional int32 level = 10;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      boolean hasLevel();
      /**
       * <code>optional int32 level = 10;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      int getLevel();

      /**
       * <code>optional int32 hash_code = 11;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      boolean hasHashCode();
      /**
       * <code>optional int32 hash_code = 11;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      int getHashCode();
    }
    /**
     * Protobuf type {@code perfloc.CellularReading.CellSignalStrengthCdma}
     */
    public static final class CellSignalStrengthCdma extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:perfloc.CellularReading.CellSignalStrengthCdma)
        CellSignalStrengthCdmaOrBuilder {
      // Use CellSignalStrengthCdma.newBuilder() to construct.
      private CellSignalStrengthCdma(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CellSignalStrengthCdma(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CellSignalStrengthCdma defaultInstance;
      public static CellSignalStrengthCdma getDefaultInstance() {
        return defaultInstance;
      }

      public CellSignalStrengthCdma getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CellSignalStrengthCdma(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                asuLevel_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                cdmaDbm_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                cdmaEcio_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                cdmaLevel_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                dbm_ = input.readInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                evdoDbm_ = input.readInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                evdoEcio_ = input.readInt32();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                evdoLevel_ = input.readInt32();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000100;
                evdoSnr_ = input.readInt32();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000200;
                level_ = input.readInt32();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000400;
                hashCode_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthCdma_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthCdma_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.class, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.Builder.class);
      }

      public static com.google.protobuf.Parser<CellSignalStrengthCdma> PARSER =
          new com.google.protobuf.AbstractParser<CellSignalStrengthCdma>() {
        public CellSignalStrengthCdma parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CellSignalStrengthCdma(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CellSignalStrengthCdma> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ASU_LEVEL_FIELD_NUMBER = 1;
      private int asuLevel_;
      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the signal level as an asu value between 0..97, 99 is unknown 
       * </pre>
       */
      public boolean hasAsuLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the signal level as an asu value between 0..97, 99 is unknown 
       * </pre>
       */
      public int getAsuLevel() {
        return asuLevel_;
      }

      public static final int CDMA_DBM_FIELD_NUMBER = 2;
      private int cdmaDbm_;
      /**
       * <code>optional int32 cdma_dbm = 2;</code>
       *
       * <pre>
       * the CDMA RSSI value in dBm
       * </pre>
       */
      public boolean hasCdmaDbm() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cdma_dbm = 2;</code>
       *
       * <pre>
       * the CDMA RSSI value in dBm
       * </pre>
       */
      public int getCdmaDbm() {
        return cdmaDbm_;
      }

      public static final int CDMA_ECIO_FIELD_NUMBER = 3;
      private int cdmaEcio_;
      /**
       * <code>optional int32 cdma_ecio = 3;</code>
       *
       * <pre>
       * the CDMA Ec/Io value in dB*10
       * </pre>
       */
      public boolean hasCdmaEcio() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 cdma_ecio = 3;</code>
       *
       * <pre>
       * the CDMA Ec/Io value in dB*10
       * </pre>
       */
      public int getCdmaEcio() {
        return cdmaEcio_;
      }

      public static final int CDMA_LEVEL_FIELD_NUMBER = 4;
      private int cdmaLevel_;
      /**
       * <code>optional int32 cdma_level = 4;</code>
       *
       * <pre>
       * cdma as level 0..4
       * </pre>
       */
      public boolean hasCdmaLevel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 cdma_level = 4;</code>
       *
       * <pre>
       * cdma as level 0..4
       * </pre>
       */
      public int getCdmaLevel() {
        return cdmaLevel_;
      }

      public static final int DBM_FIELD_NUMBER = 5;
      private int dbm_;
      /**
       * <code>optional int32 dbm = 5;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      public boolean hasDbm() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 dbm = 5;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      public int getDbm() {
        return dbm_;
      }

      public static final int EVDO_DBM_FIELD_NUMBER = 6;
      private int evdoDbm_;
      /**
       * <code>optional int32 evdo_dbm = 6;</code>
       *
       * <pre>
       * the EVDO RSSI value in dBm
       * </pre>
       */
      public boolean hasEvdoDbm() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 evdo_dbm = 6;</code>
       *
       * <pre>
       * the EVDO RSSI value in dBm
       * </pre>
       */
      public int getEvdoDbm() {
        return evdoDbm_;
      }

      public static final int EVDO_ECIO_FIELD_NUMBER = 7;
      private int evdoEcio_;
      /**
       * <code>optional int32 evdo_ecio = 7;</code>
       *
       * <pre>
       * the EVDO Ec/Io value in dB*10
       * </pre>
       */
      public boolean hasEvdoEcio() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 evdo_ecio = 7;</code>
       *
       * <pre>
       * the EVDO Ec/Io value in dB*10
       * </pre>
       */
      public int getEvdoEcio() {
        return evdoEcio_;
      }

      public static final int EVDO_LEVEL_FIELD_NUMBER = 8;
      private int evdoLevel_;
      /**
       * <code>optional int32 evdo_level = 8;</code>
       *
       * <pre>
       * Evdo as level 0..4
       * </pre>
       */
      public boolean hasEvdoLevel() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 evdo_level = 8;</code>
       *
       * <pre>
       * Evdo as level 0..4
       * </pre>
       */
      public int getEvdoLevel() {
        return evdoLevel_;
      }

      public static final int EVDO_SNR_FIELD_NUMBER = 9;
      private int evdoSnr_;
      /**
       * <code>optional int32 evdo_snr = 9;</code>
       *
       * <pre>
       * the signal to noise ratio
       * </pre>
       */
      public boolean hasEvdoSnr() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 evdo_snr = 9;</code>
       *
       * <pre>
       * the signal to noise ratio
       * </pre>
       */
      public int getEvdoSnr() {
        return evdoSnr_;
      }

      public static final int LEVEL_FIELD_NUMBER = 10;
      private int level_;
      /**
       * <code>optional int32 level = 10;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 level = 10;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      public int getLevel() {
        return level_;
      }

      public static final int HASH_CODE_FIELD_NUMBER = 11;
      private int hashCode_;
      /**
       * <code>optional int32 hash_code = 11;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public boolean hasHashCode() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 hash_code = 11;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public int getHashCode() {
        return hashCode_;
      }

      private void initFields() {
        asuLevel_ = 0;
        cdmaDbm_ = 0;
        cdmaEcio_ = 0;
        cdmaLevel_ = 0;
        dbm_ = 0;
        evdoDbm_ = 0;
        evdoEcio_ = 0;
        evdoLevel_ = 0;
        evdoSnr_ = 0;
        level_ = 0;
        hashCode_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, asuLevel_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, cdmaDbm_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, cdmaEcio_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, cdmaLevel_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, dbm_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(6, evdoDbm_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeInt32(7, evdoEcio_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeInt32(8, evdoLevel_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeInt32(9, evdoSnr_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeInt32(10, level_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeInt32(11, hashCode_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, asuLevel_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, cdmaDbm_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, cdmaEcio_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, cdmaLevel_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, dbm_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, evdoDbm_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(7, evdoEcio_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(8, evdoLevel_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(9, evdoSnr_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10, level_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(11, hashCode_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfloc.CellularReading.CellSignalStrengthCdma}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfloc.CellularReading.CellSignalStrengthCdma)
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdmaOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthCdma_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthCdma_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.class, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.Builder.class);
        }

        // Construct using gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          asuLevel_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          cdmaDbm_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          cdmaEcio_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          cdmaLevel_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          dbm_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          evdoDbm_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          evdoEcio_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          evdoLevel_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          evdoSnr_ = 0;
          bitField0_ = (bitField0_ & ~0x00000100);
          level_ = 0;
          bitField0_ = (bitField0_ & ~0x00000200);
          hashCode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthCdma_descriptor;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma getDefaultInstanceForType() {
          return gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.getDefaultInstance();
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma build() {
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma buildPartial() {
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma result = new gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.asuLevel_ = asuLevel_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.cdmaDbm_ = cdmaDbm_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.cdmaEcio_ = cdmaEcio_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.cdmaLevel_ = cdmaLevel_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.dbm_ = dbm_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.evdoDbm_ = evdoDbm_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.evdoEcio_ = evdoEcio_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.evdoLevel_ = evdoLevel_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.evdoSnr_ = evdoSnr_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.level_ = level_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.hashCode_ = hashCode_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma) {
            return mergeFrom((gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma other) {
          if (other == gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma.getDefaultInstance()) return this;
          if (other.hasAsuLevel()) {
            setAsuLevel(other.getAsuLevel());
          }
          if (other.hasCdmaDbm()) {
            setCdmaDbm(other.getCdmaDbm());
          }
          if (other.hasCdmaEcio()) {
            setCdmaEcio(other.getCdmaEcio());
          }
          if (other.hasCdmaLevel()) {
            setCdmaLevel(other.getCdmaLevel());
          }
          if (other.hasDbm()) {
            setDbm(other.getDbm());
          }
          if (other.hasEvdoDbm()) {
            setEvdoDbm(other.getEvdoDbm());
          }
          if (other.hasEvdoEcio()) {
            setEvdoEcio(other.getEvdoEcio());
          }
          if (other.hasEvdoLevel()) {
            setEvdoLevel(other.getEvdoLevel());
          }
          if (other.hasEvdoSnr()) {
            setEvdoSnr(other.getEvdoSnr());
          }
          if (other.hasLevel()) {
            setLevel(other.getLevel());
          }
          if (other.hasHashCode()) {
            setHashCode(other.getHashCode());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthCdma) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int asuLevel_ ;
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the signal level as an asu value between 0..97, 99 is unknown 
         * </pre>
         */
        public boolean hasAsuLevel() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the signal level as an asu value between 0..97, 99 is unknown 
         * </pre>
         */
        public int getAsuLevel() {
          return asuLevel_;
        }
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the signal level as an asu value between 0..97, 99 is unknown 
         * </pre>
         */
        public Builder setAsuLevel(int value) {
          bitField0_ |= 0x00000001;
          asuLevel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the signal level as an asu value between 0..97, 99 is unknown 
         * </pre>
         */
        public Builder clearAsuLevel() {
          bitField0_ = (bitField0_ & ~0x00000001);
          asuLevel_ = 0;
          onChanged();
          return this;
        }

        private int cdmaDbm_ ;
        /**
         * <code>optional int32 cdma_dbm = 2;</code>
         *
         * <pre>
         * the CDMA RSSI value in dBm
         * </pre>
         */
        public boolean hasCdmaDbm() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 cdma_dbm = 2;</code>
         *
         * <pre>
         * the CDMA RSSI value in dBm
         * </pre>
         */
        public int getCdmaDbm() {
          return cdmaDbm_;
        }
        /**
         * <code>optional int32 cdma_dbm = 2;</code>
         *
         * <pre>
         * the CDMA RSSI value in dBm
         * </pre>
         */
        public Builder setCdmaDbm(int value) {
          bitField0_ |= 0x00000002;
          cdmaDbm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 cdma_dbm = 2;</code>
         *
         * <pre>
         * the CDMA RSSI value in dBm
         * </pre>
         */
        public Builder clearCdmaDbm() {
          bitField0_ = (bitField0_ & ~0x00000002);
          cdmaDbm_ = 0;
          onChanged();
          return this;
        }

        private int cdmaEcio_ ;
        /**
         * <code>optional int32 cdma_ecio = 3;</code>
         *
         * <pre>
         * the CDMA Ec/Io value in dB*10
         * </pre>
         */
        public boolean hasCdmaEcio() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 cdma_ecio = 3;</code>
         *
         * <pre>
         * the CDMA Ec/Io value in dB*10
         * </pre>
         */
        public int getCdmaEcio() {
          return cdmaEcio_;
        }
        /**
         * <code>optional int32 cdma_ecio = 3;</code>
         *
         * <pre>
         * the CDMA Ec/Io value in dB*10
         * </pre>
         */
        public Builder setCdmaEcio(int value) {
          bitField0_ |= 0x00000004;
          cdmaEcio_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 cdma_ecio = 3;</code>
         *
         * <pre>
         * the CDMA Ec/Io value in dB*10
         * </pre>
         */
        public Builder clearCdmaEcio() {
          bitField0_ = (bitField0_ & ~0x00000004);
          cdmaEcio_ = 0;
          onChanged();
          return this;
        }

        private int cdmaLevel_ ;
        /**
         * <code>optional int32 cdma_level = 4;</code>
         *
         * <pre>
         * cdma as level 0..4
         * </pre>
         */
        public boolean hasCdmaLevel() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 cdma_level = 4;</code>
         *
         * <pre>
         * cdma as level 0..4
         * </pre>
         */
        public int getCdmaLevel() {
          return cdmaLevel_;
        }
        /**
         * <code>optional int32 cdma_level = 4;</code>
         *
         * <pre>
         * cdma as level 0..4
         * </pre>
         */
        public Builder setCdmaLevel(int value) {
          bitField0_ |= 0x00000008;
          cdmaLevel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 cdma_level = 4;</code>
         *
         * <pre>
         * cdma as level 0..4
         * </pre>
         */
        public Builder clearCdmaLevel() {
          bitField0_ = (bitField0_ & ~0x00000008);
          cdmaLevel_ = 0;
          onChanged();
          return this;
        }

        private int dbm_ ;
        /**
         * <code>optional int32 dbm = 5;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public boolean hasDbm() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int32 dbm = 5;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public int getDbm() {
          return dbm_;
        }
        /**
         * <code>optional int32 dbm = 5;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public Builder setDbm(int value) {
          bitField0_ |= 0x00000010;
          dbm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 dbm = 5;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public Builder clearDbm() {
          bitField0_ = (bitField0_ & ~0x00000010);
          dbm_ = 0;
          onChanged();
          return this;
        }

        private int evdoDbm_ ;
        /**
         * <code>optional int32 evdo_dbm = 6;</code>
         *
         * <pre>
         * the EVDO RSSI value in dBm
         * </pre>
         */
        public boolean hasEvdoDbm() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional int32 evdo_dbm = 6;</code>
         *
         * <pre>
         * the EVDO RSSI value in dBm
         * </pre>
         */
        public int getEvdoDbm() {
          return evdoDbm_;
        }
        /**
         * <code>optional int32 evdo_dbm = 6;</code>
         *
         * <pre>
         * the EVDO RSSI value in dBm
         * </pre>
         */
        public Builder setEvdoDbm(int value) {
          bitField0_ |= 0x00000020;
          evdoDbm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 evdo_dbm = 6;</code>
         *
         * <pre>
         * the EVDO RSSI value in dBm
         * </pre>
         */
        public Builder clearEvdoDbm() {
          bitField0_ = (bitField0_ & ~0x00000020);
          evdoDbm_ = 0;
          onChanged();
          return this;
        }

        private int evdoEcio_ ;
        /**
         * <code>optional int32 evdo_ecio = 7;</code>
         *
         * <pre>
         * the EVDO Ec/Io value in dB*10
         * </pre>
         */
        public boolean hasEvdoEcio() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional int32 evdo_ecio = 7;</code>
         *
         * <pre>
         * the EVDO Ec/Io value in dB*10
         * </pre>
         */
        public int getEvdoEcio() {
          return evdoEcio_;
        }
        /**
         * <code>optional int32 evdo_ecio = 7;</code>
         *
         * <pre>
         * the EVDO Ec/Io value in dB*10
         * </pre>
         */
        public Builder setEvdoEcio(int value) {
          bitField0_ |= 0x00000040;
          evdoEcio_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 evdo_ecio = 7;</code>
         *
         * <pre>
         * the EVDO Ec/Io value in dB*10
         * </pre>
         */
        public Builder clearEvdoEcio() {
          bitField0_ = (bitField0_ & ~0x00000040);
          evdoEcio_ = 0;
          onChanged();
          return this;
        }

        private int evdoLevel_ ;
        /**
         * <code>optional int32 evdo_level = 8;</code>
         *
         * <pre>
         * Evdo as level 0..4
         * </pre>
         */
        public boolean hasEvdoLevel() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional int32 evdo_level = 8;</code>
         *
         * <pre>
         * Evdo as level 0..4
         * </pre>
         */
        public int getEvdoLevel() {
          return evdoLevel_;
        }
        /**
         * <code>optional int32 evdo_level = 8;</code>
         *
         * <pre>
         * Evdo as level 0..4
         * </pre>
         */
        public Builder setEvdoLevel(int value) {
          bitField0_ |= 0x00000080;
          evdoLevel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 evdo_level = 8;</code>
         *
         * <pre>
         * Evdo as level 0..4
         * </pre>
         */
        public Builder clearEvdoLevel() {
          bitField0_ = (bitField0_ & ~0x00000080);
          evdoLevel_ = 0;
          onChanged();
          return this;
        }

        private int evdoSnr_ ;
        /**
         * <code>optional int32 evdo_snr = 9;</code>
         *
         * <pre>
         * the signal to noise ratio
         * </pre>
         */
        public boolean hasEvdoSnr() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional int32 evdo_snr = 9;</code>
         *
         * <pre>
         * the signal to noise ratio
         * </pre>
         */
        public int getEvdoSnr() {
          return evdoSnr_;
        }
        /**
         * <code>optional int32 evdo_snr = 9;</code>
         *
         * <pre>
         * the signal to noise ratio
         * </pre>
         */
        public Builder setEvdoSnr(int value) {
          bitField0_ |= 0x00000100;
          evdoSnr_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 evdo_snr = 9;</code>
         *
         * <pre>
         * the signal to noise ratio
         * </pre>
         */
        public Builder clearEvdoSnr() {
          bitField0_ = (bitField0_ & ~0x00000100);
          evdoSnr_ = 0;
          onChanged();
          return this;
        }

        private int level_ ;
        /**
         * <code>optional int32 level = 10;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public boolean hasLevel() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional int32 level = 10;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public int getLevel() {
          return level_;
        }
        /**
         * <code>optional int32 level = 10;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public Builder setLevel(int value) {
          bitField0_ |= 0x00000200;
          level_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 level = 10;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public Builder clearLevel() {
          bitField0_ = (bitField0_ & ~0x00000200);
          level_ = 0;
          onChanged();
          return this;
        }

        private int hashCode_ ;
        /**
         * <code>optional int32 hash_code = 11;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public boolean hasHashCode() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional int32 hash_code = 11;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public int getHashCode() {
          return hashCode_;
        }
        /**
         * <code>optional int32 hash_code = 11;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder setHashCode(int value) {
          bitField0_ |= 0x00000400;
          hashCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 hash_code = 11;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder clearHashCode() {
          bitField0_ = (bitField0_ & ~0x00000400);
          hashCode_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:perfloc.CellularReading.CellSignalStrengthCdma)
      }

      static {
        defaultInstance = new CellSignalStrengthCdma(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:perfloc.CellularReading.CellSignalStrengthCdma)
    }

    public interface CellSignalStrengthGsmOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfloc.CellularReading.CellSignalStrengthGsm)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
       * </pre>
       */
      boolean hasAsuLevel();
      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
       * </pre>
       */
      int getAsuLevel();

      /**
       * <code>optional int32 dbm = 2;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      boolean hasDbm();
      /**
       * <code>optional int32 dbm = 2;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      int getDbm();

      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      boolean hasLevel();
      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      int getLevel();

      /**
       * <code>optional int32 hash_code = 4;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      boolean hasHashCode();
      /**
       * <code>optional int32 hash_code = 4;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      int getHashCode();
    }
    /**
     * Protobuf type {@code perfloc.CellularReading.CellSignalStrengthGsm}
     */
    public static final class CellSignalStrengthGsm extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:perfloc.CellularReading.CellSignalStrengthGsm)
        CellSignalStrengthGsmOrBuilder {
      // Use CellSignalStrengthGsm.newBuilder() to construct.
      private CellSignalStrengthGsm(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CellSignalStrengthGsm(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CellSignalStrengthGsm defaultInstance;
      public static CellSignalStrengthGsm getDefaultInstance() {
        return defaultInstance;
      }

      public CellSignalStrengthGsm getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CellSignalStrengthGsm(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                asuLevel_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                dbm_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                level_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                hashCode_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthGsm_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthGsm_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.class, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.Builder.class);
      }

      public static com.google.protobuf.Parser<CellSignalStrengthGsm> PARSER =
          new com.google.protobuf.AbstractParser<CellSignalStrengthGsm>() {
        public CellSignalStrengthGsm parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CellSignalStrengthGsm(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CellSignalStrengthGsm> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ASU_LEVEL_FIELD_NUMBER = 1;
      private int asuLevel_;
      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
       * </pre>
       */
      public boolean hasAsuLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
       * </pre>
       */
      public int getAsuLevel() {
        return asuLevel_;
      }

      public static final int DBM_FIELD_NUMBER = 2;
      private int dbm_;
      /**
       * <code>optional int32 dbm = 2;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      public boolean hasDbm() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 dbm = 2;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      public int getDbm() {
        return dbm_;
      }

      public static final int LEVEL_FIELD_NUMBER = 3;
      private int level_;
      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      public int getLevel() {
        return level_;
      }

      public static final int HASH_CODE_FIELD_NUMBER = 4;
      private int hashCode_;
      /**
       * <code>optional int32 hash_code = 4;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public boolean hasHashCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 hash_code = 4;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public int getHashCode() {
        return hashCode_;
      }

      private void initFields() {
        asuLevel_ = 0;
        dbm_ = 0;
        level_ = 0;
        hashCode_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, asuLevel_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, dbm_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, level_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, hashCode_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, asuLevel_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, dbm_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, level_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, hashCode_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfloc.CellularReading.CellSignalStrengthGsm}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfloc.CellularReading.CellSignalStrengthGsm)
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsmOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthGsm_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthGsm_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.class, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.Builder.class);
        }

        // Construct using gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          asuLevel_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          dbm_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          level_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          hashCode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthGsm_descriptor;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm getDefaultInstanceForType() {
          return gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.getDefaultInstance();
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm build() {
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm buildPartial() {
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm result = new gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.asuLevel_ = asuLevel_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.dbm_ = dbm_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.level_ = level_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.hashCode_ = hashCode_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm) {
            return mergeFrom((gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm other) {
          if (other == gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm.getDefaultInstance()) return this;
          if (other.hasAsuLevel()) {
            setAsuLevel(other.getAsuLevel());
          }
          if (other.hasDbm()) {
            setDbm(other.getDbm());
          }
          if (other.hasLevel()) {
            setLevel(other.getLevel());
          }
          if (other.hasHashCode()) {
            setHashCode(other.getHashCode());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthGsm) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int asuLevel_ ;
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
         * </pre>
         */
        public boolean hasAsuLevel() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
         * </pre>
         */
        public int getAsuLevel() {
          return asuLevel_;
        }
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
         * </pre>
         */
        public Builder setAsuLevel(int value) {
          bitField0_ |= 0x00000001;
          asuLevel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
         * </pre>
         */
        public Builder clearAsuLevel() {
          bitField0_ = (bitField0_ & ~0x00000001);
          asuLevel_ = 0;
          onChanged();
          return this;
        }

        private int dbm_ ;
        /**
         * <code>optional int32 dbm = 2;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public boolean hasDbm() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 dbm = 2;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public int getDbm() {
          return dbm_;
        }
        /**
         * <code>optional int32 dbm = 2;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public Builder setDbm(int value) {
          bitField0_ |= 0x00000002;
          dbm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 dbm = 2;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public Builder clearDbm() {
          bitField0_ = (bitField0_ & ~0x00000002);
          dbm_ = 0;
          onChanged();
          return this;
        }

        private int level_ ;
        /**
         * <code>optional int32 level = 3;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public boolean hasLevel() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 level = 3;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public int getLevel() {
          return level_;
        }
        /**
         * <code>optional int32 level = 3;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public Builder setLevel(int value) {
          bitField0_ |= 0x00000004;
          level_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 level = 3;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public Builder clearLevel() {
          bitField0_ = (bitField0_ & ~0x00000004);
          level_ = 0;
          onChanged();
          return this;
        }

        private int hashCode_ ;
        /**
         * <code>optional int32 hash_code = 4;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public boolean hasHashCode() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 hash_code = 4;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public int getHashCode() {
          return hashCode_;
        }
        /**
         * <code>optional int32 hash_code = 4;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder setHashCode(int value) {
          bitField0_ |= 0x00000008;
          hashCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 hash_code = 4;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder clearHashCode() {
          bitField0_ = (bitField0_ & ~0x00000008);
          hashCode_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:perfloc.CellularReading.CellSignalStrengthGsm)
      }

      static {
        defaultInstance = new CellSignalStrengthGsm(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:perfloc.CellularReading.CellSignalStrengthGsm)
    }

    public interface CellSignalStrengthLteOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfloc.CellularReading.CellSignalStrengthLte)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the LTE signal level as an asu value between 0..97, 99 is unknown Asu is calculated based on 3GPP RSRP
       * </pre>
       */
      boolean hasAsuLevel();
      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the LTE signal level as an asu value between 0..97, 99 is unknown Asu is calculated based on 3GPP RSRP
       * </pre>
       */
      int getAsuLevel();

      /**
       * <code>optional int32 dbm = 2;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      boolean hasDbm();
      /**
       * <code>optional int32 dbm = 2;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      int getDbm();

      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      boolean hasLevel();
      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      int getLevel();

      /**
       * <code>optional int32 timing_advance = 4;</code>
       *
       * <pre>
       * the timing advance value for LTE
       * </pre>
       */
      boolean hasTimingAdvance();
      /**
       * <code>optional int32 timing_advance = 4;</code>
       *
       * <pre>
       * the timing advance value for LTE
       * </pre>
       */
      int getTimingAdvance();

      /**
       * <code>optional int32 hash_code = 5;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      boolean hasHashCode();
      /**
       * <code>optional int32 hash_code = 5;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      int getHashCode();
    }
    /**
     * Protobuf type {@code perfloc.CellularReading.CellSignalStrengthLte}
     */
    public static final class CellSignalStrengthLte extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:perfloc.CellularReading.CellSignalStrengthLte)
        CellSignalStrengthLteOrBuilder {
      // Use CellSignalStrengthLte.newBuilder() to construct.
      private CellSignalStrengthLte(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CellSignalStrengthLte(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CellSignalStrengthLte defaultInstance;
      public static CellSignalStrengthLte getDefaultInstance() {
        return defaultInstance;
      }

      public CellSignalStrengthLte getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CellSignalStrengthLte(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                asuLevel_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                dbm_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                level_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                timingAdvance_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                hashCode_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthLte_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthLte_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.class, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.Builder.class);
      }

      public static com.google.protobuf.Parser<CellSignalStrengthLte> PARSER =
          new com.google.protobuf.AbstractParser<CellSignalStrengthLte>() {
        public CellSignalStrengthLte parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CellSignalStrengthLte(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CellSignalStrengthLte> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ASU_LEVEL_FIELD_NUMBER = 1;
      private int asuLevel_;
      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the LTE signal level as an asu value between 0..97, 99 is unknown Asu is calculated based on 3GPP RSRP
       * </pre>
       */
      public boolean hasAsuLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the LTE signal level as an asu value between 0..97, 99 is unknown Asu is calculated based on 3GPP RSRP
       * </pre>
       */
      public int getAsuLevel() {
        return asuLevel_;
      }

      public static final int DBM_FIELD_NUMBER = 2;
      private int dbm_;
      /**
       * <code>optional int32 dbm = 2;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      public boolean hasDbm() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 dbm = 2;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      public int getDbm() {
        return dbm_;
      }

      public static final int LEVEL_FIELD_NUMBER = 3;
      private int level_;
      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      public int getLevel() {
        return level_;
      }

      public static final int TIMING_ADVANCE_FIELD_NUMBER = 4;
      private int timingAdvance_;
      /**
       * <code>optional int32 timing_advance = 4;</code>
       *
       * <pre>
       * the timing advance value for LTE
       * </pre>
       */
      public boolean hasTimingAdvance() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 timing_advance = 4;</code>
       *
       * <pre>
       * the timing advance value for LTE
       * </pre>
       */
      public int getTimingAdvance() {
        return timingAdvance_;
      }

      public static final int HASH_CODE_FIELD_NUMBER = 5;
      private int hashCode_;
      /**
       * <code>optional int32 hash_code = 5;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public boolean hasHashCode() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 hash_code = 5;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public int getHashCode() {
        return hashCode_;
      }

      private void initFields() {
        asuLevel_ = 0;
        dbm_ = 0;
        level_ = 0;
        timingAdvance_ = 0;
        hashCode_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, asuLevel_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, dbm_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, level_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, timingAdvance_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, hashCode_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, asuLevel_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, dbm_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, level_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, timingAdvance_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, hashCode_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfloc.CellularReading.CellSignalStrengthLte}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfloc.CellularReading.CellSignalStrengthLte)
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLteOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthLte_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthLte_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.class, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.Builder.class);
        }

        // Construct using gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          asuLevel_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          dbm_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          level_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          timingAdvance_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          hashCode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthLte_descriptor;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte getDefaultInstanceForType() {
          return gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.getDefaultInstance();
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte build() {
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte buildPartial() {
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte result = new gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.asuLevel_ = asuLevel_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.dbm_ = dbm_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.level_ = level_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.timingAdvance_ = timingAdvance_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.hashCode_ = hashCode_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte) {
            return mergeFrom((gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte other) {
          if (other == gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte.getDefaultInstance()) return this;
          if (other.hasAsuLevel()) {
            setAsuLevel(other.getAsuLevel());
          }
          if (other.hasDbm()) {
            setDbm(other.getDbm());
          }
          if (other.hasLevel()) {
            setLevel(other.getLevel());
          }
          if (other.hasTimingAdvance()) {
            setTimingAdvance(other.getTimingAdvance());
          }
          if (other.hasHashCode()) {
            setHashCode(other.getHashCode());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthLte) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int asuLevel_ ;
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the LTE signal level as an asu value between 0..97, 99 is unknown Asu is calculated based on 3GPP RSRP
         * </pre>
         */
        public boolean hasAsuLevel() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the LTE signal level as an asu value between 0..97, 99 is unknown Asu is calculated based on 3GPP RSRP
         * </pre>
         */
        public int getAsuLevel() {
          return asuLevel_;
        }
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the LTE signal level as an asu value between 0..97, 99 is unknown Asu is calculated based on 3GPP RSRP
         * </pre>
         */
        public Builder setAsuLevel(int value) {
          bitField0_ |= 0x00000001;
          asuLevel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the LTE signal level as an asu value between 0..97, 99 is unknown Asu is calculated based on 3GPP RSRP
         * </pre>
         */
        public Builder clearAsuLevel() {
          bitField0_ = (bitField0_ & ~0x00000001);
          asuLevel_ = 0;
          onChanged();
          return this;
        }

        private int dbm_ ;
        /**
         * <code>optional int32 dbm = 2;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public boolean hasDbm() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 dbm = 2;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public int getDbm() {
          return dbm_;
        }
        /**
         * <code>optional int32 dbm = 2;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public Builder setDbm(int value) {
          bitField0_ |= 0x00000002;
          dbm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 dbm = 2;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public Builder clearDbm() {
          bitField0_ = (bitField0_ & ~0x00000002);
          dbm_ = 0;
          onChanged();
          return this;
        }

        private int level_ ;
        /**
         * <code>optional int32 level = 3;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public boolean hasLevel() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 level = 3;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public int getLevel() {
          return level_;
        }
        /**
         * <code>optional int32 level = 3;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public Builder setLevel(int value) {
          bitField0_ |= 0x00000004;
          level_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 level = 3;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public Builder clearLevel() {
          bitField0_ = (bitField0_ & ~0x00000004);
          level_ = 0;
          onChanged();
          return this;
        }

        private int timingAdvance_ ;
        /**
         * <code>optional int32 timing_advance = 4;</code>
         *
         * <pre>
         * the timing advance value for LTE
         * </pre>
         */
        public boolean hasTimingAdvance() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 timing_advance = 4;</code>
         *
         * <pre>
         * the timing advance value for LTE
         * </pre>
         */
        public int getTimingAdvance() {
          return timingAdvance_;
        }
        /**
         * <code>optional int32 timing_advance = 4;</code>
         *
         * <pre>
         * the timing advance value for LTE
         * </pre>
         */
        public Builder setTimingAdvance(int value) {
          bitField0_ |= 0x00000008;
          timingAdvance_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 timing_advance = 4;</code>
         *
         * <pre>
         * the timing advance value for LTE
         * </pre>
         */
        public Builder clearTimingAdvance() {
          bitField0_ = (bitField0_ & ~0x00000008);
          timingAdvance_ = 0;
          onChanged();
          return this;
        }

        private int hashCode_ ;
        /**
         * <code>optional int32 hash_code = 5;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public boolean hasHashCode() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int32 hash_code = 5;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public int getHashCode() {
          return hashCode_;
        }
        /**
         * <code>optional int32 hash_code = 5;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder setHashCode(int value) {
          bitField0_ |= 0x00000010;
          hashCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 hash_code = 5;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder clearHashCode() {
          bitField0_ = (bitField0_ & ~0x00000010);
          hashCode_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:perfloc.CellularReading.CellSignalStrengthLte)
      }

      static {
        defaultInstance = new CellSignalStrengthLte(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:perfloc.CellularReading.CellSignalStrengthLte)
    }

    public interface CellSignalStrengthWcdmaOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfloc.CellularReading.CellSignalStrengthWcdma)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
       * </pre>
       */
      boolean hasAsuLevel();
      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
       * </pre>
       */
      int getAsuLevel();

      /**
       * <code>optional int32 dbm = 2;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      boolean hasDbm();
      /**
       * <code>optional int32 dbm = 2;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      int getDbm();

      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      boolean hasLevel();
      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      int getLevel();

      /**
       * <code>optional int32 hash_code = 4;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      boolean hasHashCode();
      /**
       * <code>optional int32 hash_code = 4;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      int getHashCode();
    }
    /**
     * Protobuf type {@code perfloc.CellularReading.CellSignalStrengthWcdma}
     */
    public static final class CellSignalStrengthWcdma extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:perfloc.CellularReading.CellSignalStrengthWcdma)
        CellSignalStrengthWcdmaOrBuilder {
      // Use CellSignalStrengthWcdma.newBuilder() to construct.
      private CellSignalStrengthWcdma(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CellSignalStrengthWcdma(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CellSignalStrengthWcdma defaultInstance;
      public static CellSignalStrengthWcdma getDefaultInstance() {
        return defaultInstance;
      }

      public CellSignalStrengthWcdma getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CellSignalStrengthWcdma(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                asuLevel_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                dbm_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                level_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                hashCode_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthWcdma_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthWcdma_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.class, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.Builder.class);
      }

      public static com.google.protobuf.Parser<CellSignalStrengthWcdma> PARSER =
          new com.google.protobuf.AbstractParser<CellSignalStrengthWcdma>() {
        public CellSignalStrengthWcdma parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CellSignalStrengthWcdma(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CellSignalStrengthWcdma> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ASU_LEVEL_FIELD_NUMBER = 1;
      private int asuLevel_;
      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
       * </pre>
       */
      public boolean hasAsuLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 asu_level = 1;</code>
       *
       * <pre>
       * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
       * </pre>
       */
      public int getAsuLevel() {
        return asuLevel_;
      }

      public static final int DBM_FIELD_NUMBER = 2;
      private int dbm_;
      /**
       * <code>optional int32 dbm = 2;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      public boolean hasDbm() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 dbm = 2;</code>
       *
       * <pre>
       * the signal strength as dBm
       * </pre>
       */
      public int getDbm() {
        return dbm_;
      }

      public static final int LEVEL_FIELD_NUMBER = 3;
      private int level_;
      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 level = 3;</code>
       *
       * <pre>
       * signal level as an int from 0..4
       * </pre>
       */
      public int getLevel() {
        return level_;
      }

      public static final int HASH_CODE_FIELD_NUMBER = 4;
      private int hashCode_;
      /**
       * <code>optional int32 hash_code = 4;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public boolean hasHashCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 hash_code = 4;</code>
       *
       * <pre>
       * An integer hash code for this object
       * </pre>
       */
      public int getHashCode() {
        return hashCode_;
      }

      private void initFields() {
        asuLevel_ = 0;
        dbm_ = 0;
        level_ = 0;
        hashCode_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, asuLevel_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, dbm_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, level_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, hashCode_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, asuLevel_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, dbm_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, level_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, hashCode_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfloc.CellularReading.CellSignalStrengthWcdma}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfloc.CellularReading.CellSignalStrengthWcdma)
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdmaOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthWcdma_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthWcdma_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.class, gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.Builder.class);
        }

        // Construct using gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          asuLevel_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          dbm_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          level_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          hashCode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_CellSignalStrengthWcdma_descriptor;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma getDefaultInstanceForType() {
          return gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.getDefaultInstance();
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma build() {
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma buildPartial() {
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma result = new gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.asuLevel_ = asuLevel_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.dbm_ = dbm_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.level_ = level_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.hashCode_ = hashCode_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma) {
            return mergeFrom((gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma other) {
          if (other == gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma.getDefaultInstance()) return this;
          if (other.hasAsuLevel()) {
            setAsuLevel(other.getAsuLevel());
          }
          if (other.hasDbm()) {
            setDbm(other.getDbm());
          }
          if (other.hasLevel()) {
            setLevel(other.getLevel());
          }
          if (other.hasHashCode()) {
            setHashCode(other.getHashCode());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (gov.nist.perfloc.CellularData.CellularReading.CellSignalStrengthWcdma) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int asuLevel_ ;
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
         * </pre>
         */
        public boolean hasAsuLevel() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
         * </pre>
         */
        public int getAsuLevel() {
          return asuLevel_;
        }
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
         * </pre>
         */
        public Builder setAsuLevel(int value) {
          bitField0_ |= 0x00000001;
          asuLevel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 asu_level = 1;</code>
         *
         * <pre>
         * the signal level as an asu value between 0..31, 99 is unknown Asu is calculated based on 3GPP RSRP
         * </pre>
         */
        public Builder clearAsuLevel() {
          bitField0_ = (bitField0_ & ~0x00000001);
          asuLevel_ = 0;
          onChanged();
          return this;
        }

        private int dbm_ ;
        /**
         * <code>optional int32 dbm = 2;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public boolean hasDbm() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 dbm = 2;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public int getDbm() {
          return dbm_;
        }
        /**
         * <code>optional int32 dbm = 2;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public Builder setDbm(int value) {
          bitField0_ |= 0x00000002;
          dbm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 dbm = 2;</code>
         *
         * <pre>
         * the signal strength as dBm
         * </pre>
         */
        public Builder clearDbm() {
          bitField0_ = (bitField0_ & ~0x00000002);
          dbm_ = 0;
          onChanged();
          return this;
        }

        private int level_ ;
        /**
         * <code>optional int32 level = 3;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public boolean hasLevel() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int32 level = 3;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public int getLevel() {
          return level_;
        }
        /**
         * <code>optional int32 level = 3;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public Builder setLevel(int value) {
          bitField0_ |= 0x00000004;
          level_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 level = 3;</code>
         *
         * <pre>
         * signal level as an int from 0..4
         * </pre>
         */
        public Builder clearLevel() {
          bitField0_ = (bitField0_ & ~0x00000004);
          level_ = 0;
          onChanged();
          return this;
        }

        private int hashCode_ ;
        /**
         * <code>optional int32 hash_code = 4;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public boolean hasHashCode() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 hash_code = 4;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public int getHashCode() {
          return hashCode_;
        }
        /**
         * <code>optional int32 hash_code = 4;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder setHashCode(int value) {
          bitField0_ |= 0x00000008;
          hashCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 hash_code = 4;</code>
         *
         * <pre>
         * An integer hash code for this object
         * </pre>
         */
        public Builder clearHashCode() {
          bitField0_ = (bitField0_ & ~0x00000008);
          hashCode_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:perfloc.CellularReading.CellSignalStrengthWcdma)
      }

      static {
        defaultInstance = new CellSignalStrengthWcdma(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:perfloc.CellularReading.CellSignalStrengthWcdma)
    }

    private int bitField0_;
    public static final int SEQUENCE_NR_FIELD_NUMBER = 1;
    private int sequenceNr_;
    /**
     * <code>optional int32 sequence_nr = 1;</code>
     *
     * <pre>
     * Sequence number of a reading
     * </pre>
     */
    public boolean hasSequenceNr() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 sequence_nr = 1;</code>
     *
     * <pre>
     * Sequence number of a reading
     * </pre>
     */
    public int getSequenceNr() {
      return sequenceNr_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    /**
     * <code>optional int64 timestamp = 2;</code>
     *
     * <pre>
     * Time of this scan in milliseconds
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 timestamp = 2;</code>
     *
     * <pre>
     * Time of this scan in milliseconds
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int LAST_DOT_NR_FIELD_NUMBER = 3;
    private int lastDotNr_;
    /**
     * <code>optional int32 last_dot_nr = 3;</code>
     *
     * <pre>
     * Location where the measurment was taken
     * </pre>
     */
    public boolean hasLastDotNr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 last_dot_nr = 3;</code>
     *
     * <pre>
     * Location where the measurment was taken
     * </pre>
     */
    public int getLastDotNr() {
      return lastDotNr_;
    }

    public static final int CELLULAR_INFO_FIELD_NUMBER = 4;
    private java.util.List<gov.nist.perfloc.CellularData.CellularReading.CellInfo> cellularInfo_;
    /**
     * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
     *
     * <pre>
     * Format defining a cellular signal
     * </pre>
     */
    public java.util.List<gov.nist.perfloc.CellularData.CellularReading.CellInfo> getCellularInfoList() {
      return cellularInfo_;
    }
    /**
     * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
     *
     * <pre>
     * Format defining a cellular signal
     * </pre>
     */
    public java.util.List<? extends gov.nist.perfloc.CellularData.CellularReading.CellInfoOrBuilder> 
        getCellularInfoOrBuilderList() {
      return cellularInfo_;
    }
    /**
     * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
     *
     * <pre>
     * Format defining a cellular signal
     * </pre>
     */
    public int getCellularInfoCount() {
      return cellularInfo_.size();
    }
    /**
     * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
     *
     * <pre>
     * Format defining a cellular signal
     * </pre>
     */
    public gov.nist.perfloc.CellularData.CellularReading.CellInfo getCellularInfo(int index) {
      return cellularInfo_.get(index);
    }
    /**
     * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
     *
     * <pre>
     * Format defining a cellular signal
     * </pre>
     */
    public gov.nist.perfloc.CellularData.CellularReading.CellInfoOrBuilder getCellularInfoOrBuilder(
        int index) {
      return cellularInfo_.get(index);
    }

    private void initFields() {
      sequenceNr_ = 0;
      timestamp_ = 0L;
      lastDotNr_ = 0;
      cellularInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, sequenceNr_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lastDotNr_);
      }
      for (int i = 0; i < cellularInfo_.size(); i++) {
        output.writeMessage(4, cellularInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sequenceNr_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lastDotNr_);
      }
      for (int i = 0; i < cellularInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cellularInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static gov.nist.perfloc.CellularData.CellularReading parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gov.nist.perfloc.CellularData.CellularReading parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gov.nist.perfloc.CellularData.CellularReading parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gov.nist.perfloc.CellularData.CellularReading parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gov.nist.perfloc.CellularData.CellularReading parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gov.nist.perfloc.CellularData.CellularReading parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static gov.nist.perfloc.CellularData.CellularReading parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static gov.nist.perfloc.CellularData.CellularReading parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static gov.nist.perfloc.CellularData.CellularReading parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gov.nist.perfloc.CellularData.CellularReading parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(gov.nist.perfloc.CellularData.CellularReading prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfloc.CellularReading}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfloc.CellularReading)
        gov.nist.perfloc.CellularData.CellularReadingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gov.nist.perfloc.CellularData.CellularReading.class, gov.nist.perfloc.CellularData.CellularReading.Builder.class);
      }

      // Construct using gov.nist.perfloc.CellularData.CellularReading.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCellularInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sequenceNr_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        lastDotNr_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cellularInfoBuilder_ == null) {
          cellularInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          cellularInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gov.nist.perfloc.CellularData.internal_static_perfloc_CellularReading_descriptor;
      }

      public gov.nist.perfloc.CellularData.CellularReading getDefaultInstanceForType() {
        return gov.nist.perfloc.CellularData.CellularReading.getDefaultInstance();
      }

      public gov.nist.perfloc.CellularData.CellularReading build() {
        gov.nist.perfloc.CellularData.CellularReading result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gov.nist.perfloc.CellularData.CellularReading buildPartial() {
        gov.nist.perfloc.CellularData.CellularReading result = new gov.nist.perfloc.CellularData.CellularReading(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sequenceNr_ = sequenceNr_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lastDotNr_ = lastDotNr_;
        if (cellularInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cellularInfo_ = java.util.Collections.unmodifiableList(cellularInfo_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cellularInfo_ = cellularInfo_;
        } else {
          result.cellularInfo_ = cellularInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gov.nist.perfloc.CellularData.CellularReading) {
          return mergeFrom((gov.nist.perfloc.CellularData.CellularReading)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gov.nist.perfloc.CellularData.CellularReading other) {
        if (other == gov.nist.perfloc.CellularData.CellularReading.getDefaultInstance()) return this;
        if (other.hasSequenceNr()) {
          setSequenceNr(other.getSequenceNr());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasLastDotNr()) {
          setLastDotNr(other.getLastDotNr());
        }
        if (cellularInfoBuilder_ == null) {
          if (!other.cellularInfo_.isEmpty()) {
            if (cellularInfo_.isEmpty()) {
              cellularInfo_ = other.cellularInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCellularInfoIsMutable();
              cellularInfo_.addAll(other.cellularInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.cellularInfo_.isEmpty()) {
            if (cellularInfoBuilder_.isEmpty()) {
              cellularInfoBuilder_.dispose();
              cellularInfoBuilder_ = null;
              cellularInfo_ = other.cellularInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
              cellularInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCellularInfoFieldBuilder() : null;
            } else {
              cellularInfoBuilder_.addAllMessages(other.cellularInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gov.nist.perfloc.CellularData.CellularReading parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gov.nist.perfloc.CellularData.CellularReading) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sequenceNr_ ;
      /**
       * <code>optional int32 sequence_nr = 1;</code>
       *
       * <pre>
       * Sequence number of a reading
       * </pre>
       */
      public boolean hasSequenceNr() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 sequence_nr = 1;</code>
       *
       * <pre>
       * Sequence number of a reading
       * </pre>
       */
      public int getSequenceNr() {
        return sequenceNr_;
      }
      /**
       * <code>optional int32 sequence_nr = 1;</code>
       *
       * <pre>
       * Sequence number of a reading
       * </pre>
       */
      public Builder setSequenceNr(int value) {
        bitField0_ |= 0x00000001;
        sequenceNr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sequence_nr = 1;</code>
       *
       * <pre>
       * Sequence number of a reading
       * </pre>
       */
      public Builder clearSequenceNr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sequenceNr_ = 0;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>optional int64 timestamp = 2;</code>
       *
       * <pre>
       * Time of this scan in milliseconds
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 timestamp = 2;</code>
       *
       * <pre>
       * Time of this scan in milliseconds
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional int64 timestamp = 2;</code>
       *
       * <pre>
       * Time of this scan in milliseconds
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timestamp = 2;</code>
       *
       * <pre>
       * Time of this scan in milliseconds
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private int lastDotNr_ ;
      /**
       * <code>optional int32 last_dot_nr = 3;</code>
       *
       * <pre>
       * Location where the measurment was taken
       * </pre>
       */
      public boolean hasLastDotNr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 last_dot_nr = 3;</code>
       *
       * <pre>
       * Location where the measurment was taken
       * </pre>
       */
      public int getLastDotNr() {
        return lastDotNr_;
      }
      /**
       * <code>optional int32 last_dot_nr = 3;</code>
       *
       * <pre>
       * Location where the measurment was taken
       * </pre>
       */
      public Builder setLastDotNr(int value) {
        bitField0_ |= 0x00000004;
        lastDotNr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 last_dot_nr = 3;</code>
       *
       * <pre>
       * Location where the measurment was taken
       * </pre>
       */
      public Builder clearLastDotNr() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lastDotNr_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<gov.nist.perfloc.CellularData.CellularReading.CellInfo> cellularInfo_ =
        java.util.Collections.emptyList();
      private void ensureCellularInfoIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cellularInfo_ = new java.util.ArrayList<gov.nist.perfloc.CellularData.CellularReading.CellInfo>(cellularInfo_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          gov.nist.perfloc.CellularData.CellularReading.CellInfo, gov.nist.perfloc.CellularData.CellularReading.CellInfo.Builder, gov.nist.perfloc.CellularData.CellularReading.CellInfoOrBuilder> cellularInfoBuilder_;

      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public java.util.List<gov.nist.perfloc.CellularData.CellularReading.CellInfo> getCellularInfoList() {
        if (cellularInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cellularInfo_);
        } else {
          return cellularInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public int getCellularInfoCount() {
        if (cellularInfoBuilder_ == null) {
          return cellularInfo_.size();
        } else {
          return cellularInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellInfo getCellularInfo(int index) {
        if (cellularInfoBuilder_ == null) {
          return cellularInfo_.get(index);
        } else {
          return cellularInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public Builder setCellularInfo(
          int index, gov.nist.perfloc.CellularData.CellularReading.CellInfo value) {
        if (cellularInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCellularInfoIsMutable();
          cellularInfo_.set(index, value);
          onChanged();
        } else {
          cellularInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public Builder setCellularInfo(
          int index, gov.nist.perfloc.CellularData.CellularReading.CellInfo.Builder builderForValue) {
        if (cellularInfoBuilder_ == null) {
          ensureCellularInfoIsMutable();
          cellularInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          cellularInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public Builder addCellularInfo(gov.nist.perfloc.CellularData.CellularReading.CellInfo value) {
        if (cellularInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCellularInfoIsMutable();
          cellularInfo_.add(value);
          onChanged();
        } else {
          cellularInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public Builder addCellularInfo(
          int index, gov.nist.perfloc.CellularData.CellularReading.CellInfo value) {
        if (cellularInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCellularInfoIsMutable();
          cellularInfo_.add(index, value);
          onChanged();
        } else {
          cellularInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public Builder addCellularInfo(
          gov.nist.perfloc.CellularData.CellularReading.CellInfo.Builder builderForValue) {
        if (cellularInfoBuilder_ == null) {
          ensureCellularInfoIsMutable();
          cellularInfo_.add(builderForValue.build());
          onChanged();
        } else {
          cellularInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public Builder addCellularInfo(
          int index, gov.nist.perfloc.CellularData.CellularReading.CellInfo.Builder builderForValue) {
        if (cellularInfoBuilder_ == null) {
          ensureCellularInfoIsMutable();
          cellularInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          cellularInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public Builder addAllCellularInfo(
          java.lang.Iterable<? extends gov.nist.perfloc.CellularData.CellularReading.CellInfo> values) {
        if (cellularInfoBuilder_ == null) {
          ensureCellularInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cellularInfo_);
          onChanged();
        } else {
          cellularInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public Builder clearCellularInfo() {
        if (cellularInfoBuilder_ == null) {
          cellularInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          cellularInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public Builder removeCellularInfo(int index) {
        if (cellularInfoBuilder_ == null) {
          ensureCellularInfoIsMutable();
          cellularInfo_.remove(index);
          onChanged();
        } else {
          cellularInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellInfo.Builder getCellularInfoBuilder(
          int index) {
        return getCellularInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellInfoOrBuilder getCellularInfoOrBuilder(
          int index) {
        if (cellularInfoBuilder_ == null) {
          return cellularInfo_.get(index);  } else {
          return cellularInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public java.util.List<? extends gov.nist.perfloc.CellularData.CellularReading.CellInfoOrBuilder> 
           getCellularInfoOrBuilderList() {
        if (cellularInfoBuilder_ != null) {
          return cellularInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cellularInfo_);
        }
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellInfo.Builder addCellularInfoBuilder() {
        return getCellularInfoFieldBuilder().addBuilder(
            gov.nist.perfloc.CellularData.CellularReading.CellInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public gov.nist.perfloc.CellularData.CellularReading.CellInfo.Builder addCellularInfoBuilder(
          int index) {
        return getCellularInfoFieldBuilder().addBuilder(
            index, gov.nist.perfloc.CellularData.CellularReading.CellInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .perfloc.CellularReading.CellInfo cellular_info = 4;</code>
       *
       * <pre>
       * Format defining a cellular signal
       * </pre>
       */
      public java.util.List<gov.nist.perfloc.CellularData.CellularReading.CellInfo.Builder> 
           getCellularInfoBuilderList() {
        return getCellularInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          gov.nist.perfloc.CellularData.CellularReading.CellInfo, gov.nist.perfloc.CellularData.CellularReading.CellInfo.Builder, gov.nist.perfloc.CellularData.CellularReading.CellInfoOrBuilder> 
          getCellularInfoFieldBuilder() {
        if (cellularInfoBuilder_ == null) {
          cellularInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              gov.nist.perfloc.CellularData.CellularReading.CellInfo, gov.nist.perfloc.CellularData.CellularReading.CellInfo.Builder, gov.nist.perfloc.CellularData.CellularReading.CellInfoOrBuilder>(
                  cellularInfo_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cellularInfo_ = null;
        }
        return cellularInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:perfloc.CellularReading)
    }

    static {
      defaultInstance = new CellularReading(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:perfloc.CellularReading)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfloc_CellularReading_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfloc_CellularReading_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfloc_CellularReading_CellInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfloc_CellularReading_CellInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfloc_CellularReading_CellIdentityCmda_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfloc_CellularReading_CellIdentityCmda_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfloc_CellularReading_CellIdentityGsm_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfloc_CellularReading_CellIdentityGsm_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfloc_CellularReading_CellIdentityLte_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfloc_CellularReading_CellIdentityLte_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfloc_CellularReading_CellIdentityWcdma_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfloc_CellularReading_CellIdentityWcdma_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfloc_CellularReading_CellSignalStrengthCdma_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfloc_CellularReading_CellSignalStrengthCdma_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfloc_CellularReading_CellSignalStrengthGsm_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfloc_CellularReading_CellSignalStrengthGsm_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfloc_CellularReading_CellSignalStrengthLte_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfloc_CellularReading_CellSignalStrengthLte_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfloc_CellularReading_CellSignalStrengthWcdma_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfloc_CellularReading_CellSignalStrengthWcdma_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023cellular_data.proto\022\007perfloc\"\317\016\n\017Cellu" +
      "larReading\022\023\n\013sequence_nr\030\001 \001(\005\022\021\n\ttimes" +
      "tamp\030\002 \001(\003\022\023\n\013last_dot_nr\030\003 \001(\005\0228\n\rcellu" +
      "lar_info\030\004 \003(\0132!.perfloc.CellularReading" +
      ".CellInfo\032\300\005\n\010CellInfo\022\021\n\ttimestamp\030\001 \001(" +
      "\004\022\021\n\thash_code\030\002 \001(\005\022\022\n\nregistered\030\003 \001(\010" +
      "\022:\n\014network_type\030\004 \001(\0162$.perfloc.Cellula" +
      "rReading.NetworkType\022@\n\rcdma_identity\030\005 " +
      "\001(\0132).perfloc.CellularReading.CellIdenti" +
      "tyCmda\022M\n\024cdma_signal_strength\030\006 \001(\0132/.p",
      "erfloc.CellularReading.CellSignalStrengt" +
      "hCdma\022>\n\014gsm_identity\030\007 \001(\0132(.perfloc.Ce" +
      "llularReading.CellIdentityGsm\022K\n\023gsm_sig" +
      "nal_strength\030\010 \001(\0132..perfloc.CellularRea" +
      "ding.CellSignalStrengthGsm\022>\n\014lte_identi" +
      "ty\030\t \001(\0132(.perfloc.CellularReading.CellI" +
      "dentityLte\022K\n\023lte_signal_strength\030\n \001(\0132" +
      "..perfloc.CellularReading.CellSignalStre" +
      "ngthLte\022B\n\016wcdma_identity\030\013 \001(\0132*.perflo" +
      "c.CellularReading.CellIdentityWcdma\022O\n\025w",
      "cdma_signal_strength\030\014 \001(\01320.perfloc.Cel" +
      "lularReading.CellSignalStrengthWcdma\032\211\001\n" +
      "\020CellIdentityCmda\022\026\n\016basestation_id\030\001 \001(" +
      "\005\022\020\n\010latitude\030\002 \001(\005\022\021\n\tlongitude\030\003 \001(\005\022\022" +
      "\n\nnetwork_id\030\004 \001(\005\022\021\n\tsystem_id\030\005 \001(\005\022\021\n" +
      "\thash_code\030\006 \001(\005\032e\n\017CellIdentityGsm\022\013\n\003c" +
      "id\030\001 \001(\005\022\013\n\003lac\030\002 \001(\005\022\013\n\003mcc\030\003 \001(\005\022\013\n\003mn" +
      "c\030\004 \001(\005\022\013\n\003psc\030\005 \001(\005\022\021\n\thash_code\030\006 \001(\005\032" +
      "d\n\017CellIdentityLte\022\n\n\002ci\030\001 \001(\005\022\013\n\003mcc\030\002 " +
      "\001(\005\022\013\n\003mnc\030\003 \001(\005\022\013\n\003pci\030\004 \001(\005\022\013\n\003tac\030\005 \001",
      "(\005\022\021\n\thash_code\030\006 \001(\005\032g\n\021CellIdentityWcd" +
      "ma\022\013\n\003cid\030\001 \001(\005\022\013\n\003lac\030\002 \001(\005\022\013\n\003mcc\030\003 \001(" +
      "\005\022\013\n\003mnc\030\004 \001(\005\022\013\n\003psc\030\005 \001(\005\022\021\n\thash_code" +
      "\030\006 \001(\005\032\336\001\n\026CellSignalStrengthCdma\022\021\n\tasu" +
      "_level\030\001 \001(\005\022\020\n\010cdma_dbm\030\002 \001(\005\022\021\n\tcdma_e" +
      "cio\030\003 \001(\005\022\022\n\ncdma_level\030\004 \001(\005\022\013\n\003dbm\030\005 \001" +
      "(\005\022\020\n\010evdo_dbm\030\006 \001(\005\022\021\n\tevdo_ecio\030\007 \001(\005\022" +
      "\022\n\nevdo_level\030\010 \001(\005\022\020\n\010evdo_snr\030\t \001(\005\022\r\n" +
      "\005level\030\n \001(\005\022\021\n\thash_code\030\013 \001(\005\032Y\n\025CellS" +
      "ignalStrengthGsm\022\021\n\tasu_level\030\001 \001(\005\022\013\n\003d",
      "bm\030\002 \001(\005\022\r\n\005level\030\003 \001(\005\022\021\n\thash_code\030\004 \001" +
      "(\005\032q\n\025CellSignalStrengthLte\022\021\n\tasu_level" +
      "\030\001 \001(\005\022\013\n\003dbm\030\002 \001(\005\022\r\n\005level\030\003 \001(\005\022\026\n\016ti" +
      "ming_advance\030\004 \001(\005\022\021\n\thash_code\030\005 \001(\005\032[\n" +
      "\027CellSignalStrengthWcdma\022\021\n\tasu_level\030\001 " +
      "\001(\005\022\013\n\003dbm\030\002 \001(\005\022\r\n\005level\030\003 \001(\005\022\021\n\thash_" +
      "code\030\004 \001(\005\"4\n\013NetworkType\022\010\n\004CDMA\020\000\022\007\n\003G" +
      "SM\020\001\022\007\n\003LTE\020\002\022\t\n\005WCDMA\020\003B\022\n\020gov.nist.per" +
      "floc"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_perfloc_CellularReading_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfloc_CellularReading_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfloc_CellularReading_descriptor,
        new java.lang.String[] { "SequenceNr", "Timestamp", "LastDotNr", "CellularInfo", });
    internal_static_perfloc_CellularReading_CellInfo_descriptor =
      internal_static_perfloc_CellularReading_descriptor.getNestedTypes().get(0);
    internal_static_perfloc_CellularReading_CellInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfloc_CellularReading_CellInfo_descriptor,
        new java.lang.String[] { "Timestamp", "HashCode", "Registered", "NetworkType", "CdmaIdentity", "CdmaSignalStrength", "GsmIdentity", "GsmSignalStrength", "LteIdentity", "LteSignalStrength", "WcdmaIdentity", "WcdmaSignalStrength", });
    internal_static_perfloc_CellularReading_CellIdentityCmda_descriptor =
      internal_static_perfloc_CellularReading_descriptor.getNestedTypes().get(1);
    internal_static_perfloc_CellularReading_CellIdentityCmda_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfloc_CellularReading_CellIdentityCmda_descriptor,
        new java.lang.String[] { "BasestationId", "Latitude", "Longitude", "NetworkId", "SystemId", "HashCode", });
    internal_static_perfloc_CellularReading_CellIdentityGsm_descriptor =
      internal_static_perfloc_CellularReading_descriptor.getNestedTypes().get(2);
    internal_static_perfloc_CellularReading_CellIdentityGsm_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfloc_CellularReading_CellIdentityGsm_descriptor,
        new java.lang.String[] { "Cid", "Lac", "Mcc", "Mnc", "Psc", "HashCode", });
    internal_static_perfloc_CellularReading_CellIdentityLte_descriptor =
      internal_static_perfloc_CellularReading_descriptor.getNestedTypes().get(3);
    internal_static_perfloc_CellularReading_CellIdentityLte_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfloc_CellularReading_CellIdentityLte_descriptor,
        new java.lang.String[] { "Ci", "Mcc", "Mnc", "Pci", "Tac", "HashCode", });
    internal_static_perfloc_CellularReading_CellIdentityWcdma_descriptor =
      internal_static_perfloc_CellularReading_descriptor.getNestedTypes().get(4);
    internal_static_perfloc_CellularReading_CellIdentityWcdma_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfloc_CellularReading_CellIdentityWcdma_descriptor,
        new java.lang.String[] { "Cid", "Lac", "Mcc", "Mnc", "Psc", "HashCode", });
    internal_static_perfloc_CellularReading_CellSignalStrengthCdma_descriptor =
      internal_static_perfloc_CellularReading_descriptor.getNestedTypes().get(5);
    internal_static_perfloc_CellularReading_CellSignalStrengthCdma_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfloc_CellularReading_CellSignalStrengthCdma_descriptor,
        new java.lang.String[] { "AsuLevel", "CdmaDbm", "CdmaEcio", "CdmaLevel", "Dbm", "EvdoDbm", "EvdoEcio", "EvdoLevel", "EvdoSnr", "Level", "HashCode", });
    internal_static_perfloc_CellularReading_CellSignalStrengthGsm_descriptor =
      internal_static_perfloc_CellularReading_descriptor.getNestedTypes().get(6);
    internal_static_perfloc_CellularReading_CellSignalStrengthGsm_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfloc_CellularReading_CellSignalStrengthGsm_descriptor,
        new java.lang.String[] { "AsuLevel", "Dbm", "Level", "HashCode", });
    internal_static_perfloc_CellularReading_CellSignalStrengthLte_descriptor =
      internal_static_perfloc_CellularReading_descriptor.getNestedTypes().get(7);
    internal_static_perfloc_CellularReading_CellSignalStrengthLte_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfloc_CellularReading_CellSignalStrengthLte_descriptor,
        new java.lang.String[] { "AsuLevel", "Dbm", "Level", "TimingAdvance", "HashCode", });
    internal_static_perfloc_CellularReading_CellSignalStrengthWcdma_descriptor =
      internal_static_perfloc_CellularReading_descriptor.getNestedTypes().get(8);
    internal_static_perfloc_CellularReading_CellSignalStrengthWcdma_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfloc_CellularReading_CellSignalStrengthWcdma_descriptor,
        new java.lang.String[] { "AsuLevel", "Dbm", "Level", "HashCode", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
